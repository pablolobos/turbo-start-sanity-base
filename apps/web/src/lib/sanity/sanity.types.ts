/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type NavbarLinkGroup = {
  _type: "navbarLinkGroup";
  title?: string;
  links?: Array<
    {
      _key: string;
    } & NavbarColumnLink
  >;
};

export type NavbarColumnLink = {
  _type: "navbarColumnLink";
  icon?: IconPicker;
  name?: string;
  description?: string;
  url?: CustomUrl;
};

export type FeaturedBlogs = {
  _type: "featuredBlogs";
  title?: string;
  subtitle?: string;
  displayMode?: "latest" | "curated";
  blogCount?: "1" | "2" | "3";
  blogs?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "blog";
  }>;
  showViewAllButton?: "yes" | "no";
  buttonText?: string;
};

export type InfoSection = {
  _type: "infoSection";
  title?: string;
  headingLevel?: "h1" | "h2" | "h3" | "h4";
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type Tabs = {
  _type: "tabs";
  title?: string;
  description?: string;
  tabs?: Array<{
    label?: string;
    content?: Array<
      | {
          badge?: string;
          title?: string;
          titleFont?: "default" | "statement";
          layout?: "default" | "fullImage";
          richText?: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
                listItem?: "number" | "bullet";
                markDefs?: Array<{
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                caption?: string;
                _type: "image";
                _key: string;
              }
            | ({
                _key: string;
              } & Button)
          >;
          backgroundType?: "image" | "video";
          backgroundImage?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
          };
          backgroundVideo?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
            };
            media?: unknown;
            _type: "file";
          };
          image?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
          };
          buttons?: Array<
            {
              _key: string;
            } & Button
          >;
          _type: "mainHero";
          _key: string;
        }
      | {
          variant?: "default" | "alt" | "accent1" | "accent2" | "brand";
          badge?: string;
          title?: string;
          titleFont?: "default" | "statement";
          richText?: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
                listItem?: "number" | "bullet";
                markDefs?: Array<{
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                caption?: string;
                _type: "image";
                _key: string;
              }
            | ({
                _key: string;
              } & Button)
          >;
          image?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
          };
          imageAlignment?: "default" | "fit";
          buttons?: Array<
            {
              _key: string;
            } & Button
          >;
          _type: "hero";
          _key: string;
        }
      | {
          variant?:
            | "default"
            | "alt"
            | "accent1"
            | "accent2"
            | "brand"
            | "inset";
          primaryBadge?: string;
          primaryTitle?: string;
          primaryRichText?: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?:
              | "normal"
              | "h1"
              | "h2"
              | "h3"
              | "h4"
              | "h5"
              | "h6"
              | "blockquote";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }>;
          primaryImage?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
          };
          primaryButtons?: Array<
            {
              _key: string;
            } & Button
          >;
          secondaryBadge?: string;
          secondaryTitle?: string;
          secondaryRichText?: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?:
              | "normal"
              | "h1"
              | "h2"
              | "h3"
              | "h4"
              | "h5"
              | "h6"
              | "blockquote";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }>;
          secondaryImage?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
          };
          secondaryButtons?: Array<
            {
              _key: string;
            } & Button
          >;
          _type: "doubleHero";
          _key: string;
        }
      | {
          eyebrow?: string;
          title?: string;
          richText?: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
                listItem?: "number" | "bullet";
                markDefs?: Array<{
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                caption?: string;
                _type: "image";
                _key: string;
              }
            | ({
                _key: string;
              } & Button)
          >;
          buttons?: Array<
            {
              _key: string;
            } & Button
          >;
          _type: "cta";
          _key: string;
        }
      | {
          eyebrow?: string;
          title?: string;
          richText?: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
            listItem?: "number" | "bullet";
            markDefs?: Array<{
              customLink?: CustomUrl;
              _type: "customLink";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }>;
          cards?: Array<{
            icon?: IconPicker;
            title?: string;
            richText?: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
              listItem?: "number" | "bullet";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }>;
            _type: "featureCardIcon";
            _key: string;
          }>;
          _type: "featureCardsIcon";
          _key: string;
        }
      | {
          eyebrow?: string;
          title?: string;
          subtitle?: string;
          link?: {
            title?: string;
            description?: string;
            url?: CustomUrl;
          };
          faqs?: Array<{
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            _key: string;
            [internalGroqTypeReferenceTo]?: "faq";
          }>;
          _type: "faqAccordion";
          _key: string;
        }
      | {
          eyebrow?: string;
          title?: string;
          richText?: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
                listItem?: "number" | "bullet";
                markDefs?: Array<{
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                caption?: string;
                _type: "image";
                _key: string;
              }
            | ({
                _key: string;
              } & Button)
          >;
          buttons?: Array<
            {
              _key: string;
            } & Button
          >;
          cards?: Array<{
            title?: string;
            description?: string;
            image?: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
            };
            url?: CustomUrl;
            _type: "imageLinkCard";
            _key: string;
          }>;
          _type: "imageLinkCards";
          _key: string;
        }
      | {
          title?: string;
          description?: string;
          images?: Array<
            {
              _key: string;
            } & GalleryImage
          >;
          layout?: "grid" | "carousel" | "masonry" | "bento";
          columns?: "2" | "3" | "4";
          slidesPerRow?: 1 | 2 | 3 | 4 | 5;
          _type: "imageGallery";
          _key: string;
        }
      | {
          title?: string;
          subTitle?: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
            listItem?: "number" | "bullet";
            markDefs?: Array<{
              customLink?: CustomUrl;
              _type: "customLink";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }>;
          helperText?: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
            listItem?: "number" | "bullet";
            markDefs?: Array<{
              customLink?: CustomUrl;
              _type: "customLink";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }>;
          _type: "subscribeNewsletter";
          _key: string;
        }
      | {
          title?: string;
          description?: string;
          form?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "formularios";
          };
          displayMode?: "inline" | "modal";
          triggerText?: string;
          buttonPosition?: "default" | "fixed";
          variant?: "default" | "withBackground" | "centered";
          _type: "formBlock";
          _key: string;
        }
      | {
          title?: string;
          description?: string;
          specifications?: Array<
            {
              _key: string;
            } & SpecificationItem
          >;
          variant?: "default" | "striped" | "bordered" | "compact";
          _type: "specificationsTable";
          _key: string;
        }
      | {
          title?: string;
          description?: string;
          columnCount?: 3 | 4 | 5 | 6;
          columnHeaders?: Array<string>;
          rows?: Array<{
            cells?: Array<
              | {
                  content?: string;
                  isLastColumn?: boolean;
                  _type: "cell";
                  _key: string;
                }
              | {
                  content?: Array<
                    | {
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?:
                          | "normal"
                          | "h2"
                          | "h3"
                          | "h4"
                          | "h5"
                          | "h6"
                          | "inline";
                        listItem?: "number" | "bullet";
                        markDefs?: Array<{
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }>;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }
                    | {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        caption?: string;
                        _type: "image";
                        _key: string;
                      }
                    | ({
                        _key: string;
                      } & Button)
                  >;
                  isLastColumn?: boolean;
                  _type: "richCell";
                  _key: string;
                }
            >;
            _type: "row";
            _key: string;
          }>;
          variant?: "default" | "striped" | "bordered" | "compact";
          _type: "genericTable";
          _key: string;
        }
      | {
          title?: string;
          description?: string;
          aspects?: Array<{
            title?: string;
            variant?: "image" | "icon" | "none";
            image?: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
            };
            content?: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "normal"
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline";
                  listItem?: "number" | "bullet";
                  markDefs?: Array<{
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | ({
                  _key: string;
                } & Button)
            >;
            _type: "aspect";
            _key: string;
          }>;
          columns?: "2" | "3" | "4";
          _type: "highlightedAspects";
          _key: string;
        }
      | {
          title?: string;
          productType?: "camiones" | "buses" | "motoresPenta";
          taxonomyFilter?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "skosConcept";
          };
          _type: "productListing";
          _key: string;
        }
      | {
          title?: string;
          videoType?: "mp4" | "youtube";
          mp4File?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
            };
            media?: unknown;
            _type: "file";
          };
          youtubeUrl?: string;
          posterImage?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
          };
          showControls?: "yes" | "no";
          autoplay?: "yes" | "no";
          loop?: "yes" | "no";
          allowFullscreen?: "yes" | "no";
          _type: "videoBlock";
          _key: string;
        }
      | {
          variant?: "default" | "alt" | "accent1" | "accent2" | "brand";
          badge?: string;
          title?: string;
          titleFont?: "default" | "statement";
          richText?: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
                listItem?: "number" | "bullet";
                markDefs?: Array<{
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                caption?: string;
                _type: "image";
                _key: string;
              }
            | ({
                _key: string;
              } & Button)
          >;
          videoType?: "mp4" | "youtube";
          mp4File?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
            };
            media?: unknown;
            _type: "file";
          };
          youtubeUrl?: string;
          posterImage?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
          };
          showControls?: "yes" | "no";
          autoplay?: "yes" | "no";
          loop?: "yes" | "no";
          buttons?: Array<
            {
              _key: string;
            } & Button
          >;
          _type: "videoHero";
          _key: string;
        }
      | {
          richText?: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
                listItem?: "number" | "bullet";
                markDefs?: Array<{
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                caption?: string;
                _type: "image";
                _key: string;
              }
            | ({
                _key: string;
              } & Button)
          >;
          _type: "textBlock";
          _key: string;
        }
      | {
          title?: string;
          description?: string;
          showMap?: boolean;
          showAllRegions?: boolean;
          selectedRegions?: Array<string>;
          variant?: "default" | "cards" | "compact";
          _type: "sucursalesSelector";
          _key: string;
        }
      | {
          title?: string;
          description?: string;
          cursos?: Array<{
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            _key: string;
            [internalGroqTypeReferenceTo]?: "cursos";
          }>;
          displayMode?: "grid" | "list";
          showAllDates?: "yes" | "no";
          _type: "cursosBlock";
          _key: string;
        }
    >;
    _type: "tab";
    _key: string;
  }>;
};

export type CursosBlock = {
  _type: "cursosBlock";
  title?: string;
  description?: string;
  cursos?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "cursos";
  }>;
  displayMode?: "grid" | "list";
  showAllDates?: "yes" | "no";
};

export type SucursalesSelector = {
  _type: "sucursalesSelector";
  title?: string;
  description?: string;
  showMap?: boolean;
  showAllRegions?: boolean;
  selectedRegions?: Array<string>;
  variant?: "default" | "cards" | "compact";
};

export type TextBlock = {
  _type: "textBlock";
  richText?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
        listItem?: "number" | "bullet";
        markDefs?: Array<{
          customLink?: CustomUrl;
          _type: "customLink";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        caption?: string;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Button)
  >;
};

export type VideoHero = {
  _type: "videoHero";
  variant?: "default" | "alt" | "accent1" | "accent2" | "brand";
  badge?: string;
  title?: string;
  titleFont?: "default" | "statement";
  richText?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
        listItem?: "number" | "bullet";
        markDefs?: Array<{
          customLink?: CustomUrl;
          _type: "customLink";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        caption?: string;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Button)
  >;
  videoType?: "mp4" | "youtube";
  mp4File?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    media?: unknown;
    _type: "file";
  };
  youtubeUrl?: string;
  posterImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  showControls?: "yes" | "no";
  autoplay?: "yes" | "no";
  loop?: "yes" | "no";
  buttons?: Array<
    {
      _key: string;
    } & Button
  >;
};

export type VideoBlock = {
  _type: "videoBlock";
  title?: string;
  videoType?: "mp4" | "youtube";
  mp4File?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    media?: unknown;
    _type: "file";
  };
  youtubeUrl?: string;
  posterImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  showControls?: "yes" | "no";
  autoplay?: "yes" | "no";
  loop?: "yes" | "no";
  allowFullscreen?: "yes" | "no";
};

export type ProductListing = {
  _type: "productListing";
  title?: string;
  productType?: "camiones" | "buses" | "motoresPenta";
  taxonomyFilter?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "skosConcept";
  };
};

export type HighlightedAspects = {
  _type: "highlightedAspects";
  title?: string;
  description?: string;
  aspects?: Array<{
    title?: string;
    variant?: "image" | "icon" | "none";
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    content?: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
          listItem?: "number" | "bullet";
          markDefs?: Array<{
            customLink?: CustomUrl;
            _type: "customLink";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | ({
          _key: string;
        } & Button)
    >;
    _type: "aspect";
    _key: string;
  }>;
  columns?: "2" | "3" | "4";
};

export type GenericTable = {
  _type: "genericTable";
  title?: string;
  description?: string;
  columnCount?: 3 | 4 | 5 | 6;
  columnHeaders?: Array<string>;
  rows?: Array<{
    cells?: Array<
      | {
          content?: string;
          isLastColumn?: boolean;
          _type: "cell";
          _key: string;
        }
      | {
          content?: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
                listItem?: "number" | "bullet";
                markDefs?: Array<{
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                caption?: string;
                _type: "image";
                _key: string;
              }
            | ({
                _key: string;
              } & Button)
          >;
          isLastColumn?: boolean;
          _type: "richCell";
          _key: string;
        }
    >;
    _type: "row";
    _key: string;
  }>;
  variant?: "default" | "striped" | "bordered" | "compact";
};

export type SpecificationsTable = {
  _type: "specificationsTable";
  title?: string;
  description?: string;
  specifications?: Array<
    {
      _key: string;
    } & SpecificationItem
  >;
  variant?: "default" | "striped" | "bordered" | "compact";
};

export type FormBlock = {
  _type: "formBlock";
  title?: string;
  description?: string;
  form?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "formularios";
  };
  displayMode?: "inline" | "modal";
  triggerText?: string;
  buttonPosition?: "default" | "fixed";
  variant?: "default" | "withBackground" | "centered";
};

export type SubscribeNewsletter = {
  _type: "subscribeNewsletter";
  title?: string;
  subTitle?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
    listItem?: "number" | "bullet";
    markDefs?: Array<{
      customLink?: CustomUrl;
      _type: "customLink";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  helperText?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
    listItem?: "number" | "bullet";
    markDefs?: Array<{
      customLink?: CustomUrl;
      _type: "customLink";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type ImageGallery = {
  _type: "imageGallery";
  title?: string;
  description?: string;
  images?: Array<
    {
      _key: string;
    } & GalleryImage
  >;
  layout?: "grid" | "carousel" | "masonry" | "bento";
  columns?: "2" | "3" | "4";
  slidesPerRow?: 1 | 2 | 3 | 4 | 5;
};

export type ImageLinkCards = {
  _type: "imageLinkCards";
  eyebrow?: string;
  title?: string;
  richText?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
        listItem?: "number" | "bullet";
        markDefs?: Array<{
          customLink?: CustomUrl;
          _type: "customLink";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        caption?: string;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Button)
  >;
  buttons?: Array<
    {
      _key: string;
    } & Button
  >;
  cards?: Array<{
    title?: string;
    description?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    url?: CustomUrl;
    _type: "imageLinkCard";
    _key: string;
  }>;
};

export type FaqAccordion = {
  _type: "faqAccordion";
  eyebrow?: string;
  title?: string;
  subtitle?: string;
  link?: {
    title?: string;
    description?: string;
    url?: CustomUrl;
  };
  faqs?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "faq";
  }>;
};

export type FeatureCardsIcon = {
  _type: "featureCardsIcon";
  eyebrow?: string;
  title?: string;
  richText?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
    listItem?: "number" | "bullet";
    markDefs?: Array<{
      customLink?: CustomUrl;
      _type: "customLink";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  cards?: Array<{
    icon?: IconPicker;
    title?: string;
    richText?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
      listItem?: "number" | "bullet";
      markDefs?: Array<{
        customLink?: CustomUrl;
        _type: "customLink";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    _type: "featureCardIcon";
    _key: string;
  }>;
};

export type Cta = {
  _type: "cta";
  eyebrow?: string;
  title?: string;
  richText?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
        listItem?: "number" | "bullet";
        markDefs?: Array<{
          customLink?: CustomUrl;
          _type: "customLink";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        caption?: string;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Button)
  >;
  buttons?: Array<
    {
      _key: string;
    } & Button
  >;
};

export type DoubleHero = {
  _type: "doubleHero";
  variant?: "default" | "alt" | "accent1" | "accent2" | "brand" | "inset";
  primaryBadge?: string;
  primaryTitle?: string;
  primaryRichText?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  primaryImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  primaryButtons?: Array<
    {
      _key: string;
    } & Button
  >;
  secondaryBadge?: string;
  secondaryTitle?: string;
  secondaryRichText?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  secondaryImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  secondaryButtons?: Array<
    {
      _key: string;
    } & Button
  >;
};

export type Hero = {
  _type: "hero";
  variant?: "default" | "alt" | "accent1" | "accent2" | "brand";
  badge?: string;
  title?: string;
  titleFont?: "default" | "statement";
  richText?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
        listItem?: "number" | "bullet";
        markDefs?: Array<{
          customLink?: CustomUrl;
          _type: "customLink";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        caption?: string;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Button)
  >;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  imageAlignment?: "default" | "fit";
  buttons?: Array<
    {
      _key: string;
    } & Button
  >;
};

export type MainHero = {
  _type: "mainHero";
  badge?: string;
  title?: string;
  titleFont?: "default" | "statement";
  layout?: "default" | "fullImage";
  richText?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
        listItem?: "number" | "bullet";
        markDefs?: Array<{
          customLink?: CustomUrl;
          _type: "customLink";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        caption?: string;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Button)
  >;
  backgroundType?: "image" | "video";
  backgroundImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  backgroundVideo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    media?: unknown;
    _type: "file";
  };
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  buttons?: Array<
    {
      _key: string;
    } & Button
  >;
};

export type SpecificationItem = {
  _type: "specificationItem";
  label?: string;
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
        listItem?: "number" | "bullet";
        markDefs?: Array<{
          customLink?: CustomUrl;
          _type: "customLink";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        caption?: string;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Button)
  >;
};

export type GalleryImage = {
  _type: "galleryImage";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  alt?: string;
  caption?: string;
};

export type PageBuilder = Array<
  | ({
      _key: string;
    } & MainHero)
  | ({
      _key: string;
    } & Hero)
  | ({
      _key: string;
    } & DoubleHero)
  | ({
      _key: string;
    } & Cta)
  | ({
      _key: string;
    } & FeatureCardsIcon)
  | ({
      _key: string;
    } & FaqAccordion)
  | ({
      _key: string;
    } & ImageLinkCards)
  | ({
      _key: string;
    } & ImageGallery)
  | ({
      _key: string;
    } & SubscribeNewsletter)
  | ({
      _key: string;
    } & FormBlock)
  | ({
      _key: string;
    } & SpecificationsTable)
  | ({
      _key: string;
    } & GenericTable)
  | ({
      _key: string;
    } & HighlightedAspects)
  | ({
      _key: string;
    } & ProductListing)
  | ({
      _key: string;
    } & VideoBlock)
  | ({
      _key: string;
    } & VideoHero)
  | ({
      _key: string;
    } & TextBlock)
  | ({
      _key: string;
    } & SucursalesSelector)
  | ({
      _key: string;
    } & CursosBlock)
  | ({
      _key: string;
    } & Tabs)
  | ({
      _key: string;
    } & InfoSection)
  | ({
      _key: string;
    } & FeaturedBlogs)
>;

export type Button = {
  _type: "button";
  variant?: "default" | "primary" | "secondary" | "outline" | "link";
  text?: string;
  icon?: "volvo-chevron-right" | "volvo-file-down";
  url?: {
    type?: "internal" | "external" | "file";
    internal?:
      | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        }
      | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "blog";
        }
      | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "blogIndex";
        }
      | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "camiones";
        }
      | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "buses";
        }
      | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "motoresPenta";
        };
    external?: string;
    file?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
      };
      media?: unknown;
      _type: "file";
    };
    openInNewTab?: boolean;
  };
};

export type RichText = Array<
  | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h2" | "h3" | "h4" | "h5" | "h6" | "inline";
      listItem?: "number" | "bullet";
      markDefs?: Array<{
        customLink?: CustomUrl;
        _type: "customLink";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }
  | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      caption?: string;
      _type: "image";
      _key: string;
    }
  | ({
      _key: string;
    } & Button)
>;

export type Navbar = {
  _id: string;
  _type: "navbar";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  label?: string;
  columns?: Array<
    | {
        title?: string;
        links?: Array<
          | ({
              _key: string;
            } & NavbarColumnLink)
          | ({
              _key: string;
            } & NavbarLinkGroup)
        >;
        _type: "navbarColumn";
        _key: string;
      }
    | {
        name?: string;
        url?: CustomUrl;
        _type: "navbarLink";
        _key: string;
      }
  >;
  buttons?: Array<
    {
      _key: string;
    } & Button
  >;
};

export type Footer = {
  _id: string;
  _type: "footer";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  label?: string;
  subtitle?: string;
  columns?: Array<{
    title?: string;
    links?: Array<{
      name?: string;
      url?: CustomUrl;
      _type: "footerColumnLink";
      _key: string;
    }>;
    _type: "footerColumn";
    _key: string;
  }>;
};

export type Settings = {
  _id: string;
  _type: "settings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  label?: string;
  siteTitle?: string;
  siteDescription?: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  contactEmail?: string;
  socialLinks?: {
    linkedin?: string;
    facebook?: string;
    twitter?: string;
    instagram?: string;
    youtube?: string;
  };
  cotizadorFormTitle?: string;
  cotizadorFormDescription?: string;
  cotizadorForm?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "formularios";
  };
  customerServicePhone?: string;
  roadEmergencyPhone?: string;
  roadEmergencyPhone2?: string;
  contactPageUrl?: {
    type?: "internal" | "external";
    internal?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    };
    external?: string;
  };
};

export type HomePage = {
  _id: string;
  _type: "homePage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: string;
  slug?: Slug;
  pageBuilder?: PageBuilder;
  seoTitle?: string;
  seoDescription?: string;
  seoImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  ogTitle?: string;
  ogDescription?: string;
};

export type Cursos = {
  _id: string;
  _type: "cursos";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: RichText;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  slug?: Slug;
  fechasCapacitacion?: Array<{
    nombre?: string;
    profesor?: "Patricio Barahona" | "Abraham Medina";
    fecha?: string;
    hora?: string;
    _type: "fechaCapacitacion";
    _key: string;
  }>;
};

export type Sucursales = {
  _id: string;
  _type: "sucursales";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  region?: string;
  telefono?: string;
  email?: string;
  direccion?: string;
  latitud?: number;
  longitud?: number;
  personas?: Array<{
    nombre?: string;
    cargo?: string;
    telefono?: string;
    email?: string;
    _type: "persona";
    _key: string;
  }>;
};

export type Author = {
  _id: string;
  _type: "author";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  position?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  bio?: string;
};

export type Faq = {
  _id: string;
  _type: "faq";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  richText?: RichText;
};

export type Blog = {
  _id: string;
  _type: "blog";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  orderRank?: string;
  title?: string;
  description?: string;
  slug?: Slug;
  authors?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "author";
  }>;
  publishedAt?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  richText?: RichText;
  seoTitle?: string;
  seoDescription?: string;
  seoImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  seoNoIndex?: boolean;
  seoHideFromLists?: boolean;
  ogTitle?: string;
  ogDescription?: string;
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: string;
  slug?: Slug;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  pageBuilder?: PageBuilder;
  seoTitle?: string;
  seoDescription?: string;
  seoImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  seoNoIndex?: boolean;
  ogTitle?: string;
  ogDescription?: string;
};

export type BlogIndex = {
  _id: string;
  _type: "blogIndex";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: string;
  slug?: Slug;
  displayFeaturedBlogs?: "yes" | "no";
  featuredBlogsCount?: "1" | "2" | "3";
  pageBuilder?: PageBuilder;
  seoTitle?: string;
  seoDescription?: string;
  seoImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  ogTitle?: string;
  ogDescription?: string;
};

export type Camiones = {
  _id: string;
  _type: "camiones";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  subtitle?: string;
  description?: string;
  taxonomias?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "skosConcept";
  };
  slug?: Slug;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  richText?: RichText;
  pageBuilder?: PageBuilder;
  seoTitle?: string;
  seoDescription?: string;
  seoImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  seoNoIndex?: boolean;
  seoHideFromLists?: boolean;
  ogTitle?: string;
  ogDescription?: string;
};

export type Buses = {
  _id: string;
  _type: "buses";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  subtitle?: string;
  description?: string;
  taxonomias?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "skosConcept";
  };
  slug?: Slug;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  richText?: RichText;
  pageBuilder?: PageBuilder;
  seoTitle?: string;
  seoDescription?: string;
  seoImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  seoNoIndex?: boolean;
  seoHideFromLists?: boolean;
  ogTitle?: string;
  ogDescription?: string;
};

export type MotoresPenta = {
  _id: string;
  _type: "motoresPenta";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  subtitle?: string;
  description?: string;
  taxonomias?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "skosConcept";
  };
  slug?: Slug;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  richText?: RichText;
  pageBuilder?: PageBuilder;
  seoTitle?: string;
  seoDescription?: string;
  seoImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  seoNoIndex?: boolean;
  seoHideFromLists?: boolean;
  ogTitle?: string;
  ogDescription?: string;
};

export type Formularios = {
  _id: string;
  _type: "formularios";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  description?: string;
  direccion?: {
    calle?: string;
    region?: string;
    comuna?: string;
  };
  fields?: Array<{
    label?: string;
    name?: string;
    type?:
      | "text"
      | "textarea"
      | "email"
      | "tel"
      | "number"
      | "rut"
      | "select"
      | "radio"
      | "checkbox"
      | "direccion"
      | "curso";
    required?: "yes" | "no";
    options?: Array<string>;
    placeholder?: string;
    _type: "field";
    _key: string;
  }>;
  submitButtonText?: string;
  successMessage?: string;
  errorMessage?: string;
  emailRecipients?: string;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type CustomUrl = {
  _type: "customUrl";
  type?: "internal" | "external";
  openInNewTab?: boolean;
  external?: string;
  href?: string;
  internal?:
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "blog";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "blogIndex";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "camiones";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "buses";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "motoresPenta";
      };
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type SkosConceptScheme = {
  _id: string;
  _type: "skosConceptScheme";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: string;
  controls?: boolean;
  baseIri?: string;
  schemeId?: string;
  topConcepts?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "skosConcept";
  }>;
  concepts?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "skosConcept";
  }>;
};

export type SkosConcept = {
  _id: string;
  _type: "skosConcept";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  prefLabel?: string;
  definition?: string;
  example?: string;
  scopeNote?: string;
  altLabel?: Array<string>;
  hiddenLabel?: Array<string>;
  baseIri?: string;
  conceptId?: string;
  broader?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "skosConcept";
  }>;
  related?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "skosConcept";
  }>;
  sameAs?: string;
  historyNote?: string;
  editorialNote?: string;
  changeNote?: string;
};

export type Message = {
  _id: string;
  _type: "message";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  email?: string;
  subject?: string;
  pageTitle?: string;
  fields?: Array<{
    name?: string;
    value?: string;
    _type: "field";
    _key: string;
  }>;
  read?: boolean;
  starred?: boolean;
  utmParams?: {
    utm_source?: string;
    utm_medium?: string;
    utm_campaign?: string;
    utm_term?: string;
    utm_content?: string;
  };
  emailRecipients?: string;
};

export type MediaTag = {
  _id: string;
  _type: "media.tag";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: Slug;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type IconPicker = {
  _type: "iconPicker";
  provider?: string;
  name?: string;
  svg?: string;
};

export type SanityAssistInstructionTask = {
  _type: "sanity.assist.instructionTask";
  path?: string;
  instructionKey?: string;
  started?: string;
  updated?: string;
  info?: string;
};

export type SanityAssistTaskStatus = {
  _type: "sanity.assist.task.status";
  tasks?: Array<
    {
      _key: string;
    } & SanityAssistInstructionTask
  >;
};

export type SanityAssistSchemaTypeAnnotations = {
  _type: "sanity.assist.schemaType.annotations";
  title?: string;
  fields?: Array<
    {
      _key: string;
    } & SanityAssistSchemaTypeField
  >;
};

export type SanityAssistOutputType = {
  _type: "sanity.assist.output.type";
  type?: string;
};

export type SanityAssistOutputField = {
  _type: "sanity.assist.output.field";
  path?: string;
};

export type SanityAssistInstructionContext = {
  _type: "sanity.assist.instruction.context";
  reference?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "assist.instruction.context";
  };
};

export type AssistInstructionContext = {
  _id: string;
  _type: "assist.instruction.context";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  context?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: null;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type SanityAssistInstructionUserInput = {
  _type: "sanity.assist.instruction.userInput";
  message?: string;
  description?: string;
};

export type SanityAssistInstructionPrompt = Array<{
  children?: Array<
    | {
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }
    | ({
        _key: string;
      } & SanityAssistInstructionFieldRef)
    | ({
        _key: string;
      } & SanityAssistInstructionContext)
    | ({
        _key: string;
      } & SanityAssistInstructionUserInput)
  >;
  style?: "normal";
  listItem?: never;
  markDefs?: null;
  level?: number;
  _type: "block";
  _key: string;
}>;

export type SanityAssistInstructionFieldRef = {
  _type: "sanity.assist.instruction.fieldRef";
  path?: string;
};

export type SanityAssistInstruction = {
  _type: "sanity.assist.instruction";
  prompt?: SanityAssistInstructionPrompt;
  icon?: string;
  title?: string;
  userId?: string;
  createdById?: string;
  output?: Array<
    | ({
        _key: string;
      } & SanityAssistOutputField)
    | ({
        _key: string;
      } & SanityAssistOutputType)
  >;
};

export type SanityAssistSchemaTypeField = {
  _type: "sanity.assist.schemaType.field";
  path?: string;
  instructions?: Array<
    {
      _key: string;
    } & SanityAssistInstruction
  >;
};

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | Geopoint
  | NavbarLinkGroup
  | NavbarColumnLink
  | FeaturedBlogs
  | InfoSection
  | Tabs
  | CursosBlock
  | SucursalesSelector
  | TextBlock
  | VideoHero
  | VideoBlock
  | ProductListing
  | HighlightedAspects
  | GenericTable
  | SpecificationsTable
  | FormBlock
  | SubscribeNewsletter
  | ImageGallery
  | ImageLinkCards
  | FaqAccordion
  | FeatureCardsIcon
  | Cta
  | DoubleHero
  | Hero
  | MainHero
  | SpecificationItem
  | GalleryImage
  | PageBuilder
  | Button
  | RichText
  | Navbar
  | Footer
  | Settings
  | HomePage
  | Cursos
  | Sucursales
  | Author
  | Faq
  | Blog
  | Page
  | BlogIndex
  | Camiones
  | Buses
  | MotoresPenta
  | Formularios
  | SanityFileAsset
  | CustomUrl
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | SkosConceptScheme
  | SkosConcept
  | Message
  | MediaTag
  | Slug
  | IconPicker
  | SanityAssistInstructionTask
  | SanityAssistTaskStatus
  | SanityAssistSchemaTypeAnnotations
  | SanityAssistOutputType
  | SanityAssistOutputField
  | SanityAssistInstructionContext
  | AssistInstructionContext
  | SanityAssistInstructionUserInput
  | SanityAssistInstructionPrompt
  | SanityAssistInstructionFieldRef
  | SanityAssistInstruction
  | SanityAssistSchemaTypeField;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ../web/src/lib/sanity/query.ts
// Variable: queryHomePageData
// Query: *[_type == "homePage" && _id == "homePage"][0]{    ...,    _id,    _type,    "slug": slug.current,    title,    description,      pageBuilder[]{    ...,    _type,      _type == "cta" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },  },      _type == "mainHero" => {    ...,    titleFont,    layout,    "backgroundImage": backgroundImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    "backgroundVideo": backgroundVideo.asset->url,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "hero" => {    ...,    variant,    titleFont,    imageAlignment,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "doubleHero" => {    ...,    variant,    primaryBadge,    primaryTitle,    "primaryRichText": primaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "primaryImage": primaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    primaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    secondaryBadge,    secondaryTitle,    "secondaryRichText": secondaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "secondaryImage": secondaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    secondaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },      _type == "faqAccordion" => {    ...,      "faqs": array::compact(faqs[]->{    title,    _id,    _type,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  }),    link{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },      _type == "subscribeNewsletter" => {    ...,    "subTitle": subTitle[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "helperText": helperText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      _type == "imageLinkCards" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },    "cards": array::compact(cards[]{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      ),        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },    })  },      _type == "formBlock" => {    ...,    title,    description,    variant,    displayMode,    triggerText,    buttonPosition,    "form": form->{      _id,      title,      description,        fields[]{    label,    name,    type,    required,    options,    placeholder,    type == "curso" => {      courseReference->{        _id,        title,        "fechasCapacitacion": fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        }      },      selectedTrainingDate    }  },  emailRecipients,  submitButtonText,  successMessage,  errorMessage,      submitButtonText,      successMessage,      errorMessage    }  },      _type == "tabs" => {    ...,    title,    description,    tabs[]{      _key,      label,      content[]{        ...,        _type,        _key,          _type == "cta" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },  },          _type == "mainHero" => {    ...,    titleFont,    layout,    "backgroundImage": backgroundImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    "backgroundVideo": backgroundVideo.asset->url,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },          _type == "hero" => {    ...,    variant,    titleFont,    imageAlignment,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },          _type == "doubleHero" => {    ...,    variant,    primaryBadge,    primaryTitle,    "primaryRichText": primaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "primaryImage": primaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    primaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    secondaryBadge,    secondaryTitle,    "secondaryRichText": secondaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "secondaryImage": secondaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    secondaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },          _type == "faqAccordion" => {    ...,      "faqs": array::compact(faqs[]->{    title,    _id,    _type,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  }),    link{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },          _type == "subscribeNewsletter" => {    ...,    "subTitle": subTitle[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "helperText": helperText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },          _type == "imageLinkCards" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },    "cards": array::compact(cards[]{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      ),        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },    })  },          _type == "formBlock" => {    ...,    title,    description,    variant,    displayMode,    triggerText,    buttonPosition,    "form": form->{      _id,      title,      description,        fields[]{    label,    name,    type,    required,    options,    placeholder,    type == "curso" => {      courseReference->{        _id,        title,        "fechasCapacitacion": fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        }      },      selectedTrainingDate    }  },  emailRecipients,  submitButtonText,  successMessage,  errorMessage,      submitButtonText,      successMessage,      errorMessage    }  },          _type == "imageGallery" => {    ...,    title,    description,    layout,    columns,    slidesPerRow,    "images": images[]{      ...,      "image": image{        ...,        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background,      },      caption    }  },          _type == "featuredBlogs" => {    ...,    title,    subtitle,    displayMode,    blogCount,    buttonText,    "showViewAllButton": showViewAllButton == "yes",    "blogs": select(      displayMode == "curated" => blogs[]-> {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      },      displayMode == "latest" => *[        _type == "blog"         && (seoHideFromLists != true)      ] | order(publishedAt desc, _createdAt desc)[0...3] {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      }    )  },        _type == "tabs" => {          ...,          title,          description,          tabs[]{            _key,            label,            content[]{               ...,              _type,              _key            }          }        }      }    }  },      _type == "infoSection" => {    ...,    title,    headingLevel,    content[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      _type == "imageGallery" => {    ...,    title,    description,    layout,    columns,    slidesPerRow,    "images": images[]{      ...,      "image": image{        ...,        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background,      },      caption    }  },      _type == "specificationsTable" => {    ...,    title,    description,    variant,    "specifications": specifications[]{      _key,      label,      "content": content[]{        ...,          markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }      }    }  },      _type == "genericTable" => {    ...,    title,    description,    columnCount,    columnHeaders,    rows[]{      _key,      cells[]{        _key,        content,        isLastColumn,        _type == "richCell" => {          content[]{            ...,              markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }          }        }      }    },    variant  },      _type == "featuredBlogs" => {    ...,    title,    subtitle,    displayMode,    blogCount,    buttonText,    "showViewAllButton": showViewAllButton == "yes",    "blogs": select(      displayMode == "curated" => blogs[]-> {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      },      displayMode == "latest" => *[        _type == "blog"         && (seoHideFromLists != true)      ] | order(publishedAt desc, _createdAt desc)[0...3] {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      }    )  },      _type == "highlightedAspects" => {    title,    description,    columns,    aspects[]{      _key,      title,      variant,      icon,      image{        ...,        "alt": coalesce(asset->altText, asset->originalFilename, "Aspect Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background      },      content[]{        ...,        _type == "button" => {          ...,          text,          variant,          icon,            "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)        },        _type == "block" => {          ...,            markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }        }      }    }  },      _type == "videoBlock" => {    ...,    _key,    _type,    title,    videoType,    "mp4File": coalesce(      mp4File.asset->url,      mp4File.asset->sources[0].url,      null    ),    youtubeUrl,    showControls,    autoplay,    loop,    allowFullscreen,    "posterImage": posterImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Video Poster"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    }  },      _type == "videoHero" => {    ...,    variant,    titleFont,    videoType,    "mp4File": coalesce(      mp4File.asset->url,      mp4File.asset->sources[0].url,      null    ),    youtubeUrl,    showControls,    autoplay,    loop,    "posterImage": posterImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Video Hero Poster"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "textBlock" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "sucursalesSelector" => {    ...,    title,    description,    showMap,    showAllRegions,    selectedRegions,    variant  },      _type == "cursosBlock" => {    ...,    title,    description,    displayMode,    "showAllDates": showAllDates == "yes",    "cursos": cursos[]-> {      _id,      _type,      title,      description,      "slug": slug.current,        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      "fechasCapacitacion": select(        ^.showAllDates == "yes" => fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        } | order(fecha asc),        fechasCapacitacion[fecha > now()]{          nombre,          profesor,          fecha,          hora        } | order(fecha asc)      )    }  }  },      "categoryData": {    "label": category,    "slug": category,    "iri": "/camiones/" + category,    "parent": null  }  }
export type QueryHomePageDataResult = {
  _id: string;
  _type: "homePage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string | null;
  description: string | null;
  slug: string | null;
  pageBuilder: Array<
    | {
        _key: string;
        _type: "cta";
        eyebrow?: string;
        title?: string;
        richText: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              _key: string;
              _type: "button";
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              text: string | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              url?: {
                type?: "external" | "file" | "internal";
                internal?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blog";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blogIndex";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "buses";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "camiones";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "motoresPenta";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    };
                external?: string;
                file?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                openInNewTab?: boolean;
              };
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        > | null;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
    | {
        _key: string;
        _type: "cursosBlock";
        title: string | null;
        description: string | null;
        cursos: Array<{
          _id: string;
          _type: "cursos";
          title: string | null;
          description: RichText | null;
          slug: string | null;
          image: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            alt: string | "Image-Broken";
            _type: "image";
            blurData: string | null;
            dominantColor: string | null;
          } | null;
          fechasCapacitacion: Array<{
            nombre: string | null;
            profesor: "Abraham Medina" | "Patricio Barahona" | null;
            fecha: string | null;
            hora: string | null;
          }> | null;
        }> | null;
        displayMode: "grid" | "list" | null;
        showAllDates: false | true;
      }
    | {
        _key: string;
        _type: "doubleHero";
        variant:
          | "accent1"
          | "accent2"
          | "alt"
          | "brand"
          | "default"
          | "inset"
          | null;
        primaryBadge: string | null;
        primaryTitle: string | null;
        primaryRichText: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }> | null;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        primaryImage: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Primary Image";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        primaryButtons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          openInNewTab: boolean | null;
          href: string | null;
        }> | null;
        secondaryBadge: string | null;
        secondaryTitle: string | null;
        secondaryRichText: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }> | null;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        secondaryImage: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Secondary Image";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        secondaryButtons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          openInNewTab: boolean | null;
          href: string | null;
        }> | null;
      }
    | {
        _key: string;
        _type: "faqAccordion";
        eyebrow?: string;
        title?: string;
        subtitle?: string;
        link: {
          title?: string;
          description?: string;
          url?: CustomUrl;
          openInNewTab: boolean | null;
          href: string | null;
        } | null;
        faqs: Array<{
          title: string | null;
          _id: string;
          _type: "faq";
          richText: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
                listItem?: "bullet" | "number";
                markDefs: Array<
                  | {
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                      openInNewTab: boolean | null;
                      href: string | "#" | null;
                    }
                  | {
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                    }
                > | null;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                _key: string;
                _type: "button";
                variant:
                  | "default"
                  | "link"
                  | "outline"
                  | "primary"
                  | "secondary"
                  | null;
                text: string | null;
                icon: "volvo-chevron-right" | "volvo-file-down" | null;
                url?: {
                  type?: "external" | "file" | "internal";
                  internal?:
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "blog";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "blogIndex";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "buses";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "camiones";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "motoresPenta";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "page";
                      };
                  external?: string;
                  file?: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                    };
                    media?: unknown;
                    _type: "file";
                  };
                  openInNewTab?: boolean;
                };
                openInNewTab: boolean | null;
                href: string | null;
              }
            | {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                caption?: string;
                _type: "image";
                _key: string;
              }
          > | null;
        }> | null;
      }
    | {
        _key: string;
        _type: "featureCardsIcon";
        eyebrow?: string;
        title?: string;
        richText?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            customLink?: CustomUrl;
            _type: "customLink";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
        cards?: Array<{
          icon?: IconPicker;
          title?: string;
          richText?: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              customLink?: CustomUrl;
              _type: "customLink";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }>;
          _type: "featureCardIcon";
          _key: string;
        }>;
      }
    | {
        _key: string;
        _type: "featuredBlogs";
        title: string | null;
        subtitle: string | null;
        displayMode: "curated" | "latest" | null;
        blogCount: "1" | "2" | "3" | null;
        blogs: Array<{
          _type: "blog";
          _id: string;
          title: string | null;
          description: string | null;
          slug: string | null;
          richText: RichText | null;
          orderRank: string | null;
          image: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            alt: string | "Image-Broken";
            blurData: string | null;
            dominantColor: string | null;
          } | null;
          publishedAt: string | null;
          authors: {
            _id: string;
            name: string | null;
            position: string | null;
            image: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Image-Broken";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
          } | null;
        }> | null;
        showViewAllButton: false | true;
        buttonText: string | null;
      }
    | {
        _key: string;
        _type: "formBlock";
        title: string | null;
        description: string | null;
        form: {
          _id: string;
          title: string | null;
          description: string | null;
          fields: Array<
            | {
                label: string | null;
                name: string | null;
                type:
                  | "checkbox"
                  | "curso"
                  | "direccion"
                  | "email"
                  | "number"
                  | "radio"
                  | "rut"
                  | "select"
                  | "tel"
                  | "text"
                  | "textarea"
                  | null;
                required: "no" | "yes" | null;
                options: Array<string> | null;
                placeholder: string | null;
                courseReference: null;
                selectedTrainingDate: null;
              }
            | {
                label: string | null;
                name: string | null;
                type:
                  | "checkbox"
                  | "curso"
                  | "direccion"
                  | "email"
                  | "number"
                  | "radio"
                  | "rut"
                  | "select"
                  | "tel"
                  | "text"
                  | "textarea"
                  | null;
                required: "no" | "yes" | null;
                options: Array<string> | null;
                placeholder: string | null;
              }
          > | null;
          emailRecipients: string | null;
          submitButtonText: string | null;
          successMessage: string | null;
          errorMessage: string | null;
        } | null;
        displayMode: "inline" | "modal" | null;
        triggerText: string | null;
        buttonPosition: "default" | "fixed" | null;
        variant: "centered" | "default" | "withBackground" | null;
      }
    | {
        _key: string;
        _type: "genericTable";
        title: string | null;
        description: string | null;
        columnCount: 3 | 4 | 5 | 6 | null;
        columnHeaders: Array<string> | null;
        rows: Array<{
          _key: string;
          cells: Array<
            | {
                _key: string;
                content: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      _key: string;
                      _type: "button";
                      variant?:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary";
                      text?: string;
                      icon?: "volvo-chevron-right" | "volvo-file-down";
                      url?: {
                        type?: "external" | "file" | "internal";
                        internal?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blog";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blogIndex";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "buses";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "camiones";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "motoresPenta";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            };
                        external?: string;
                        file?: {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                          };
                          media?: unknown;
                          _type: "file";
                        };
                        openInNewTab?: boolean;
                      };
                      markDefs: null;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                      markDefs: null;
                    }
                > | null;
                isLastColumn: boolean | null;
              }
            | {
                _key: string;
                content: string | null;
                isLastColumn: boolean | null;
              }
          > | null;
        }> | null;
        variant: "bordered" | "compact" | "default" | "striped" | null;
      }
    | {
        _key: string;
        _type: "hero";
        variant: "accent1" | "accent2" | "alt" | "brand" | "default" | null;
        badge?: string;
        title?: string;
        titleFont: "default" | "statement" | null;
        richText: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              _key: string;
              _type: "button";
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              text: string | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              url?: {
                type?: "external" | "file" | "internal";
                internal?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blog";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blogIndex";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "buses";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "camiones";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "motoresPenta";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    };
                external?: string;
                file?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                openInNewTab?: boolean;
              };
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        > | null;
        image: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        imageAlignment: "default" | "fit" | null;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
    | {
        _key: string;
        _type: "highlightedAspects";
        title: string | null;
        description: string | null;
        aspects: Array<{
          _key: string;
          title: string | null;
          variant: "icon" | "image" | "none" | null;
          icon: null;
          image: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            alt: string | "Aspect Image";
            blurData: string | null;
            dominantColor: string | null;
          } | null;
          content: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
                listItem?: "bullet" | "number";
                markDefs: Array<
                  | {
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                      openInNewTab: boolean | null;
                      href: string | "#" | null;
                    }
                  | {
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                    }
                > | null;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                _key: string;
                _type: "button";
                variant:
                  | "default"
                  | "link"
                  | "outline"
                  | "primary"
                  | "secondary"
                  | null;
                text: string | null;
                icon: "volvo-chevron-right" | "volvo-file-down" | null;
                url?: {
                  type?: "external" | "file" | "internal";
                  internal?:
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "blog";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "blogIndex";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "buses";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "camiones";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "motoresPenta";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "page";
                      };
                  external?: string;
                  file?: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                    };
                    media?: unknown;
                    _type: "file";
                  };
                  openInNewTab?: boolean;
                };
                href: string | "#" | null;
                openInNewTab: boolean | false;
              }
          > | null;
        }> | null;
        columns: "2" | "3" | "4" | null;
      }
    | {
        _key: string;
        _type: "imageGallery";
        title: string | null;
        description: string | null;
        images: Array<{
          _key: string;
          _type: "galleryImage";
          image: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            alt: string | "Gallery Image";
            blurData: string | null;
            dominantColor: string | null;
          } | null;
          alt?: string;
          caption: string | null;
        }> | null;
        layout: "bento" | "carousel" | "grid" | "masonry" | null;
        columns: "2" | "3" | "4" | null;
        slidesPerRow: 1 | 2 | 3 | 4 | 5 | null;
      }
    | {
        _key: string;
        _type: "imageLinkCards";
        eyebrow?: string;
        title?: string;
        richText: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              _key: string;
              _type: "button";
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              text: string | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              url?: {
                type?: "external" | "file" | "internal";
                internal?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blog";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blogIndex";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "buses";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "camiones";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "motoresPenta";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    };
                external?: string;
                file?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                openInNewTab?: boolean;
              };
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        > | null;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
        cards: Array<{
          title?: string;
          description?: string;
          image: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            alt: string | "Image-Broken";
            blurData: string | null;
            dominantColor: string | null;
          } | null;
          url?: CustomUrl;
          _type: "imageLinkCard";
          _key: string;
          openInNewTab: boolean | null;
          href: string | null;
        }> | null;
      }
    | {
        _key: string;
        _type: "infoSection";
        title: string | null;
        headingLevel: "h1" | "h2" | "h3" | "h4" | null;
        content: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }> | null;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
      }
    | {
        _key: string;
        _type: "mainHero";
        badge?: string;
        title?: string;
        titleFont: "default" | "statement" | null;
        layout: "default" | "fullImage" | null;
        richText: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              _key: string;
              _type: "button";
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              text: string | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              url?: {
                type?: "external" | "file" | "internal";
                internal?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blog";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blogIndex";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "buses";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "camiones";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "motoresPenta";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    };
                external?: string;
                file?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                openInNewTab?: boolean;
              };
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        > | null;
        backgroundType?: "image" | "video";
        backgroundImage: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Background Image";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        backgroundVideo: string | null;
        image: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
    | {
        _key: string;
        _type: "productListing";
        title?: string;
        productType?: "buses" | "camiones" | "motoresPenta";
        taxonomyFilter?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "skosConcept";
        };
      }
    | {
        _key: string;
        _type: "specificationsTable";
        title: string | null;
        description: string | null;
        specifications: Array<{
          _key: string;
          label: string | null;
          content: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
                listItem?: "bullet" | "number";
                markDefs: Array<
                  | {
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                      openInNewTab: boolean | null;
                      href: string | "#" | null;
                    }
                  | {
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                    }
                > | null;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                _key: string;
                _type: "button";
                variant?:
                  | "default"
                  | "link"
                  | "outline"
                  | "primary"
                  | "secondary";
                text?: string;
                icon?: "volvo-chevron-right" | "volvo-file-down";
                url?: {
                  type?: "external" | "file" | "internal";
                  internal?:
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "blog";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "blogIndex";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "buses";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "camiones";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "motoresPenta";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "page";
                      };
                  external?: string;
                  file?: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                    };
                    media?: unknown;
                    _type: "file";
                  };
                  openInNewTab?: boolean;
                };
                markDefs: null;
              }
            | {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                caption?: string;
                _type: "image";
                _key: string;
                markDefs: null;
              }
          > | null;
        }> | null;
        variant: "bordered" | "compact" | "default" | "striped" | null;
      }
    | {
        _key: string;
        _type: "subscribeNewsletter";
        title?: string;
        subTitle: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<
            | {
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
                openInNewTab: boolean | null;
                href: string | "#" | null;
              }
            | {
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }
          > | null;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        helperText: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<
            | {
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
                openInNewTab: boolean | null;
                href: string | "#" | null;
              }
            | {
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }
          > | null;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
      }
    | {
        _key: string;
        _type: "sucursalesSelector";
        title: string | null;
        description: string | null;
        showMap: boolean | null;
        showAllRegions: boolean | null;
        selectedRegions: Array<string> | null;
        variant: "cards" | "compact" | "default" | null;
      }
    | {
        _key: string;
        _type: "tabs";
        title: string | null;
        description: string | null;
        tabs: Array<{
          _key: string;
          label: string | null;
          content: Array<
            | {
                eyebrow?: string;
                title?: string;
                richText: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      _key: string;
                      _type: "button";
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      text: string | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      url?: {
                        type?: "external" | "file" | "internal";
                        internal?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blog";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blogIndex";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "buses";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "camiones";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "motoresPenta";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            };
                        external?: string;
                        file?: {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                          };
                          media?: unknown;
                          _type: "file";
                        };
                        openInNewTab?: boolean;
                      };
                      openInNewTab: boolean | null;
                      href: string | null;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                > | null;
                buttons: Array<{
                  text: string | null;
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  _key: string;
                  _type: "button";
                  href: string | "#" | null;
                  openInNewTab: boolean | false;
                }> | null;
                _type: "cta";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                cursos?: Array<{
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  _key: string;
                  [internalGroqTypeReferenceTo]?: "cursos";
                }>;
                displayMode?: "grid" | "list";
                showAllDates?: "no" | "yes";
                _type: "cursosBlock";
                _key: string;
              }
            | {
                variant:
                  | "accent1"
                  | "accent2"
                  | "alt"
                  | "brand"
                  | "default"
                  | "inset"
                  | null;
                primaryBadge: string | null;
                primaryTitle: string | null;
                primaryRichText: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "blockquote"
                    | "h1"
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<{
                    href?: string;
                    _type: "link";
                    _key: string;
                  }> | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
                primaryImage: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Primary Image";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
                primaryButtons: Array<{
                  text: string | null;
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  _key: string;
                  _type: "button";
                  openInNewTab: boolean | null;
                  href: string | null;
                }> | null;
                secondaryBadge: string | null;
                secondaryTitle: string | null;
                secondaryRichText: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "blockquote"
                    | "h1"
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<{
                    href?: string;
                    _type: "link";
                    _key: string;
                  }> | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
                secondaryImage: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Secondary Image";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
                secondaryButtons: Array<{
                  text: string | null;
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  _key: string;
                  _type: "button";
                  openInNewTab: boolean | null;
                  href: string | null;
                }> | null;
                _type: "doubleHero";
                _key: string;
              }
            | {
                eyebrow?: string;
                title?: string;
                subtitle?: string;
                link: {
                  title?: string;
                  description?: string;
                  url?: CustomUrl;
                  openInNewTab: boolean | null;
                  href: string | null;
                } | null;
                faqs: Array<{
                  title: string | null;
                  _id: string;
                  _type: "faq";
                  richText: Array<
                    | {
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?:
                          | "h2"
                          | "h3"
                          | "h4"
                          | "h5"
                          | "h6"
                          | "inline"
                          | "normal";
                        listItem?: "bullet" | "number";
                        markDefs: Array<
                          | {
                              customLink?: CustomUrl;
                              _type: "customLink";
                              _key: string;
                              openInNewTab: boolean | null;
                              href: string | "#" | null;
                            }
                          | {
                              customLink?: CustomUrl;
                              _type: "customLink";
                              _key: string;
                            }
                        > | null;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }
                    | {
                        _key: string;
                        _type: "button";
                        variant:
                          | "default"
                          | "link"
                          | "outline"
                          | "primary"
                          | "secondary"
                          | null;
                        text: string | null;
                        icon: "volvo-chevron-right" | "volvo-file-down" | null;
                        url?: {
                          type?: "external" | "file" | "internal";
                          internal?:
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "blog";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "blogIndex";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "buses";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "camiones";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "motoresPenta";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "page";
                              };
                          external?: string;
                          file?: {
                            asset?: {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                            };
                            media?: unknown;
                            _type: "file";
                          };
                          openInNewTab?: boolean;
                        };
                        openInNewTab: boolean | null;
                        href: string | null;
                      }
                    | {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        caption?: string;
                        _type: "image";
                        _key: string;
                      }
                  > | null;
                }> | null;
                _type: "faqAccordion";
                _key: string;
              }
            | {
                eyebrow?: string;
                title?: string;
                richText?: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }>;
                cards?: Array<{
                  icon?: IconPicker;
                  title?: string;
                  richText?: Array<{
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs?: Array<{
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                    }>;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }>;
                  _type: "featureCardIcon";
                  _key: string;
                }>;
                _type: "featureCardsIcon";
                _key: string;
              }
            | {
                title: string | null;
                description: string | null;
                form: {
                  _id: string;
                  title: string | null;
                  description: string | null;
                  fields: Array<
                    | {
                        label: string | null;
                        name: string | null;
                        type:
                          | "checkbox"
                          | "curso"
                          | "direccion"
                          | "email"
                          | "number"
                          | "radio"
                          | "rut"
                          | "select"
                          | "tel"
                          | "text"
                          | "textarea"
                          | null;
                        required: "no" | "yes" | null;
                        options: Array<string> | null;
                        placeholder: string | null;
                        courseReference: null;
                        selectedTrainingDate: null;
                      }
                    | {
                        label: string | null;
                        name: string | null;
                        type:
                          | "checkbox"
                          | "curso"
                          | "direccion"
                          | "email"
                          | "number"
                          | "radio"
                          | "rut"
                          | "select"
                          | "tel"
                          | "text"
                          | "textarea"
                          | null;
                        required: "no" | "yes" | null;
                        options: Array<string> | null;
                        placeholder: string | null;
                      }
                  > | null;
                  emailRecipients: string | null;
                  submitButtonText: string | null;
                  successMessage: string | null;
                  errorMessage: string | null;
                } | null;
                displayMode: "inline" | "modal" | null;
                triggerText: string | null;
                buttonPosition: "default" | "fixed" | null;
                variant: "centered" | "default" | "withBackground" | null;
                _type: "formBlock";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                columnCount?: 3 | 4 | 5 | 6;
                columnHeaders?: Array<string>;
                rows?: Array<{
                  cells?: Array<
                    | {
                        content?: string;
                        isLastColumn?: boolean;
                        _type: "cell";
                        _key: string;
                      }
                    | {
                        content?: Array<
                          | ({
                              _key: string;
                            } & Button)
                          | {
                              children?: Array<{
                                marks?: Array<string>;
                                text?: string;
                                _type: "span";
                                _key: string;
                              }>;
                              style?:
                                | "h2"
                                | "h3"
                                | "h4"
                                | "h5"
                                | "h6"
                                | "inline"
                                | "normal";
                              listItem?: "bullet" | "number";
                              markDefs?: Array<{
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }>;
                              level?: number;
                              _type: "block";
                              _key: string;
                            }
                          | {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                              };
                              media?: unknown;
                              hotspot?: SanityImageHotspot;
                              crop?: SanityImageCrop;
                              caption?: string;
                              _type: "image";
                              _key: string;
                            }
                        >;
                        isLastColumn?: boolean;
                        _type: "richCell";
                        _key: string;
                      }
                  >;
                  _type: "row";
                  _key: string;
                }>;
                variant?: "bordered" | "compact" | "default" | "striped";
                _type: "genericTable";
                _key: string;
              }
            | {
                variant:
                  | "accent1"
                  | "accent2"
                  | "alt"
                  | "brand"
                  | "default"
                  | null;
                badge?: string;
                title?: string;
                titleFont: "default" | "statement" | null;
                richText: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      _key: string;
                      _type: "button";
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      text: string | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      url?: {
                        type?: "external" | "file" | "internal";
                        internal?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blog";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blogIndex";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "buses";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "camiones";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "motoresPenta";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            };
                        external?: string;
                        file?: {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                          };
                          media?: unknown;
                          _type: "file";
                        };
                        openInNewTab?: boolean;
                      };
                      openInNewTab: boolean | null;
                      href: string | null;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                > | null;
                image: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Image-Broken";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
                imageAlignment: "default" | "fit" | null;
                buttons: Array<{
                  text: string | null;
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  _key: string;
                  _type: "button";
                  href: string | "#" | null;
                  openInNewTab: boolean | false;
                }> | null;
                _type: "hero";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                aspects?: Array<{
                  title?: string;
                  variant?: "icon" | "image" | "none";
                  image?: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    _type: "image";
                  };
                  content?: Array<
                    | ({
                        _key: string;
                      } & Button)
                    | {
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?:
                          | "h2"
                          | "h3"
                          | "h4"
                          | "h5"
                          | "h6"
                          | "inline"
                          | "normal";
                        listItem?: "bullet" | "number";
                        markDefs?: Array<{
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }>;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }
                  >;
                  _type: "aspect";
                  _key: string;
                }>;
                columns?: "2" | "3" | "4";
                _type: "highlightedAspects";
                _key: string;
              }
            | {
                title: string | null;
                description: string | null;
                images: Array<{
                  _key: string;
                  _type: "galleryImage";
                  image: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    _type: "image";
                    alt: string | "Gallery Image";
                    blurData: string | null;
                    dominantColor: string | null;
                  } | null;
                  alt?: string;
                  caption: string | null;
                }> | null;
                layout: "bento" | "carousel" | "grid" | "masonry" | null;
                columns: "2" | "3" | "4" | null;
                slidesPerRow: 1 | 2 | 3 | 4 | 5 | null;
                _type: "imageGallery";
                _key: string;
              }
            | {
                eyebrow?: string;
                title?: string;
                richText: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      _key: string;
                      _type: "button";
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      text: string | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      url?: {
                        type?: "external" | "file" | "internal";
                        internal?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blog";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blogIndex";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "buses";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "camiones";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "motoresPenta";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            };
                        external?: string;
                        file?: {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                          };
                          media?: unknown;
                          _type: "file";
                        };
                        openInNewTab?: boolean;
                      };
                      openInNewTab: boolean | null;
                      href: string | null;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                > | null;
                buttons: Array<{
                  text: string | null;
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  _key: string;
                  _type: "button";
                  href: string | "#" | null;
                  openInNewTab: boolean | false;
                }> | null;
                cards: Array<{
                  title?: string;
                  description?: string;
                  image: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    _type: "image";
                    alt: string | "Image-Broken";
                    blurData: string | null;
                    dominantColor: string | null;
                  } | null;
                  url?: CustomUrl;
                  _type: "imageLinkCard";
                  _key: string;
                  openInNewTab: boolean | null;
                  href: string | null;
                }> | null;
                _type: "imageLinkCards";
                _key: string;
              }
            | {
                badge?: string;
                title?: string;
                titleFont: "default" | "statement" | null;
                layout: "default" | "fullImage" | null;
                richText: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      _key: string;
                      _type: "button";
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      text: string | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      url?: {
                        type?: "external" | "file" | "internal";
                        internal?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blog";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blogIndex";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "buses";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "camiones";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "motoresPenta";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            };
                        external?: string;
                        file?: {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                          };
                          media?: unknown;
                          _type: "file";
                        };
                        openInNewTab?: boolean;
                      };
                      openInNewTab: boolean | null;
                      href: string | null;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                > | null;
                backgroundType?: "image" | "video";
                backgroundImage: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Background Image";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
                backgroundVideo: string | null;
                image: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Image-Broken";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
                buttons: Array<{
                  text: string | null;
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  _key: string;
                  _type: "button";
                  href: string | "#" | null;
                  openInNewTab: boolean | false;
                }> | null;
                _type: "mainHero";
                _key: string;
              }
            | {
                title?: string;
                productType?: "buses" | "camiones" | "motoresPenta";
                taxonomyFilter?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "skosConcept";
                };
                _type: "productListing";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                specifications?: Array<
                  {
                    _key: string;
                  } & SpecificationItem
                >;
                variant?: "bordered" | "compact" | "default" | "striped";
                _type: "specificationsTable";
                _key: string;
              }
            | {
                title?: string;
                subTitle: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
                helperText: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
                _type: "subscribeNewsletter";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                showMap?: boolean;
                showAllRegions?: boolean;
                selectedRegions?: Array<string>;
                variant?: "cards" | "compact" | "default";
                _type: "sucursalesSelector";
                _key: string;
              }
            | {
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                _type: "textBlock";
                _key: string;
              }
            | {
                title?: string;
                videoType?: "mp4" | "youtube";
                mp4File?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                youtubeUrl?: string;
                posterImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                showControls?: "no" | "yes";
                autoplay?: "no" | "yes";
                loop?: "no" | "yes";
                allowFullscreen?: "no" | "yes";
                _type: "videoBlock";
                _key: string;
              }
            | {
                variant?: "accent1" | "accent2" | "alt" | "brand" | "default";
                badge?: string;
                title?: string;
                titleFont?: "default" | "statement";
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                videoType?: "mp4" | "youtube";
                mp4File?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                youtubeUrl?: string;
                posterImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                showControls?: "no" | "yes";
                autoplay?: "no" | "yes";
                loop?: "no" | "yes";
                buttons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                _type: "videoHero";
                _key: string;
              }
          > | null;
        }> | null;
      }
    | {
        _key: string;
        _type: "textBlock";
        richText: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              _key: string;
              _type: "button";
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              text: string | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              url?: {
                type?: "external" | "file" | "internal";
                internal?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blog";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blogIndex";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "buses";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "camiones";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "motoresPenta";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    };
                external?: string;
                file?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                openInNewTab?: boolean;
              };
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        > | null;
      }
    | {
        _key: string;
        _type: "videoBlock";
        title: string | null;
        videoType: "mp4" | "youtube" | null;
        mp4File: string | null;
        youtubeUrl: string | null;
        posterImage: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Video Poster";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        showControls: "no" | "yes" | null;
        autoplay: "no" | "yes" | null;
        loop: "no" | "yes" | null;
        allowFullscreen: "no" | "yes" | null;
      }
    | {
        _key: string;
        _type: "videoHero";
        variant: "accent1" | "accent2" | "alt" | "brand" | "default" | null;
        badge?: string;
        title?: string;
        titleFont: "default" | "statement" | null;
        richText: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              _key: string;
              _type: "button";
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              text: string | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              url?: {
                type?: "external" | "file" | "internal";
                internal?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blog";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blogIndex";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "buses";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "camiones";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "motoresPenta";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    };
                external?: string;
                file?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                openInNewTab?: boolean;
              };
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        > | null;
        videoType: "mp4" | "youtube" | null;
        mp4File: string | null;
        youtubeUrl: string | null;
        posterImage: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Video Hero Poster";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        showControls: "no" | "yes" | null;
        autoplay: "no" | "yes" | null;
        loop: "no" | "yes" | null;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
  > | null;
  seoTitle?: string;
  seoDescription?: string;
  seoImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  ogTitle?: string;
  ogDescription?: string;
  categoryData: {
    label: null;
    slug: null;
    iri: null;
    parent: null;
  };
} | null;
// Variable: querySlugPageData
// Query: *[_type == "page" && slug.current == $slug][0]{    ...,    "slug": slug.current,      pageBuilder[]{    ...,    _type,      _type == "cta" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },  },      _type == "mainHero" => {    ...,    titleFont,    layout,    "backgroundImage": backgroundImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    "backgroundVideo": backgroundVideo.asset->url,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "hero" => {    ...,    variant,    titleFont,    imageAlignment,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "doubleHero" => {    ...,    variant,    primaryBadge,    primaryTitle,    "primaryRichText": primaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "primaryImage": primaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    primaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    secondaryBadge,    secondaryTitle,    "secondaryRichText": secondaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "secondaryImage": secondaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    secondaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },      _type == "faqAccordion" => {    ...,      "faqs": array::compact(faqs[]->{    title,    _id,    _type,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  }),    link{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },      _type == "subscribeNewsletter" => {    ...,    "subTitle": subTitle[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "helperText": helperText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      _type == "imageLinkCards" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },    "cards": array::compact(cards[]{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      ),        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },    })  },      _type == "formBlock" => {    ...,    title,    description,    variant,    displayMode,    triggerText,    buttonPosition,    "form": form->{      _id,      title,      description,        fields[]{    label,    name,    type,    required,    options,    placeholder,    type == "curso" => {      courseReference->{        _id,        title,        "fechasCapacitacion": fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        }      },      selectedTrainingDate    }  },  emailRecipients,  submitButtonText,  successMessage,  errorMessage,      submitButtonText,      successMessage,      errorMessage    }  },      _type == "tabs" => {    ...,    title,    description,    tabs[]{      _key,      label,      content[]{        ...,        _type,        _key,          _type == "cta" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },  },          _type == "mainHero" => {    ...,    titleFont,    layout,    "backgroundImage": backgroundImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    "backgroundVideo": backgroundVideo.asset->url,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },          _type == "hero" => {    ...,    variant,    titleFont,    imageAlignment,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },          _type == "doubleHero" => {    ...,    variant,    primaryBadge,    primaryTitle,    "primaryRichText": primaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "primaryImage": primaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    primaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    secondaryBadge,    secondaryTitle,    "secondaryRichText": secondaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "secondaryImage": secondaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    secondaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },          _type == "faqAccordion" => {    ...,      "faqs": array::compact(faqs[]->{    title,    _id,    _type,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  }),    link{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },          _type == "subscribeNewsletter" => {    ...,    "subTitle": subTitle[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "helperText": helperText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },          _type == "imageLinkCards" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },    "cards": array::compact(cards[]{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      ),        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },    })  },          _type == "formBlock" => {    ...,    title,    description,    variant,    displayMode,    triggerText,    buttonPosition,    "form": form->{      _id,      title,      description,        fields[]{    label,    name,    type,    required,    options,    placeholder,    type == "curso" => {      courseReference->{        _id,        title,        "fechasCapacitacion": fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        }      },      selectedTrainingDate    }  },  emailRecipients,  submitButtonText,  successMessage,  errorMessage,      submitButtonText,      successMessage,      errorMessage    }  },          _type == "imageGallery" => {    ...,    title,    description,    layout,    columns,    slidesPerRow,    "images": images[]{      ...,      "image": image{        ...,        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background,      },      caption    }  },          _type == "featuredBlogs" => {    ...,    title,    subtitle,    displayMode,    blogCount,    buttonText,    "showViewAllButton": showViewAllButton == "yes",    "blogs": select(      displayMode == "curated" => blogs[]-> {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      },      displayMode == "latest" => *[        _type == "blog"         && (seoHideFromLists != true)      ] | order(publishedAt desc, _createdAt desc)[0...3] {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      }    )  },        _type == "tabs" => {          ...,          title,          description,          tabs[]{            _key,            label,            content[]{               ...,              _type,              _key            }          }        }      }    }  },      _type == "infoSection" => {    ...,    title,    headingLevel,    content[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      _type == "imageGallery" => {    ...,    title,    description,    layout,    columns,    slidesPerRow,    "images": images[]{      ...,      "image": image{        ...,        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background,      },      caption    }  },      _type == "specificationsTable" => {    ...,    title,    description,    variant,    "specifications": specifications[]{      _key,      label,      "content": content[]{        ...,          markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }      }    }  },      _type == "genericTable" => {    ...,    title,    description,    columnCount,    columnHeaders,    rows[]{      _key,      cells[]{        _key,        content,        isLastColumn,        _type == "richCell" => {          content[]{            ...,              markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }          }        }      }    },    variant  },      _type == "featuredBlogs" => {    ...,    title,    subtitle,    displayMode,    blogCount,    buttonText,    "showViewAllButton": showViewAllButton == "yes",    "blogs": select(      displayMode == "curated" => blogs[]-> {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      },      displayMode == "latest" => *[        _type == "blog"         && (seoHideFromLists != true)      ] | order(publishedAt desc, _createdAt desc)[0...3] {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      }    )  },      _type == "highlightedAspects" => {    title,    description,    columns,    aspects[]{      _key,      title,      variant,      icon,      image{        ...,        "alt": coalesce(asset->altText, asset->originalFilename, "Aspect Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background      },      content[]{        ...,        _type == "button" => {          ...,          text,          variant,          icon,            "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)        },        _type == "block" => {          ...,            markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }        }      }    }  },      _type == "videoBlock" => {    ...,    _key,    _type,    title,    videoType,    "mp4File": coalesce(      mp4File.asset->url,      mp4File.asset->sources[0].url,      null    ),    youtubeUrl,    showControls,    autoplay,    loop,    allowFullscreen,    "posterImage": posterImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Video Poster"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    }  },      _type == "videoHero" => {    ...,    variant,    titleFont,    videoType,    "mp4File": coalesce(      mp4File.asset->url,      mp4File.asset->sources[0].url,      null    ),    youtubeUrl,    showControls,    autoplay,    loop,    "posterImage": posterImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Video Hero Poster"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "textBlock" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "sucursalesSelector" => {    ...,    title,    description,    showMap,    showAllRegions,    selectedRegions,    variant  },      _type == "cursosBlock" => {    ...,    title,    description,    displayMode,    "showAllDates": showAllDates == "yes",    "cursos": cursos[]-> {      _id,      _type,      title,      description,      "slug": slug.current,        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      "fechasCapacitacion": select(        ^.showAllDates == "yes" => fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        } | order(fecha asc),        fechasCapacitacion[fecha > now()]{          nombre,          profesor,          fecha,          hora        } | order(fecha asc)      )    }  }  }  }
export type QuerySlugPageDataResult = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: string;
  slug: string | null;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  pageBuilder: Array<
    | {
        _key: string;
        _type: "cta";
        eyebrow?: string;
        title?: string;
        richText: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              _key: string;
              _type: "button";
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              text: string | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              url?: {
                type?: "external" | "file" | "internal";
                internal?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blog";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blogIndex";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "buses";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "camiones";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "motoresPenta";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    };
                external?: string;
                file?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                openInNewTab?: boolean;
              };
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        > | null;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
    | {
        _key: string;
        _type: "cursosBlock";
        title: string | null;
        description: string | null;
        cursos: Array<{
          _id: string;
          _type: "cursos";
          title: string | null;
          description: RichText | null;
          slug: string | null;
          image: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            alt: string | "Image-Broken";
            _type: "image";
            blurData: string | null;
            dominantColor: string | null;
          } | null;
          fechasCapacitacion: Array<{
            nombre: string | null;
            profesor: "Abraham Medina" | "Patricio Barahona" | null;
            fecha: string | null;
            hora: string | null;
          }> | null;
        }> | null;
        displayMode: "grid" | "list" | null;
        showAllDates: false | true;
      }
    | {
        _key: string;
        _type: "doubleHero";
        variant:
          | "accent1"
          | "accent2"
          | "alt"
          | "brand"
          | "default"
          | "inset"
          | null;
        primaryBadge: string | null;
        primaryTitle: string | null;
        primaryRichText: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }> | null;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        primaryImage: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Primary Image";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        primaryButtons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          openInNewTab: boolean | null;
          href: string | null;
        }> | null;
        secondaryBadge: string | null;
        secondaryTitle: string | null;
        secondaryRichText: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }> | null;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        secondaryImage: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Secondary Image";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        secondaryButtons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          openInNewTab: boolean | null;
          href: string | null;
        }> | null;
      }
    | {
        _key: string;
        _type: "faqAccordion";
        eyebrow?: string;
        title?: string;
        subtitle?: string;
        link: {
          title?: string;
          description?: string;
          url?: CustomUrl;
          openInNewTab: boolean | null;
          href: string | null;
        } | null;
        faqs: Array<{
          title: string | null;
          _id: string;
          _type: "faq";
          richText: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
                listItem?: "bullet" | "number";
                markDefs: Array<
                  | {
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                      openInNewTab: boolean | null;
                      href: string | "#" | null;
                    }
                  | {
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                    }
                > | null;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                _key: string;
                _type: "button";
                variant:
                  | "default"
                  | "link"
                  | "outline"
                  | "primary"
                  | "secondary"
                  | null;
                text: string | null;
                icon: "volvo-chevron-right" | "volvo-file-down" | null;
                url?: {
                  type?: "external" | "file" | "internal";
                  internal?:
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "blog";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "blogIndex";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "buses";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "camiones";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "motoresPenta";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "page";
                      };
                  external?: string;
                  file?: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                    };
                    media?: unknown;
                    _type: "file";
                  };
                  openInNewTab?: boolean;
                };
                openInNewTab: boolean | null;
                href: string | null;
              }
            | {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                caption?: string;
                _type: "image";
                _key: string;
              }
          > | null;
        }> | null;
      }
    | {
        _key: string;
        _type: "featureCardsIcon";
        eyebrow?: string;
        title?: string;
        richText?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            customLink?: CustomUrl;
            _type: "customLink";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
        cards?: Array<{
          icon?: IconPicker;
          title?: string;
          richText?: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              customLink?: CustomUrl;
              _type: "customLink";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }>;
          _type: "featureCardIcon";
          _key: string;
        }>;
      }
    | {
        _key: string;
        _type: "featuredBlogs";
        title: string | null;
        subtitle: string | null;
        displayMode: "curated" | "latest" | null;
        blogCount: "1" | "2" | "3" | null;
        blogs: Array<{
          _type: "blog";
          _id: string;
          title: string | null;
          description: string | null;
          slug: string | null;
          richText: RichText | null;
          orderRank: string | null;
          image: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            alt: string | "Image-Broken";
            blurData: string | null;
            dominantColor: string | null;
          } | null;
          publishedAt: string | null;
          authors: {
            _id: string;
            name: string | null;
            position: string | null;
            image: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Image-Broken";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
          } | null;
        }> | null;
        showViewAllButton: false | true;
        buttonText: string | null;
      }
    | {
        _key: string;
        _type: "formBlock";
        title: string | null;
        description: string | null;
        form: {
          _id: string;
          title: string | null;
          description: string | null;
          fields: Array<
            | {
                label: string | null;
                name: string | null;
                type:
                  | "checkbox"
                  | "curso"
                  | "direccion"
                  | "email"
                  | "number"
                  | "radio"
                  | "rut"
                  | "select"
                  | "tel"
                  | "text"
                  | "textarea"
                  | null;
                required: "no" | "yes" | null;
                options: Array<string> | null;
                placeholder: string | null;
                courseReference: null;
                selectedTrainingDate: null;
              }
            | {
                label: string | null;
                name: string | null;
                type:
                  | "checkbox"
                  | "curso"
                  | "direccion"
                  | "email"
                  | "number"
                  | "radio"
                  | "rut"
                  | "select"
                  | "tel"
                  | "text"
                  | "textarea"
                  | null;
                required: "no" | "yes" | null;
                options: Array<string> | null;
                placeholder: string | null;
              }
          > | null;
          emailRecipients: string | null;
          submitButtonText: string | null;
          successMessage: string | null;
          errorMessage: string | null;
        } | null;
        displayMode: "inline" | "modal" | null;
        triggerText: string | null;
        buttonPosition: "default" | "fixed" | null;
        variant: "centered" | "default" | "withBackground" | null;
      }
    | {
        _key: string;
        _type: "genericTable";
        title: string | null;
        description: string | null;
        columnCount: 3 | 4 | 5 | 6 | null;
        columnHeaders: Array<string> | null;
        rows: Array<{
          _key: string;
          cells: Array<
            | {
                _key: string;
                content: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      _key: string;
                      _type: "button";
                      variant?:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary";
                      text?: string;
                      icon?: "volvo-chevron-right" | "volvo-file-down";
                      url?: {
                        type?: "external" | "file" | "internal";
                        internal?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blog";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blogIndex";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "buses";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "camiones";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "motoresPenta";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            };
                        external?: string;
                        file?: {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                          };
                          media?: unknown;
                          _type: "file";
                        };
                        openInNewTab?: boolean;
                      };
                      markDefs: null;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                      markDefs: null;
                    }
                > | null;
                isLastColumn: boolean | null;
              }
            | {
                _key: string;
                content: string | null;
                isLastColumn: boolean | null;
              }
          > | null;
        }> | null;
        variant: "bordered" | "compact" | "default" | "striped" | null;
      }
    | {
        _key: string;
        _type: "hero";
        variant: "accent1" | "accent2" | "alt" | "brand" | "default" | null;
        badge?: string;
        title?: string;
        titleFont: "default" | "statement" | null;
        richText: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              _key: string;
              _type: "button";
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              text: string | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              url?: {
                type?: "external" | "file" | "internal";
                internal?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blog";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blogIndex";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "buses";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "camiones";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "motoresPenta";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    };
                external?: string;
                file?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                openInNewTab?: boolean;
              };
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        > | null;
        image: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        imageAlignment: "default" | "fit" | null;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
    | {
        _key: string;
        _type: "highlightedAspects";
        title: string | null;
        description: string | null;
        aspects: Array<{
          _key: string;
          title: string | null;
          variant: "icon" | "image" | "none" | null;
          icon: null;
          image: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            alt: string | "Aspect Image";
            blurData: string | null;
            dominantColor: string | null;
          } | null;
          content: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
                listItem?: "bullet" | "number";
                markDefs: Array<
                  | {
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                      openInNewTab: boolean | null;
                      href: string | "#" | null;
                    }
                  | {
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                    }
                > | null;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                _key: string;
                _type: "button";
                variant:
                  | "default"
                  | "link"
                  | "outline"
                  | "primary"
                  | "secondary"
                  | null;
                text: string | null;
                icon: "volvo-chevron-right" | "volvo-file-down" | null;
                url?: {
                  type?: "external" | "file" | "internal";
                  internal?:
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "blog";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "blogIndex";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "buses";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "camiones";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "motoresPenta";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "page";
                      };
                  external?: string;
                  file?: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                    };
                    media?: unknown;
                    _type: "file";
                  };
                  openInNewTab?: boolean;
                };
                href: string | "#" | null;
                openInNewTab: boolean | false;
              }
          > | null;
        }> | null;
        columns: "2" | "3" | "4" | null;
      }
    | {
        _key: string;
        _type: "imageGallery";
        title: string | null;
        description: string | null;
        images: Array<{
          _key: string;
          _type: "galleryImage";
          image: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            alt: string | "Gallery Image";
            blurData: string | null;
            dominantColor: string | null;
          } | null;
          alt?: string;
          caption: string | null;
        }> | null;
        layout: "bento" | "carousel" | "grid" | "masonry" | null;
        columns: "2" | "3" | "4" | null;
        slidesPerRow: 1 | 2 | 3 | 4 | 5 | null;
      }
    | {
        _key: string;
        _type: "imageLinkCards";
        eyebrow?: string;
        title?: string;
        richText: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              _key: string;
              _type: "button";
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              text: string | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              url?: {
                type?: "external" | "file" | "internal";
                internal?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blog";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blogIndex";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "buses";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "camiones";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "motoresPenta";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    };
                external?: string;
                file?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                openInNewTab?: boolean;
              };
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        > | null;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
        cards: Array<{
          title?: string;
          description?: string;
          image: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            alt: string | "Image-Broken";
            blurData: string | null;
            dominantColor: string | null;
          } | null;
          url?: CustomUrl;
          _type: "imageLinkCard";
          _key: string;
          openInNewTab: boolean | null;
          href: string | null;
        }> | null;
      }
    | {
        _key: string;
        _type: "infoSection";
        title: string | null;
        headingLevel: "h1" | "h2" | "h3" | "h4" | null;
        content: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }> | null;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
      }
    | {
        _key: string;
        _type: "mainHero";
        badge?: string;
        title?: string;
        titleFont: "default" | "statement" | null;
        layout: "default" | "fullImage" | null;
        richText: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              _key: string;
              _type: "button";
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              text: string | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              url?: {
                type?: "external" | "file" | "internal";
                internal?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blog";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blogIndex";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "buses";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "camiones";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "motoresPenta";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    };
                external?: string;
                file?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                openInNewTab?: boolean;
              };
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        > | null;
        backgroundType?: "image" | "video";
        backgroundImage: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Background Image";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        backgroundVideo: string | null;
        image: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
    | {
        _key: string;
        _type: "productListing";
        title?: string;
        productType?: "buses" | "camiones" | "motoresPenta";
        taxonomyFilter?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "skosConcept";
        };
      }
    | {
        _key: string;
        _type: "specificationsTable";
        title: string | null;
        description: string | null;
        specifications: Array<{
          _key: string;
          label: string | null;
          content: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
                listItem?: "bullet" | "number";
                markDefs: Array<
                  | {
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                      openInNewTab: boolean | null;
                      href: string | "#" | null;
                    }
                  | {
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                    }
                > | null;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                _key: string;
                _type: "button";
                variant?:
                  | "default"
                  | "link"
                  | "outline"
                  | "primary"
                  | "secondary";
                text?: string;
                icon?: "volvo-chevron-right" | "volvo-file-down";
                url?: {
                  type?: "external" | "file" | "internal";
                  internal?:
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "blog";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "blogIndex";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "buses";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "camiones";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "motoresPenta";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "page";
                      };
                  external?: string;
                  file?: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                    };
                    media?: unknown;
                    _type: "file";
                  };
                  openInNewTab?: boolean;
                };
                markDefs: null;
              }
            | {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                caption?: string;
                _type: "image";
                _key: string;
                markDefs: null;
              }
          > | null;
        }> | null;
        variant: "bordered" | "compact" | "default" | "striped" | null;
      }
    | {
        _key: string;
        _type: "subscribeNewsletter";
        title?: string;
        subTitle: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<
            | {
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
                openInNewTab: boolean | null;
                href: string | "#" | null;
              }
            | {
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }
          > | null;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        helperText: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<
            | {
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
                openInNewTab: boolean | null;
                href: string | "#" | null;
              }
            | {
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }
          > | null;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
      }
    | {
        _key: string;
        _type: "sucursalesSelector";
        title: string | null;
        description: string | null;
        showMap: boolean | null;
        showAllRegions: boolean | null;
        selectedRegions: Array<string> | null;
        variant: "cards" | "compact" | "default" | null;
      }
    | {
        _key: string;
        _type: "tabs";
        title: string | null;
        description: string | null;
        tabs: Array<{
          _key: string;
          label: string | null;
          content: Array<
            | {
                eyebrow?: string;
                title?: string;
                richText: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      _key: string;
                      _type: "button";
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      text: string | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      url?: {
                        type?: "external" | "file" | "internal";
                        internal?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blog";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blogIndex";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "buses";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "camiones";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "motoresPenta";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            };
                        external?: string;
                        file?: {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                          };
                          media?: unknown;
                          _type: "file";
                        };
                        openInNewTab?: boolean;
                      };
                      openInNewTab: boolean | null;
                      href: string | null;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                > | null;
                buttons: Array<{
                  text: string | null;
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  _key: string;
                  _type: "button";
                  href: string | "#" | null;
                  openInNewTab: boolean | false;
                }> | null;
                _type: "cta";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                cursos?: Array<{
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  _key: string;
                  [internalGroqTypeReferenceTo]?: "cursos";
                }>;
                displayMode?: "grid" | "list";
                showAllDates?: "no" | "yes";
                _type: "cursosBlock";
                _key: string;
              }
            | {
                variant:
                  | "accent1"
                  | "accent2"
                  | "alt"
                  | "brand"
                  | "default"
                  | "inset"
                  | null;
                primaryBadge: string | null;
                primaryTitle: string | null;
                primaryRichText: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "blockquote"
                    | "h1"
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<{
                    href?: string;
                    _type: "link";
                    _key: string;
                  }> | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
                primaryImage: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Primary Image";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
                primaryButtons: Array<{
                  text: string | null;
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  _key: string;
                  _type: "button";
                  openInNewTab: boolean | null;
                  href: string | null;
                }> | null;
                secondaryBadge: string | null;
                secondaryTitle: string | null;
                secondaryRichText: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "blockquote"
                    | "h1"
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<{
                    href?: string;
                    _type: "link";
                    _key: string;
                  }> | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
                secondaryImage: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Secondary Image";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
                secondaryButtons: Array<{
                  text: string | null;
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  _key: string;
                  _type: "button";
                  openInNewTab: boolean | null;
                  href: string | null;
                }> | null;
                _type: "doubleHero";
                _key: string;
              }
            | {
                eyebrow?: string;
                title?: string;
                subtitle?: string;
                link: {
                  title?: string;
                  description?: string;
                  url?: CustomUrl;
                  openInNewTab: boolean | null;
                  href: string | null;
                } | null;
                faqs: Array<{
                  title: string | null;
                  _id: string;
                  _type: "faq";
                  richText: Array<
                    | {
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?:
                          | "h2"
                          | "h3"
                          | "h4"
                          | "h5"
                          | "h6"
                          | "inline"
                          | "normal";
                        listItem?: "bullet" | "number";
                        markDefs: Array<
                          | {
                              customLink?: CustomUrl;
                              _type: "customLink";
                              _key: string;
                              openInNewTab: boolean | null;
                              href: string | "#" | null;
                            }
                          | {
                              customLink?: CustomUrl;
                              _type: "customLink";
                              _key: string;
                            }
                        > | null;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }
                    | {
                        _key: string;
                        _type: "button";
                        variant:
                          | "default"
                          | "link"
                          | "outline"
                          | "primary"
                          | "secondary"
                          | null;
                        text: string | null;
                        icon: "volvo-chevron-right" | "volvo-file-down" | null;
                        url?: {
                          type?: "external" | "file" | "internal";
                          internal?:
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "blog";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "blogIndex";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "buses";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "camiones";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "motoresPenta";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "page";
                              };
                          external?: string;
                          file?: {
                            asset?: {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                            };
                            media?: unknown;
                            _type: "file";
                          };
                          openInNewTab?: boolean;
                        };
                        openInNewTab: boolean | null;
                        href: string | null;
                      }
                    | {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        caption?: string;
                        _type: "image";
                        _key: string;
                      }
                  > | null;
                }> | null;
                _type: "faqAccordion";
                _key: string;
              }
            | {
                eyebrow?: string;
                title?: string;
                richText?: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }>;
                cards?: Array<{
                  icon?: IconPicker;
                  title?: string;
                  richText?: Array<{
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs?: Array<{
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                    }>;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }>;
                  _type: "featureCardIcon";
                  _key: string;
                }>;
                _type: "featureCardsIcon";
                _key: string;
              }
            | {
                title: string | null;
                description: string | null;
                form: {
                  _id: string;
                  title: string | null;
                  description: string | null;
                  fields: Array<
                    | {
                        label: string | null;
                        name: string | null;
                        type:
                          | "checkbox"
                          | "curso"
                          | "direccion"
                          | "email"
                          | "number"
                          | "radio"
                          | "rut"
                          | "select"
                          | "tel"
                          | "text"
                          | "textarea"
                          | null;
                        required: "no" | "yes" | null;
                        options: Array<string> | null;
                        placeholder: string | null;
                        courseReference: null;
                        selectedTrainingDate: null;
                      }
                    | {
                        label: string | null;
                        name: string | null;
                        type:
                          | "checkbox"
                          | "curso"
                          | "direccion"
                          | "email"
                          | "number"
                          | "radio"
                          | "rut"
                          | "select"
                          | "tel"
                          | "text"
                          | "textarea"
                          | null;
                        required: "no" | "yes" | null;
                        options: Array<string> | null;
                        placeholder: string | null;
                      }
                  > | null;
                  emailRecipients: string | null;
                  submitButtonText: string | null;
                  successMessage: string | null;
                  errorMessage: string | null;
                } | null;
                displayMode: "inline" | "modal" | null;
                triggerText: string | null;
                buttonPosition: "default" | "fixed" | null;
                variant: "centered" | "default" | "withBackground" | null;
                _type: "formBlock";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                columnCount?: 3 | 4 | 5 | 6;
                columnHeaders?: Array<string>;
                rows?: Array<{
                  cells?: Array<
                    | {
                        content?: string;
                        isLastColumn?: boolean;
                        _type: "cell";
                        _key: string;
                      }
                    | {
                        content?: Array<
                          | ({
                              _key: string;
                            } & Button)
                          | {
                              children?: Array<{
                                marks?: Array<string>;
                                text?: string;
                                _type: "span";
                                _key: string;
                              }>;
                              style?:
                                | "h2"
                                | "h3"
                                | "h4"
                                | "h5"
                                | "h6"
                                | "inline"
                                | "normal";
                              listItem?: "bullet" | "number";
                              markDefs?: Array<{
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }>;
                              level?: number;
                              _type: "block";
                              _key: string;
                            }
                          | {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                              };
                              media?: unknown;
                              hotspot?: SanityImageHotspot;
                              crop?: SanityImageCrop;
                              caption?: string;
                              _type: "image";
                              _key: string;
                            }
                        >;
                        isLastColumn?: boolean;
                        _type: "richCell";
                        _key: string;
                      }
                  >;
                  _type: "row";
                  _key: string;
                }>;
                variant?: "bordered" | "compact" | "default" | "striped";
                _type: "genericTable";
                _key: string;
              }
            | {
                variant:
                  | "accent1"
                  | "accent2"
                  | "alt"
                  | "brand"
                  | "default"
                  | null;
                badge?: string;
                title?: string;
                titleFont: "default" | "statement" | null;
                richText: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      _key: string;
                      _type: "button";
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      text: string | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      url?: {
                        type?: "external" | "file" | "internal";
                        internal?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blog";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blogIndex";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "buses";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "camiones";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "motoresPenta";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            };
                        external?: string;
                        file?: {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                          };
                          media?: unknown;
                          _type: "file";
                        };
                        openInNewTab?: boolean;
                      };
                      openInNewTab: boolean | null;
                      href: string | null;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                > | null;
                image: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Image-Broken";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
                imageAlignment: "default" | "fit" | null;
                buttons: Array<{
                  text: string | null;
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  _key: string;
                  _type: "button";
                  href: string | "#" | null;
                  openInNewTab: boolean | false;
                }> | null;
                _type: "hero";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                aspects?: Array<{
                  title?: string;
                  variant?: "icon" | "image" | "none";
                  image?: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    _type: "image";
                  };
                  content?: Array<
                    | ({
                        _key: string;
                      } & Button)
                    | {
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?:
                          | "h2"
                          | "h3"
                          | "h4"
                          | "h5"
                          | "h6"
                          | "inline"
                          | "normal";
                        listItem?: "bullet" | "number";
                        markDefs?: Array<{
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }>;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }
                  >;
                  _type: "aspect";
                  _key: string;
                }>;
                columns?: "2" | "3" | "4";
                _type: "highlightedAspects";
                _key: string;
              }
            | {
                title: string | null;
                description: string | null;
                images: Array<{
                  _key: string;
                  _type: "galleryImage";
                  image: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    _type: "image";
                    alt: string | "Gallery Image";
                    blurData: string | null;
                    dominantColor: string | null;
                  } | null;
                  alt?: string;
                  caption: string | null;
                }> | null;
                layout: "bento" | "carousel" | "grid" | "masonry" | null;
                columns: "2" | "3" | "4" | null;
                slidesPerRow: 1 | 2 | 3 | 4 | 5 | null;
                _type: "imageGallery";
                _key: string;
              }
            | {
                eyebrow?: string;
                title?: string;
                richText: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      _key: string;
                      _type: "button";
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      text: string | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      url?: {
                        type?: "external" | "file" | "internal";
                        internal?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blog";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blogIndex";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "buses";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "camiones";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "motoresPenta";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            };
                        external?: string;
                        file?: {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                          };
                          media?: unknown;
                          _type: "file";
                        };
                        openInNewTab?: boolean;
                      };
                      openInNewTab: boolean | null;
                      href: string | null;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                > | null;
                buttons: Array<{
                  text: string | null;
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  _key: string;
                  _type: "button";
                  href: string | "#" | null;
                  openInNewTab: boolean | false;
                }> | null;
                cards: Array<{
                  title?: string;
                  description?: string;
                  image: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    _type: "image";
                    alt: string | "Image-Broken";
                    blurData: string | null;
                    dominantColor: string | null;
                  } | null;
                  url?: CustomUrl;
                  _type: "imageLinkCard";
                  _key: string;
                  openInNewTab: boolean | null;
                  href: string | null;
                }> | null;
                _type: "imageLinkCards";
                _key: string;
              }
            | {
                badge?: string;
                title?: string;
                titleFont: "default" | "statement" | null;
                layout: "default" | "fullImage" | null;
                richText: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      _key: string;
                      _type: "button";
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      text: string | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      url?: {
                        type?: "external" | "file" | "internal";
                        internal?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blog";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blogIndex";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "buses";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "camiones";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "motoresPenta";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            };
                        external?: string;
                        file?: {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                          };
                          media?: unknown;
                          _type: "file";
                        };
                        openInNewTab?: boolean;
                      };
                      openInNewTab: boolean | null;
                      href: string | null;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                > | null;
                backgroundType?: "image" | "video";
                backgroundImage: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Background Image";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
                backgroundVideo: string | null;
                image: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Image-Broken";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
                buttons: Array<{
                  text: string | null;
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  _key: string;
                  _type: "button";
                  href: string | "#" | null;
                  openInNewTab: boolean | false;
                }> | null;
                _type: "mainHero";
                _key: string;
              }
            | {
                title?: string;
                productType?: "buses" | "camiones" | "motoresPenta";
                taxonomyFilter?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "skosConcept";
                };
                _type: "productListing";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                specifications?: Array<
                  {
                    _key: string;
                  } & SpecificationItem
                >;
                variant?: "bordered" | "compact" | "default" | "striped";
                _type: "specificationsTable";
                _key: string;
              }
            | {
                title?: string;
                subTitle: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
                helperText: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
                _type: "subscribeNewsletter";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                showMap?: boolean;
                showAllRegions?: boolean;
                selectedRegions?: Array<string>;
                variant?: "cards" | "compact" | "default";
                _type: "sucursalesSelector";
                _key: string;
              }
            | {
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                _type: "textBlock";
                _key: string;
              }
            | {
                title?: string;
                videoType?: "mp4" | "youtube";
                mp4File?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                youtubeUrl?: string;
                posterImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                showControls?: "no" | "yes";
                autoplay?: "no" | "yes";
                loop?: "no" | "yes";
                allowFullscreen?: "no" | "yes";
                _type: "videoBlock";
                _key: string;
              }
            | {
                variant?: "accent1" | "accent2" | "alt" | "brand" | "default";
                badge?: string;
                title?: string;
                titleFont?: "default" | "statement";
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                videoType?: "mp4" | "youtube";
                mp4File?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                youtubeUrl?: string;
                posterImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                showControls?: "no" | "yes";
                autoplay?: "no" | "yes";
                loop?: "no" | "yes";
                buttons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                _type: "videoHero";
                _key: string;
              }
          > | null;
        }> | null;
      }
    | {
        _key: string;
        _type: "textBlock";
        richText: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              _key: string;
              _type: "button";
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              text: string | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              url?: {
                type?: "external" | "file" | "internal";
                internal?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blog";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blogIndex";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "buses";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "camiones";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "motoresPenta";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    };
                external?: string;
                file?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                openInNewTab?: boolean;
              };
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        > | null;
      }
    | {
        _key: string;
        _type: "videoBlock";
        title: string | null;
        videoType: "mp4" | "youtube" | null;
        mp4File: string | null;
        youtubeUrl: string | null;
        posterImage: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Video Poster";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        showControls: "no" | "yes" | null;
        autoplay: "no" | "yes" | null;
        loop: "no" | "yes" | null;
        allowFullscreen: "no" | "yes" | null;
      }
    | {
        _key: string;
        _type: "videoHero";
        variant: "accent1" | "accent2" | "alt" | "brand" | "default" | null;
        badge?: string;
        title?: string;
        titleFont: "default" | "statement" | null;
        richText: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              _key: string;
              _type: "button";
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              text: string | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              url?: {
                type?: "external" | "file" | "internal";
                internal?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blog";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blogIndex";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "buses";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "camiones";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "motoresPenta";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    };
                external?: string;
                file?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                openInNewTab?: boolean;
              };
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        > | null;
        videoType: "mp4" | "youtube" | null;
        mp4File: string | null;
        youtubeUrl: string | null;
        posterImage: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Video Hero Poster";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        showControls: "no" | "yes" | null;
        autoplay: "no" | "yes" | null;
        loop: "no" | "yes" | null;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
  > | null;
  seoTitle?: string;
  seoDescription?: string;
  seoImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  seoNoIndex?: boolean;
  ogTitle?: string;
  ogDescription?: string;
} | null;
// Variable: querySlugPagePaths
// Query: *[_type == "page" && defined(slug.current)].slug.current
export type QuerySlugPagePathsResult = Array<string | null>;
// Variable: queryBlogIndexPageData
// Query: *[_type == "blogIndex"][0]{    ...,    _id,    _type,    title,    description,    "displayFeaturedBlogs" : displayFeaturedBlogs == "yes",    "featuredBlogsCount" : featuredBlogsCount,      pageBuilder[]{    ...,    _type,      _type == "cta" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },  },      _type == "mainHero" => {    ...,    titleFont,    layout,    "backgroundImage": backgroundImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    "backgroundVideo": backgroundVideo.asset->url,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "hero" => {    ...,    variant,    titleFont,    imageAlignment,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "doubleHero" => {    ...,    variant,    primaryBadge,    primaryTitle,    "primaryRichText": primaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "primaryImage": primaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    primaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    secondaryBadge,    secondaryTitle,    "secondaryRichText": secondaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "secondaryImage": secondaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    secondaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },      _type == "faqAccordion" => {    ...,      "faqs": array::compact(faqs[]->{    title,    _id,    _type,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  }),    link{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },      _type == "subscribeNewsletter" => {    ...,    "subTitle": subTitle[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "helperText": helperText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      _type == "imageLinkCards" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },    "cards": array::compact(cards[]{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      ),        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },    })  },      _type == "formBlock" => {    ...,    title,    description,    variant,    displayMode,    triggerText,    buttonPosition,    "form": form->{      _id,      title,      description,        fields[]{    label,    name,    type,    required,    options,    placeholder,    type == "curso" => {      courseReference->{        _id,        title,        "fechasCapacitacion": fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        }      },      selectedTrainingDate    }  },  emailRecipients,  submitButtonText,  successMessage,  errorMessage,      submitButtonText,      successMessage,      errorMessage    }  },      _type == "tabs" => {    ...,    title,    description,    tabs[]{      _key,      label,      content[]{        ...,        _type,        _key,          _type == "cta" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },  },          _type == "mainHero" => {    ...,    titleFont,    layout,    "backgroundImage": backgroundImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    "backgroundVideo": backgroundVideo.asset->url,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },          _type == "hero" => {    ...,    variant,    titleFont,    imageAlignment,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },          _type == "doubleHero" => {    ...,    variant,    primaryBadge,    primaryTitle,    "primaryRichText": primaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "primaryImage": primaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    primaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    secondaryBadge,    secondaryTitle,    "secondaryRichText": secondaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "secondaryImage": secondaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    secondaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },          _type == "faqAccordion" => {    ...,      "faqs": array::compact(faqs[]->{    title,    _id,    _type,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  }),    link{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },          _type == "subscribeNewsletter" => {    ...,    "subTitle": subTitle[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "helperText": helperText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },          _type == "imageLinkCards" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },    "cards": array::compact(cards[]{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      ),        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },    })  },          _type == "formBlock" => {    ...,    title,    description,    variant,    displayMode,    triggerText,    buttonPosition,    "form": form->{      _id,      title,      description,        fields[]{    label,    name,    type,    required,    options,    placeholder,    type == "curso" => {      courseReference->{        _id,        title,        "fechasCapacitacion": fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        }      },      selectedTrainingDate    }  },  emailRecipients,  submitButtonText,  successMessage,  errorMessage,      submitButtonText,      successMessage,      errorMessage    }  },          _type == "imageGallery" => {    ...,    title,    description,    layout,    columns,    slidesPerRow,    "images": images[]{      ...,      "image": image{        ...,        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background,      },      caption    }  },          _type == "featuredBlogs" => {    ...,    title,    subtitle,    displayMode,    blogCount,    buttonText,    "showViewAllButton": showViewAllButton == "yes",    "blogs": select(      displayMode == "curated" => blogs[]-> {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      },      displayMode == "latest" => *[        _type == "blog"         && (seoHideFromLists != true)      ] | order(publishedAt desc, _createdAt desc)[0...3] {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      }    )  },        _type == "tabs" => {          ...,          title,          description,          tabs[]{            _key,            label,            content[]{               ...,              _type,              _key            }          }        }      }    }  },      _type == "infoSection" => {    ...,    title,    headingLevel,    content[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      _type == "imageGallery" => {    ...,    title,    description,    layout,    columns,    slidesPerRow,    "images": images[]{      ...,      "image": image{        ...,        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background,      },      caption    }  },      _type == "specificationsTable" => {    ...,    title,    description,    variant,    "specifications": specifications[]{      _key,      label,      "content": content[]{        ...,          markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }      }    }  },      _type == "genericTable" => {    ...,    title,    description,    columnCount,    columnHeaders,    rows[]{      _key,      cells[]{        _key,        content,        isLastColumn,        _type == "richCell" => {          content[]{            ...,              markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }          }        }      }    },    variant  },      _type == "featuredBlogs" => {    ...,    title,    subtitle,    displayMode,    blogCount,    buttonText,    "showViewAllButton": showViewAllButton == "yes",    "blogs": select(      displayMode == "curated" => blogs[]-> {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      },      displayMode == "latest" => *[        _type == "blog"         && (seoHideFromLists != true)      ] | order(publishedAt desc, _createdAt desc)[0...3] {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      }    )  },      _type == "highlightedAspects" => {    title,    description,    columns,    aspects[]{      _key,      title,      variant,      icon,      image{        ...,        "alt": coalesce(asset->altText, asset->originalFilename, "Aspect Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background      },      content[]{        ...,        _type == "button" => {          ...,          text,          variant,          icon,            "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)        },        _type == "block" => {          ...,            markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }        }      }    }  },      _type == "videoBlock" => {    ...,    _key,    _type,    title,    videoType,    "mp4File": coalesce(      mp4File.asset->url,      mp4File.asset->sources[0].url,      null    ),    youtubeUrl,    showControls,    autoplay,    loop,    allowFullscreen,    "posterImage": posterImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Video Poster"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    }  },      _type == "videoHero" => {    ...,    variant,    titleFont,    videoType,    "mp4File": coalesce(      mp4File.asset->url,      mp4File.asset->sources[0].url,      null    ),    youtubeUrl,    showControls,    autoplay,    loop,    "posterImage": posterImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Video Hero Poster"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "textBlock" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "sucursalesSelector" => {    ...,    title,    description,    showMap,    showAllRegions,    selectedRegions,    variant  },      _type == "cursosBlock" => {    ...,    title,    description,    displayMode,    "showAllDates": showAllDates == "yes",    "cursos": cursos[]-> {      _id,      _type,      title,      description,      "slug": slug.current,        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      "fechasCapacitacion": select(        ^.showAllDates == "yes" => fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        } | order(fecha asc),        fechasCapacitacion[fecha > now()]{          nombre,          profesor,          fecha,          hora        } | order(fecha asc)      )    }  }  },    "slug": slug.current,    "blogs": *[_type == "blog" && (seoHideFromLists != true)] | order(orderRank asc){        _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }    }  }
export type QueryBlogIndexPageDataResult = {
  _id: string;
  _type: "blogIndex";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string | null;
  description: string | null;
  slug: string | null;
  displayFeaturedBlogs: false | true;
  featuredBlogsCount: "1" | "2" | "3" | null;
  pageBuilder: Array<
    | {
        _key: string;
        _type: "cta";
        eyebrow?: string;
        title?: string;
        richText: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              _key: string;
              _type: "button";
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              text: string | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              url?: {
                type?: "external" | "file" | "internal";
                internal?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blog";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blogIndex";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "buses";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "camiones";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "motoresPenta";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    };
                external?: string;
                file?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                openInNewTab?: boolean;
              };
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        > | null;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
    | {
        _key: string;
        _type: "cursosBlock";
        title: string | null;
        description: string | null;
        cursos: Array<{
          _id: string;
          _type: "cursos";
          title: string | null;
          description: RichText | null;
          slug: string | null;
          image: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            alt: string | "Image-Broken";
            _type: "image";
            blurData: string | null;
            dominantColor: string | null;
          } | null;
          fechasCapacitacion: Array<{
            nombre: string | null;
            profesor: "Abraham Medina" | "Patricio Barahona" | null;
            fecha: string | null;
            hora: string | null;
          }> | null;
        }> | null;
        displayMode: "grid" | "list" | null;
        showAllDates: false | true;
      }
    | {
        _key: string;
        _type: "doubleHero";
        variant:
          | "accent1"
          | "accent2"
          | "alt"
          | "brand"
          | "default"
          | "inset"
          | null;
        primaryBadge: string | null;
        primaryTitle: string | null;
        primaryRichText: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }> | null;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        primaryImage: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Primary Image";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        primaryButtons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          openInNewTab: boolean | null;
          href: string | null;
        }> | null;
        secondaryBadge: string | null;
        secondaryTitle: string | null;
        secondaryRichText: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }> | null;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        secondaryImage: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Secondary Image";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        secondaryButtons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          openInNewTab: boolean | null;
          href: string | null;
        }> | null;
      }
    | {
        _key: string;
        _type: "faqAccordion";
        eyebrow?: string;
        title?: string;
        subtitle?: string;
        link: {
          title?: string;
          description?: string;
          url?: CustomUrl;
          openInNewTab: boolean | null;
          href: string | null;
        } | null;
        faqs: Array<{
          title: string | null;
          _id: string;
          _type: "faq";
          richText: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
                listItem?: "bullet" | "number";
                markDefs: Array<
                  | {
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                      openInNewTab: boolean | null;
                      href: string | "#" | null;
                    }
                  | {
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                    }
                > | null;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                _key: string;
                _type: "button";
                variant:
                  | "default"
                  | "link"
                  | "outline"
                  | "primary"
                  | "secondary"
                  | null;
                text: string | null;
                icon: "volvo-chevron-right" | "volvo-file-down" | null;
                url?: {
                  type?: "external" | "file" | "internal";
                  internal?:
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "blog";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "blogIndex";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "buses";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "camiones";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "motoresPenta";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "page";
                      };
                  external?: string;
                  file?: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                    };
                    media?: unknown;
                    _type: "file";
                  };
                  openInNewTab?: boolean;
                };
                openInNewTab: boolean | null;
                href: string | null;
              }
            | {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                caption?: string;
                _type: "image";
                _key: string;
              }
          > | null;
        }> | null;
      }
    | {
        _key: string;
        _type: "featureCardsIcon";
        eyebrow?: string;
        title?: string;
        richText?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            customLink?: CustomUrl;
            _type: "customLink";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
        cards?: Array<{
          icon?: IconPicker;
          title?: string;
          richText?: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              customLink?: CustomUrl;
              _type: "customLink";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }>;
          _type: "featureCardIcon";
          _key: string;
        }>;
      }
    | {
        _key: string;
        _type: "featuredBlogs";
        title: string | null;
        subtitle: string | null;
        displayMode: "curated" | "latest" | null;
        blogCount: "1" | "2" | "3" | null;
        blogs: Array<{
          _type: "blog";
          _id: string;
          title: string | null;
          description: string | null;
          slug: string | null;
          richText: RichText | null;
          orderRank: string | null;
          image: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            alt: string | "Image-Broken";
            blurData: string | null;
            dominantColor: string | null;
          } | null;
          publishedAt: string | null;
          authors: {
            _id: string;
            name: string | null;
            position: string | null;
            image: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Image-Broken";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
          } | null;
        }> | null;
        showViewAllButton: false | true;
        buttonText: string | null;
      }
    | {
        _key: string;
        _type: "formBlock";
        title: string | null;
        description: string | null;
        form: {
          _id: string;
          title: string | null;
          description: string | null;
          fields: Array<
            | {
                label: string | null;
                name: string | null;
                type:
                  | "checkbox"
                  | "curso"
                  | "direccion"
                  | "email"
                  | "number"
                  | "radio"
                  | "rut"
                  | "select"
                  | "tel"
                  | "text"
                  | "textarea"
                  | null;
                required: "no" | "yes" | null;
                options: Array<string> | null;
                placeholder: string | null;
                courseReference: null;
                selectedTrainingDate: null;
              }
            | {
                label: string | null;
                name: string | null;
                type:
                  | "checkbox"
                  | "curso"
                  | "direccion"
                  | "email"
                  | "number"
                  | "radio"
                  | "rut"
                  | "select"
                  | "tel"
                  | "text"
                  | "textarea"
                  | null;
                required: "no" | "yes" | null;
                options: Array<string> | null;
                placeholder: string | null;
              }
          > | null;
          emailRecipients: string | null;
          submitButtonText: string | null;
          successMessage: string | null;
          errorMessage: string | null;
        } | null;
        displayMode: "inline" | "modal" | null;
        triggerText: string | null;
        buttonPosition: "default" | "fixed" | null;
        variant: "centered" | "default" | "withBackground" | null;
      }
    | {
        _key: string;
        _type: "genericTable";
        title: string | null;
        description: string | null;
        columnCount: 3 | 4 | 5 | 6 | null;
        columnHeaders: Array<string> | null;
        rows: Array<{
          _key: string;
          cells: Array<
            | {
                _key: string;
                content: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      _key: string;
                      _type: "button";
                      variant?:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary";
                      text?: string;
                      icon?: "volvo-chevron-right" | "volvo-file-down";
                      url?: {
                        type?: "external" | "file" | "internal";
                        internal?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blog";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blogIndex";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "buses";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "camiones";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "motoresPenta";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            };
                        external?: string;
                        file?: {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                          };
                          media?: unknown;
                          _type: "file";
                        };
                        openInNewTab?: boolean;
                      };
                      markDefs: null;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                      markDefs: null;
                    }
                > | null;
                isLastColumn: boolean | null;
              }
            | {
                _key: string;
                content: string | null;
                isLastColumn: boolean | null;
              }
          > | null;
        }> | null;
        variant: "bordered" | "compact" | "default" | "striped" | null;
      }
    | {
        _key: string;
        _type: "hero";
        variant: "accent1" | "accent2" | "alt" | "brand" | "default" | null;
        badge?: string;
        title?: string;
        titleFont: "default" | "statement" | null;
        richText: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              _key: string;
              _type: "button";
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              text: string | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              url?: {
                type?: "external" | "file" | "internal";
                internal?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blog";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blogIndex";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "buses";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "camiones";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "motoresPenta";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    };
                external?: string;
                file?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                openInNewTab?: boolean;
              };
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        > | null;
        image: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        imageAlignment: "default" | "fit" | null;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
    | {
        _key: string;
        _type: "highlightedAspects";
        title: string | null;
        description: string | null;
        aspects: Array<{
          _key: string;
          title: string | null;
          variant: "icon" | "image" | "none" | null;
          icon: null;
          image: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            alt: string | "Aspect Image";
            blurData: string | null;
            dominantColor: string | null;
          } | null;
          content: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
                listItem?: "bullet" | "number";
                markDefs: Array<
                  | {
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                      openInNewTab: boolean | null;
                      href: string | "#" | null;
                    }
                  | {
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                    }
                > | null;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                _key: string;
                _type: "button";
                variant:
                  | "default"
                  | "link"
                  | "outline"
                  | "primary"
                  | "secondary"
                  | null;
                text: string | null;
                icon: "volvo-chevron-right" | "volvo-file-down" | null;
                url?: {
                  type?: "external" | "file" | "internal";
                  internal?:
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "blog";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "blogIndex";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "buses";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "camiones";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "motoresPenta";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "page";
                      };
                  external?: string;
                  file?: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                    };
                    media?: unknown;
                    _type: "file";
                  };
                  openInNewTab?: boolean;
                };
                href: string | "#" | null;
                openInNewTab: boolean | false;
              }
          > | null;
        }> | null;
        columns: "2" | "3" | "4" | null;
      }
    | {
        _key: string;
        _type: "imageGallery";
        title: string | null;
        description: string | null;
        images: Array<{
          _key: string;
          _type: "galleryImage";
          image: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            alt: string | "Gallery Image";
            blurData: string | null;
            dominantColor: string | null;
          } | null;
          alt?: string;
          caption: string | null;
        }> | null;
        layout: "bento" | "carousel" | "grid" | "masonry" | null;
        columns: "2" | "3" | "4" | null;
        slidesPerRow: 1 | 2 | 3 | 4 | 5 | null;
      }
    | {
        _key: string;
        _type: "imageLinkCards";
        eyebrow?: string;
        title?: string;
        richText: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              _key: string;
              _type: "button";
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              text: string | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              url?: {
                type?: "external" | "file" | "internal";
                internal?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blog";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blogIndex";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "buses";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "camiones";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "motoresPenta";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    };
                external?: string;
                file?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                openInNewTab?: boolean;
              };
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        > | null;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
        cards: Array<{
          title?: string;
          description?: string;
          image: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            alt: string | "Image-Broken";
            blurData: string | null;
            dominantColor: string | null;
          } | null;
          url?: CustomUrl;
          _type: "imageLinkCard";
          _key: string;
          openInNewTab: boolean | null;
          href: string | null;
        }> | null;
      }
    | {
        _key: string;
        _type: "infoSection";
        title: string | null;
        headingLevel: "h1" | "h2" | "h3" | "h4" | null;
        content: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }> | null;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
      }
    | {
        _key: string;
        _type: "mainHero";
        badge?: string;
        title?: string;
        titleFont: "default" | "statement" | null;
        layout: "default" | "fullImage" | null;
        richText: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              _key: string;
              _type: "button";
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              text: string | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              url?: {
                type?: "external" | "file" | "internal";
                internal?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blog";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blogIndex";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "buses";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "camiones";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "motoresPenta";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    };
                external?: string;
                file?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                openInNewTab?: boolean;
              };
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        > | null;
        backgroundType?: "image" | "video";
        backgroundImage: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Background Image";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        backgroundVideo: string | null;
        image: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
    | {
        _key: string;
        _type: "productListing";
        title?: string;
        productType?: "buses" | "camiones" | "motoresPenta";
        taxonomyFilter?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "skosConcept";
        };
      }
    | {
        _key: string;
        _type: "specificationsTable";
        title: string | null;
        description: string | null;
        specifications: Array<{
          _key: string;
          label: string | null;
          content: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
                listItem?: "bullet" | "number";
                markDefs: Array<
                  | {
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                      openInNewTab: boolean | null;
                      href: string | "#" | null;
                    }
                  | {
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                    }
                > | null;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                _key: string;
                _type: "button";
                variant?:
                  | "default"
                  | "link"
                  | "outline"
                  | "primary"
                  | "secondary";
                text?: string;
                icon?: "volvo-chevron-right" | "volvo-file-down";
                url?: {
                  type?: "external" | "file" | "internal";
                  internal?:
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "blog";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "blogIndex";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "buses";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "camiones";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "motoresPenta";
                      }
                    | {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "page";
                      };
                  external?: string;
                  file?: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                    };
                    media?: unknown;
                    _type: "file";
                  };
                  openInNewTab?: boolean;
                };
                markDefs: null;
              }
            | {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                caption?: string;
                _type: "image";
                _key: string;
                markDefs: null;
              }
          > | null;
        }> | null;
        variant: "bordered" | "compact" | "default" | "striped" | null;
      }
    | {
        _key: string;
        _type: "subscribeNewsletter";
        title?: string;
        subTitle: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<
            | {
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
                openInNewTab: boolean | null;
                href: string | "#" | null;
              }
            | {
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }
          > | null;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        helperText: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<
            | {
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
                openInNewTab: boolean | null;
                href: string | "#" | null;
              }
            | {
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }
          > | null;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
      }
    | {
        _key: string;
        _type: "sucursalesSelector";
        title: string | null;
        description: string | null;
        showMap: boolean | null;
        showAllRegions: boolean | null;
        selectedRegions: Array<string> | null;
        variant: "cards" | "compact" | "default" | null;
      }
    | {
        _key: string;
        _type: "tabs";
        title: string | null;
        description: string | null;
        tabs: Array<{
          _key: string;
          label: string | null;
          content: Array<
            | {
                eyebrow?: string;
                title?: string;
                richText: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      _key: string;
                      _type: "button";
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      text: string | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      url?: {
                        type?: "external" | "file" | "internal";
                        internal?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blog";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blogIndex";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "buses";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "camiones";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "motoresPenta";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            };
                        external?: string;
                        file?: {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                          };
                          media?: unknown;
                          _type: "file";
                        };
                        openInNewTab?: boolean;
                      };
                      openInNewTab: boolean | null;
                      href: string | null;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                > | null;
                buttons: Array<{
                  text: string | null;
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  _key: string;
                  _type: "button";
                  href: string | "#" | null;
                  openInNewTab: boolean | false;
                }> | null;
                _type: "cta";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                cursos?: Array<{
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  _key: string;
                  [internalGroqTypeReferenceTo]?: "cursos";
                }>;
                displayMode?: "grid" | "list";
                showAllDates?: "no" | "yes";
                _type: "cursosBlock";
                _key: string;
              }
            | {
                variant:
                  | "accent1"
                  | "accent2"
                  | "alt"
                  | "brand"
                  | "default"
                  | "inset"
                  | null;
                primaryBadge: string | null;
                primaryTitle: string | null;
                primaryRichText: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "blockquote"
                    | "h1"
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<{
                    href?: string;
                    _type: "link";
                    _key: string;
                  }> | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
                primaryImage: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Primary Image";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
                primaryButtons: Array<{
                  text: string | null;
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  _key: string;
                  _type: "button";
                  openInNewTab: boolean | null;
                  href: string | null;
                }> | null;
                secondaryBadge: string | null;
                secondaryTitle: string | null;
                secondaryRichText: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "blockquote"
                    | "h1"
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<{
                    href?: string;
                    _type: "link";
                    _key: string;
                  }> | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
                secondaryImage: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Secondary Image";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
                secondaryButtons: Array<{
                  text: string | null;
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  _key: string;
                  _type: "button";
                  openInNewTab: boolean | null;
                  href: string | null;
                }> | null;
                _type: "doubleHero";
                _key: string;
              }
            | {
                eyebrow?: string;
                title?: string;
                subtitle?: string;
                link: {
                  title?: string;
                  description?: string;
                  url?: CustomUrl;
                  openInNewTab: boolean | null;
                  href: string | null;
                } | null;
                faqs: Array<{
                  title: string | null;
                  _id: string;
                  _type: "faq";
                  richText: Array<
                    | {
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?:
                          | "h2"
                          | "h3"
                          | "h4"
                          | "h5"
                          | "h6"
                          | "inline"
                          | "normal";
                        listItem?: "bullet" | "number";
                        markDefs: Array<
                          | {
                              customLink?: CustomUrl;
                              _type: "customLink";
                              _key: string;
                              openInNewTab: boolean | null;
                              href: string | "#" | null;
                            }
                          | {
                              customLink?: CustomUrl;
                              _type: "customLink";
                              _key: string;
                            }
                        > | null;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }
                    | {
                        _key: string;
                        _type: "button";
                        variant:
                          | "default"
                          | "link"
                          | "outline"
                          | "primary"
                          | "secondary"
                          | null;
                        text: string | null;
                        icon: "volvo-chevron-right" | "volvo-file-down" | null;
                        url?: {
                          type?: "external" | "file" | "internal";
                          internal?:
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "blog";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "blogIndex";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "buses";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "camiones";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "motoresPenta";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "page";
                              };
                          external?: string;
                          file?: {
                            asset?: {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                            };
                            media?: unknown;
                            _type: "file";
                          };
                          openInNewTab?: boolean;
                        };
                        openInNewTab: boolean | null;
                        href: string | null;
                      }
                    | {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        caption?: string;
                        _type: "image";
                        _key: string;
                      }
                  > | null;
                }> | null;
                _type: "faqAccordion";
                _key: string;
              }
            | {
                eyebrow?: string;
                title?: string;
                richText?: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }>;
                cards?: Array<{
                  icon?: IconPicker;
                  title?: string;
                  richText?: Array<{
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs?: Array<{
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                    }>;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }>;
                  _type: "featureCardIcon";
                  _key: string;
                }>;
                _type: "featureCardsIcon";
                _key: string;
              }
            | {
                title: string | null;
                description: string | null;
                form: {
                  _id: string;
                  title: string | null;
                  description: string | null;
                  fields: Array<
                    | {
                        label: string | null;
                        name: string | null;
                        type:
                          | "checkbox"
                          | "curso"
                          | "direccion"
                          | "email"
                          | "number"
                          | "radio"
                          | "rut"
                          | "select"
                          | "tel"
                          | "text"
                          | "textarea"
                          | null;
                        required: "no" | "yes" | null;
                        options: Array<string> | null;
                        placeholder: string | null;
                        courseReference: null;
                        selectedTrainingDate: null;
                      }
                    | {
                        label: string | null;
                        name: string | null;
                        type:
                          | "checkbox"
                          | "curso"
                          | "direccion"
                          | "email"
                          | "number"
                          | "radio"
                          | "rut"
                          | "select"
                          | "tel"
                          | "text"
                          | "textarea"
                          | null;
                        required: "no" | "yes" | null;
                        options: Array<string> | null;
                        placeholder: string | null;
                      }
                  > | null;
                  emailRecipients: string | null;
                  submitButtonText: string | null;
                  successMessage: string | null;
                  errorMessage: string | null;
                } | null;
                displayMode: "inline" | "modal" | null;
                triggerText: string | null;
                buttonPosition: "default" | "fixed" | null;
                variant: "centered" | "default" | "withBackground" | null;
                _type: "formBlock";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                columnCount?: 3 | 4 | 5 | 6;
                columnHeaders?: Array<string>;
                rows?: Array<{
                  cells?: Array<
                    | {
                        content?: string;
                        isLastColumn?: boolean;
                        _type: "cell";
                        _key: string;
                      }
                    | {
                        content?: Array<
                          | ({
                              _key: string;
                            } & Button)
                          | {
                              children?: Array<{
                                marks?: Array<string>;
                                text?: string;
                                _type: "span";
                                _key: string;
                              }>;
                              style?:
                                | "h2"
                                | "h3"
                                | "h4"
                                | "h5"
                                | "h6"
                                | "inline"
                                | "normal";
                              listItem?: "bullet" | "number";
                              markDefs?: Array<{
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }>;
                              level?: number;
                              _type: "block";
                              _key: string;
                            }
                          | {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                              };
                              media?: unknown;
                              hotspot?: SanityImageHotspot;
                              crop?: SanityImageCrop;
                              caption?: string;
                              _type: "image";
                              _key: string;
                            }
                        >;
                        isLastColumn?: boolean;
                        _type: "richCell";
                        _key: string;
                      }
                  >;
                  _type: "row";
                  _key: string;
                }>;
                variant?: "bordered" | "compact" | "default" | "striped";
                _type: "genericTable";
                _key: string;
              }
            | {
                variant:
                  | "accent1"
                  | "accent2"
                  | "alt"
                  | "brand"
                  | "default"
                  | null;
                badge?: string;
                title?: string;
                titleFont: "default" | "statement" | null;
                richText: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      _key: string;
                      _type: "button";
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      text: string | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      url?: {
                        type?: "external" | "file" | "internal";
                        internal?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blog";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blogIndex";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "buses";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "camiones";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "motoresPenta";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            };
                        external?: string;
                        file?: {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                          };
                          media?: unknown;
                          _type: "file";
                        };
                        openInNewTab?: boolean;
                      };
                      openInNewTab: boolean | null;
                      href: string | null;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                > | null;
                image: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Image-Broken";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
                imageAlignment: "default" | "fit" | null;
                buttons: Array<{
                  text: string | null;
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  _key: string;
                  _type: "button";
                  href: string | "#" | null;
                  openInNewTab: boolean | false;
                }> | null;
                _type: "hero";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                aspects?: Array<{
                  title?: string;
                  variant?: "icon" | "image" | "none";
                  image?: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    _type: "image";
                  };
                  content?: Array<
                    | ({
                        _key: string;
                      } & Button)
                    | {
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?:
                          | "h2"
                          | "h3"
                          | "h4"
                          | "h5"
                          | "h6"
                          | "inline"
                          | "normal";
                        listItem?: "bullet" | "number";
                        markDefs?: Array<{
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }>;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }
                  >;
                  _type: "aspect";
                  _key: string;
                }>;
                columns?: "2" | "3" | "4";
                _type: "highlightedAspects";
                _key: string;
              }
            | {
                title: string | null;
                description: string | null;
                images: Array<{
                  _key: string;
                  _type: "galleryImage";
                  image: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    _type: "image";
                    alt: string | "Gallery Image";
                    blurData: string | null;
                    dominantColor: string | null;
                  } | null;
                  alt?: string;
                  caption: string | null;
                }> | null;
                layout: "bento" | "carousel" | "grid" | "masonry" | null;
                columns: "2" | "3" | "4" | null;
                slidesPerRow: 1 | 2 | 3 | 4 | 5 | null;
                _type: "imageGallery";
                _key: string;
              }
            | {
                eyebrow?: string;
                title?: string;
                richText: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      _key: string;
                      _type: "button";
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      text: string | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      url?: {
                        type?: "external" | "file" | "internal";
                        internal?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blog";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blogIndex";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "buses";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "camiones";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "motoresPenta";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            };
                        external?: string;
                        file?: {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                          };
                          media?: unknown;
                          _type: "file";
                        };
                        openInNewTab?: boolean;
                      };
                      openInNewTab: boolean | null;
                      href: string | null;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                > | null;
                buttons: Array<{
                  text: string | null;
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  _key: string;
                  _type: "button";
                  href: string | "#" | null;
                  openInNewTab: boolean | false;
                }> | null;
                cards: Array<{
                  title?: string;
                  description?: string;
                  image: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    _type: "image";
                    alt: string | "Image-Broken";
                    blurData: string | null;
                    dominantColor: string | null;
                  } | null;
                  url?: CustomUrl;
                  _type: "imageLinkCard";
                  _key: string;
                  openInNewTab: boolean | null;
                  href: string | null;
                }> | null;
                _type: "imageLinkCards";
                _key: string;
              }
            | {
                badge?: string;
                title?: string;
                titleFont: "default" | "statement" | null;
                layout: "default" | "fullImage" | null;
                richText: Array<
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      _key: string;
                      _type: "button";
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      text: string | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      url?: {
                        type?: "external" | "file" | "internal";
                        internal?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blog";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "blogIndex";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "buses";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "camiones";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "motoresPenta";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            };
                        external?: string;
                        file?: {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                          };
                          media?: unknown;
                          _type: "file";
                        };
                        openInNewTab?: boolean;
                      };
                      openInNewTab: boolean | null;
                      href: string | null;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                > | null;
                backgroundType?: "image" | "video";
                backgroundImage: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Background Image";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
                backgroundVideo: string | null;
                image: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Image-Broken";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
                buttons: Array<{
                  text: string | null;
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  _key: string;
                  _type: "button";
                  href: string | "#" | null;
                  openInNewTab: boolean | false;
                }> | null;
                _type: "mainHero";
                _key: string;
              }
            | {
                title?: string;
                productType?: "buses" | "camiones" | "motoresPenta";
                taxonomyFilter?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "skosConcept";
                };
                _type: "productListing";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                specifications?: Array<
                  {
                    _key: string;
                  } & SpecificationItem
                >;
                variant?: "bordered" | "compact" | "default" | "striped";
                _type: "specificationsTable";
                _key: string;
              }
            | {
                title?: string;
                subTitle: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
                helperText: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
                _type: "subscribeNewsletter";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                showMap?: boolean;
                showAllRegions?: boolean;
                selectedRegions?: Array<string>;
                variant?: "cards" | "compact" | "default";
                _type: "sucursalesSelector";
                _key: string;
              }
            | {
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                _type: "textBlock";
                _key: string;
              }
            | {
                title?: string;
                videoType?: "mp4" | "youtube";
                mp4File?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                youtubeUrl?: string;
                posterImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                showControls?: "no" | "yes";
                autoplay?: "no" | "yes";
                loop?: "no" | "yes";
                allowFullscreen?: "no" | "yes";
                _type: "videoBlock";
                _key: string;
              }
            | {
                variant?: "accent1" | "accent2" | "alt" | "brand" | "default";
                badge?: string;
                title?: string;
                titleFont?: "default" | "statement";
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                videoType?: "mp4" | "youtube";
                mp4File?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                youtubeUrl?: string;
                posterImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                showControls?: "no" | "yes";
                autoplay?: "no" | "yes";
                loop?: "no" | "yes";
                buttons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                _type: "videoHero";
                _key: string;
              }
          > | null;
        }> | null;
      }
    | {
        _key: string;
        _type: "textBlock";
        richText: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              _key: string;
              _type: "button";
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              text: string | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              url?: {
                type?: "external" | "file" | "internal";
                internal?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blog";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blogIndex";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "buses";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "camiones";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "motoresPenta";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    };
                external?: string;
                file?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                openInNewTab?: boolean;
              };
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        > | null;
      }
    | {
        _key: string;
        _type: "videoBlock";
        title: string | null;
        videoType: "mp4" | "youtube" | null;
        mp4File: string | null;
        youtubeUrl: string | null;
        posterImage: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Video Poster";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        showControls: "no" | "yes" | null;
        autoplay: "no" | "yes" | null;
        loop: "no" | "yes" | null;
        allowFullscreen: "no" | "yes" | null;
      }
    | {
        _key: string;
        _type: "videoHero";
        variant: "accent1" | "accent2" | "alt" | "brand" | "default" | null;
        badge?: string;
        title?: string;
        titleFont: "default" | "statement" | null;
        richText: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              _key: string;
              _type: "button";
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              text: string | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              url?: {
                type?: "external" | "file" | "internal";
                internal?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blog";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "blogIndex";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "buses";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "camiones";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "motoresPenta";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    };
                external?: string;
                file?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                openInNewTab?: boolean;
              };
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        > | null;
        videoType: "mp4" | "youtube" | null;
        mp4File: string | null;
        youtubeUrl: string | null;
        posterImage: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          alt: string | "Video Hero Poster";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        showControls: "no" | "yes" | null;
        autoplay: "no" | "yes" | null;
        loop: "no" | "yes" | null;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
  > | null;
  seoTitle?: string;
  seoDescription?: string;
  seoImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  ogTitle?: string;
  ogDescription?: string;
  blogs: Array<{
    _type: "blog";
    _id: string;
    title: string | null;
    description: string | null;
    slug: string | null;
    richText: RichText | null;
    orderRank: string | null;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
      alt: string | "Image-Broken";
      blurData: string | null;
      dominantColor: string | null;
    } | null;
    publishedAt: string | null;
    authors: {
      _id: string;
      name: string | null;
      position: string | null;
      image: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        alt: string | "Image-Broken";
        blurData: string | null;
        dominantColor: string | null;
      } | null;
    } | null;
  }>;
} | null;
// Variable: queryBlogSlugPageData
// Query: *[_type == "blog" && slug.current == $slug][0]{    ...,    "slug": slug.current,      authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  },      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      pageBuilder[]{    ...,    _type,      _type == "cta" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },  },      _type == "mainHero" => {    ...,    titleFont,    layout,    "backgroundImage": backgroundImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    "backgroundVideo": backgroundVideo.asset->url,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "hero" => {    ...,    variant,    titleFont,    imageAlignment,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "doubleHero" => {    ...,    variant,    primaryBadge,    primaryTitle,    "primaryRichText": primaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "primaryImage": primaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    primaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    secondaryBadge,    secondaryTitle,    "secondaryRichText": secondaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "secondaryImage": secondaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    secondaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },      _type == "faqAccordion" => {    ...,      "faqs": array::compact(faqs[]->{    title,    _id,    _type,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  }),    link{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },      _type == "subscribeNewsletter" => {    ...,    "subTitle": subTitle[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "helperText": helperText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      _type == "imageLinkCards" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },    "cards": array::compact(cards[]{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      ),        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },    })  },      _type == "formBlock" => {    ...,    title,    description,    variant,    displayMode,    triggerText,    buttonPosition,    "form": form->{      _id,      title,      description,        fields[]{    label,    name,    type,    required,    options,    placeholder,    type == "curso" => {      courseReference->{        _id,        title,        "fechasCapacitacion": fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        }      },      selectedTrainingDate    }  },  emailRecipients,  submitButtonText,  successMessage,  errorMessage,      submitButtonText,      successMessage,      errorMessage    }  },      _type == "tabs" => {    ...,    title,    description,    tabs[]{      _key,      label,      content[]{        ...,        _type,        _key,          _type == "cta" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },  },          _type == "mainHero" => {    ...,    titleFont,    layout,    "backgroundImage": backgroundImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    "backgroundVideo": backgroundVideo.asset->url,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },          _type == "hero" => {    ...,    variant,    titleFont,    imageAlignment,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },          _type == "doubleHero" => {    ...,    variant,    primaryBadge,    primaryTitle,    "primaryRichText": primaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "primaryImage": primaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    primaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    secondaryBadge,    secondaryTitle,    "secondaryRichText": secondaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "secondaryImage": secondaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    secondaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },          _type == "faqAccordion" => {    ...,      "faqs": array::compact(faqs[]->{    title,    _id,    _type,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  }),    link{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },          _type == "subscribeNewsletter" => {    ...,    "subTitle": subTitle[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "helperText": helperText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },          _type == "imageLinkCards" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },    "cards": array::compact(cards[]{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      ),        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },    })  },          _type == "formBlock" => {    ...,    title,    description,    variant,    displayMode,    triggerText,    buttonPosition,    "form": form->{      _id,      title,      description,        fields[]{    label,    name,    type,    required,    options,    placeholder,    type == "curso" => {      courseReference->{        _id,        title,        "fechasCapacitacion": fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        }      },      selectedTrainingDate    }  },  emailRecipients,  submitButtonText,  successMessage,  errorMessage,      submitButtonText,      successMessage,      errorMessage    }  },          _type == "imageGallery" => {    ...,    title,    description,    layout,    columns,    slidesPerRow,    "images": images[]{      ...,      "image": image{        ...,        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background,      },      caption    }  },          _type == "featuredBlogs" => {    ...,    title,    subtitle,    displayMode,    blogCount,    buttonText,    "showViewAllButton": showViewAllButton == "yes",    "blogs": select(      displayMode == "curated" => blogs[]-> {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      },      displayMode == "latest" => *[        _type == "blog"         && (seoHideFromLists != true)      ] | order(publishedAt desc, _createdAt desc)[0...3] {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      }    )  },        _type == "tabs" => {          ...,          title,          description,          tabs[]{            _key,            label,            content[]{               ...,              _type,              _key            }          }        }      }    }  },      _type == "infoSection" => {    ...,    title,    headingLevel,    content[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      _type == "imageGallery" => {    ...,    title,    description,    layout,    columns,    slidesPerRow,    "images": images[]{      ...,      "image": image{        ...,        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background,      },      caption    }  },      _type == "specificationsTable" => {    ...,    title,    description,    variant,    "specifications": specifications[]{      _key,      label,      "content": content[]{        ...,          markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }      }    }  },      _type == "genericTable" => {    ...,    title,    description,    columnCount,    columnHeaders,    rows[]{      _key,      cells[]{        _key,        content,        isLastColumn,        _type == "richCell" => {          content[]{            ...,              markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }          }        }      }    },    variant  },      _type == "featuredBlogs" => {    ...,    title,    subtitle,    displayMode,    blogCount,    buttonText,    "showViewAllButton": showViewAllButton == "yes",    "blogs": select(      displayMode == "curated" => blogs[]-> {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      },      displayMode == "latest" => *[        _type == "blog"         && (seoHideFromLists != true)      ] | order(publishedAt desc, _createdAt desc)[0...3] {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      }    )  },      _type == "highlightedAspects" => {    title,    description,    columns,    aspects[]{      _key,      title,      variant,      icon,      image{        ...,        "alt": coalesce(asset->altText, asset->originalFilename, "Aspect Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background      },      content[]{        ...,        _type == "button" => {          ...,          text,          variant,          icon,            "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)        },        _type == "block" => {          ...,            markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }        }      }    }  },      _type == "videoBlock" => {    ...,    _key,    _type,    title,    videoType,    "mp4File": coalesce(      mp4File.asset->url,      mp4File.asset->sources[0].url,      null    ),    youtubeUrl,    showControls,    autoplay,    loop,    allowFullscreen,    "posterImage": posterImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Video Poster"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    }  },      _type == "videoHero" => {    ...,    variant,    titleFont,    videoType,    "mp4File": coalesce(      mp4File.asset->url,      mp4File.asset->sources[0].url,      null    ),    youtubeUrl,    showControls,    autoplay,    loop,    "posterImage": posterImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Video Hero Poster"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "textBlock" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "sucursalesSelector" => {    ...,    title,    description,    showMap,    showAllRegions,    selectedRegions,    variant  },      _type == "cursosBlock" => {    ...,    title,    description,    displayMode,    "showAllDates": showAllDates == "yes",    "cursos": cursos[]-> {      _id,      _type,      title,      description,      "slug": slug.current,        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      "fechasCapacitacion": select(        ^.showAllDates == "yes" => fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        } | order(fecha asc),        fechasCapacitacion[fecha > now()]{          nombre,          profesor,          fecha,          hora        } | order(fecha asc)      )    }  }  },      "categoryData": {    "label": category,    "slug": category,    "iri": "/camiones/" + category,    "parent": null  }  }
export type QueryBlogSlugPageDataResult = {
  _id: string;
  _type: "blog";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  orderRank?: string;
  title?: string;
  description?: string;
  slug: string | null;
  authors: {
    _id: string;
    name: string | null;
    position: string | null;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
      alt: string | "Image-Broken";
      blurData: string | null;
      dominantColor: string | null;
    } | null;
  } | null;
  publishedAt?: string;
  image: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    alt: string | "Image-Broken";
    blurData: string | null;
    dominantColor: string | null;
  } | null;
  richText: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<
          | {
              customLink?: CustomUrl;
              _type: "customLink";
              _key: string;
              openInNewTab: boolean | null;
              href: string | "#" | null;
            }
          | {
              customLink?: CustomUrl;
              _type: "customLink";
              _key: string;
            }
        > | null;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        _key: string;
        _type: "button";
        variant:
          | "default"
          | "link"
          | "outline"
          | "primary"
          | "secondary"
          | null;
        text: string | null;
        icon: "volvo-chevron-right" | "volvo-file-down" | null;
        url?: {
          type?: "external" | "file" | "internal";
          internal?:
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "blog";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "blogIndex";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "buses";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "camiones";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "motoresPenta";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "page";
              };
          external?: string;
          file?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
            };
            media?: unknown;
            _type: "file";
          };
          openInNewTab?: boolean;
        };
        openInNewTab: boolean | null;
        href: string | null;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        caption?: string;
        _type: "image";
        _key: string;
      }
  > | null;
  seoTitle?: string;
  seoDescription?: string;
  seoImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  seoNoIndex?: boolean;
  seoHideFromLists?: boolean;
  ogTitle?: string;
  ogDescription?: string;
  pageBuilder: null;
  categoryData: {
    label: null;
    slug: null;
    iri: null;
    parent: null;
  };
} | null;
// Variable: queryBlogPaths
// Query: *[_type == "blog" && defined(slug.current)].slug.current
export type QueryBlogPathsResult = Array<string | null>;
// Variable: queryHomePageOGData
// Query: *[_type == "homePage" && _id == $id][0]{      _id,  _type,  "title": select(    defined(ogTitle) => ogTitle,    defined(seoTitle) => seoTitle,    title  ),  "description": select(    defined(ogDescription) => ogDescription,    defined(seoDescription) => seoDescription,    description  ),  "image": image.asset->url + "?w=566&h=566&dpr=2&fit=max",  "dominantColor": image.asset->metadata.palette.dominant.background,  "seoImage": seoImage.asset->url + "?w=1200&h=630&dpr=2&fit=max",   "logo": *[_type == "settings"][0].logo.asset->url + "?w=80&h=40&dpr=3&fit=max&q=100",  "date": coalesce(date, _createdAt)  }
export type QueryHomePageOGDataResult = {
  _id: string;
  _type: "homePage";
  title: string | null;
  description: string | null;
  image: null;
  dominantColor: null;
  seoImage: string | null;
  logo: string | null;
  date: string;
} | null;
// Variable: querySlugPageOGData
// Query: *[_type == "page" && _id == $id][0]{      _id,  _type,  "title": select(    defined(ogTitle) => ogTitle,    defined(seoTitle) => seoTitle,    title  ),  "description": select(    defined(ogDescription) => ogDescription,    defined(seoDescription) => seoDescription,    description  ),  "image": image.asset->url + "?w=566&h=566&dpr=2&fit=max",  "dominantColor": image.asset->metadata.palette.dominant.background,  "seoImage": seoImage.asset->url + "?w=1200&h=630&dpr=2&fit=max",   "logo": *[_type == "settings"][0].logo.asset->url + "?w=80&h=40&dpr=3&fit=max&q=100",  "date": coalesce(date, _createdAt)  }
export type QuerySlugPageOGDataResult = {
  _id: string;
  _type: "page";
  title: string | null;
  description: string | null;
  image: string | null;
  dominantColor: string | null;
  seoImage: string | null;
  logo: string | null;
  date: string;
} | null;
// Variable: queryBlogPageOGData
// Query: *[_type == "blog" && _id == $id][0]{      _id,  _type,  "title": select(    defined(ogTitle) => ogTitle,    defined(seoTitle) => seoTitle,    title  ),  "description": select(    defined(ogDescription) => ogDescription,    defined(seoDescription) => seoDescription,    description  ),  "image": image.asset->url + "?w=566&h=566&dpr=2&fit=max",  "dominantColor": image.asset->metadata.palette.dominant.background,  "seoImage": seoImage.asset->url + "?w=1200&h=630&dpr=2&fit=max",   "logo": *[_type == "settings"][0].logo.asset->url + "?w=80&h=40&dpr=3&fit=max&q=100",  "date": coalesce(date, _createdAt)  }
export type QueryBlogPageOGDataResult = {
  _id: string;
  _type: "blog";
  title: string | null;
  description: string | null;
  image: string | null;
  dominantColor: string | null;
  seoImage: string | null;
  logo: string | null;
  date: string;
} | null;
// Variable: queryGenericPageOGData
// Query: *[ defined(slug.current) && _id == $id][0]{      _id,  _type,  "title": select(    defined(ogTitle) => ogTitle,    defined(seoTitle) => seoTitle,    title  ),  "description": select(    defined(ogDescription) => ogDescription,    defined(seoDescription) => seoDescription,    description  ),  "image": image.asset->url + "?w=566&h=566&dpr=2&fit=max",  "dominantColor": image.asset->metadata.palette.dominant.background,  "seoImage": seoImage.asset->url + "?w=1200&h=630&dpr=2&fit=max",   "logo": *[_type == "settings"][0].logo.asset->url + "?w=80&h=40&dpr=3&fit=max&q=100",  "date": coalesce(date, _createdAt)  }
export type QueryGenericPageOGDataResult =
  | {
      _id: string;
      _type: "blog";
      title: string | null;
      description: string | null;
      image: string | null;
      dominantColor: string | null;
      seoImage: string | null;
      logo: string | null;
      date: string;
    }
  | {
      _id: string;
      _type: "blogIndex";
      title: string | null;
      description: string | null;
      image: null;
      dominantColor: null;
      seoImage: string | null;
      logo: string | null;
      date: string;
    }
  | {
      _id: string;
      _type: "buses";
      title: string | null;
      description: string | null;
      image: string | null;
      dominantColor: string | null;
      seoImage: string | null;
      logo: string | null;
      date: string;
    }
  | {
      _id: string;
      _type: "camiones";
      title: string | null;
      description: string | null;
      image: string | null;
      dominantColor: string | null;
      seoImage: string | null;
      logo: string | null;
      date: string;
    }
  | {
      _id: string;
      _type: "cursos";
      title: string | null;
      description: RichText | null;
      image: string | null;
      dominantColor: string | null;
      seoImage: null;
      logo: string | null;
      date: string;
    }
  | {
      _id: string;
      _type: "formularios";
      title: string | null;
      description: string | null;
      image: null;
      dominantColor: null;
      seoImage: null;
      logo: string | null;
      date: string;
    }
  | {
      _id: string;
      _type: "homePage";
      title: string | null;
      description: string | null;
      image: null;
      dominantColor: null;
      seoImage: string | null;
      logo: string | null;
      date: string;
    }
  | {
      _id: string;
      _type: "motoresPenta";
      title: string | null;
      description: string | null;
      image: string | null;
      dominantColor: string | null;
      seoImage: string | null;
      logo: string | null;
      date: string;
    }
  | {
      _id: string;
      _type: "page";
      title: string | null;
      description: string | null;
      image: string | null;
      dominantColor: string | null;
      seoImage: string | null;
      logo: string | null;
      date: string;
    }
  | {
      _id: string;
      _type: "sucursales";
      title: string | null;
      description: null;
      image: null;
      dominantColor: null;
      seoImage: null;
      logo: string | null;
      date: string;
    }
  | null;
// Variable: queryFooterData
// Query: *[_type == "footer" && _id == "footer"][0]{  _id,  subtitle,  columns[]{    _key,    title,    links[]{      _key,      name,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      ),    }  },  "logo": *[_type == "settings"][0].logo.asset->url + "?w=80&h=40&dpr=3&fit=max",  "siteTitle": *[_type == "settings"][0].siteTitle,  "socialLinks": *[_type == "settings"][0].socialLinks,  "customerServicePhone": *[_type == "settings"][0].customerServicePhone,  "roadEmergencyPhone": *[_type == "settings"][0].roadEmergencyPhone,  "roadEmergencyPhone2": *[_type == "settings"][0].roadEmergencyPhone2,  "contactPageUrl": select(    *[_type == "settings"][0].contactPageUrl.type == "internal" => *[_type == "settings"][0].contactPageUrl.internal->slug.current,    *[_type == "settings"][0].contactPageUrl.type == "external" => *[_type == "settings"][0].contactPageUrl.external,    null  )}
export type QueryFooterDataResult = {
  _id: string;
  subtitle: string | null;
  columns: Array<{
    _key: string;
    title: string | null;
    links: Array<{
      _key: string;
      name: string | null;
      openInNewTab: boolean | null;
      href: string | null;
    }> | null;
  }> | null;
  logo: string | null;
  siteTitle: string | null;
  socialLinks: {
    linkedin?: string;
    facebook?: string;
    twitter?: string;
    instagram?: string;
    youtube?: string;
  } | null;
  customerServicePhone: string | null;
  roadEmergencyPhone: string | null;
  roadEmergencyPhone2: string | null;
  contactPageUrl: string | null;
} | null;
// Variable: NAVBAR_QUERY
// Query: *[  _type == "navbar"   && _id == "navbar"][0]{  _id,  columns[]{    _key,    _type == "navbarColumn" => {      "type": "column",      title,      links[]{        _key,        _type == "navbarColumnLink" => {          "type": "link",          name,          icon,          description,          "openInNewTab": url.openInNewTab,          "href": select(            url.type == "internal" => url.internal->slug.current,            url.type == "external" => url.external,            url.href          )        },        _type == "navbarLinkGroup" => {          "type": "group",          title,          links[]{            _key,            name,            icon,            description,            "openInNewTab": url.openInNewTab,            "href": select(              url.type == "internal" => url.internal->slug.current,              url.type == "external" => url.external,              url.href            )          }        }      }    },    _type == "navbarLink" => {      "type": "link",      name,      description,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },  buttons[]{    text,    variant,    icon,    _key,    _type,    "openInNewTab": url.openInNewTab,    "href": select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.href    ),  },  "logo": *[_type == "settings"][0].logo.asset->url + "?w=80&h=40&dpr=3&fit=max",  "siteTitle": *[_type == "settings"][0].siteTitle,  "customerServicePhone": *[_type == "settings"][0].customerServicePhone,  "roadEmergencyPhone": *[_type == "settings"][0].roadEmergencyPhone,  "roadEmergencyPhone2": *[_type == "settings"][0].roadEmergencyPhone2,  "contactPageUrl": select(    *[_type == "settings"][0].contactPageUrl.type == "internal" => *[_type == "settings"][0].contactPageUrl.internal->slug.current,    *[_type == "settings"][0].contactPageUrl.type == "external" => *[_type == "settings"][0].contactPageUrl.external,    null  )}
export type NAVBAR_QUERYResult = {
  _id: string;
  columns: Array<
    | {
        _key: string;
        type: "link";
        name: string | null;
        description: null;
        openInNewTab: boolean | null;
        href: string | null;
      }
    | {
        _key: string;
        type: "column";
        title: string | null;
        links: Array<
          | {
              _key: string;
              type: "link";
              name: string | null;
              icon: IconPicker | null;
              description: string | null;
              openInNewTab: boolean | null;
              href: string | null;
            }
          | {
              _key: string;
              type: "group";
              title: string | null;
              links: Array<{
                _key: string;
                name: string | null;
                icon: IconPicker | null;
                description: string | null;
                openInNewTab: boolean | null;
                href: string | null;
              }> | null;
            }
        > | null;
      }
  > | null;
  buttons: Array<{
    text: string | null;
    variant: "default" | "link" | "outline" | "primary" | "secondary" | null;
    icon: "volvo-chevron-right" | "volvo-file-down" | null;
    _key: string;
    _type: "button";
    openInNewTab: boolean | null;
    href: string | null;
  }> | null;
  logo: string | null;
  siteTitle: string | null;
  customerServicePhone: string | null;
  roadEmergencyPhone: string | null;
  roadEmergencyPhone2: string | null;
  contactPageUrl: string | null;
} | null;
// Variable: querySitemapData
// Query: {  "slugPages": *[_type == "page" && defined(slug.current)]{    "slug": slug.current,    "lastModified": _updatedAt  },  "blogPages": *[_type == "blog" && defined(slug.current)]{    "slug": slug.current,    "lastModified": _updatedAt  },  "sucursalesPages": *[_type == "sucursales" && defined(slug.current)]{    "slug": slug.current,    "lastModified": _updatedAt  }}
export type QuerySitemapDataResult = {
  slugPages: Array<{
    slug: string | null;
    lastModified: string;
  }>;
  blogPages: Array<{
    slug: string | null;
    lastModified: string;
  }>;
  sucursalesPages: Array<{
    slug: string | null;
    lastModified: string;
  }>;
};
// Variable: queryGlobalSeoSettings
// Query: *[_type == "settings"][0]{    _id,    _type,    siteTitle,    siteDescription,    socialLinks{      linkedin,      facebook,      twitter,      instagram,      youtube    },    customerServicePhone,    roadEmergencyPhone,    roadEmergencyPhone2,    "contactPageUrl": select(      contactPageUrl.type == "internal" => contactPageUrl.internal->slug.current,      contactPageUrl.type == "external" => contactPageUrl.external,      null    ),      cotizadorFormTitle,  cotizadorFormDescription,  "cotizadorForm": coalesce(cotizadorForm->{    _id,    _type,    title,    description,    "slug": slug.current,      fields[]{    label,    name,    type,    required,    options,    placeholder,    type == "curso" => {      courseReference->{        _id,        title,        "fechasCapacitacion": fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        }      },      selectedTrainingDate    }  },  emailRecipients,  submitButtonText,  successMessage,  errorMessage  }, null)  }
export type QueryGlobalSeoSettingsResult = {
  _id: string;
  _type: "settings";
  siteTitle: string | null;
  siteDescription: string | null;
  socialLinks: {
    linkedin: string | null;
    facebook: string | null;
    twitter: string | null;
    instagram: string | null;
    youtube: string | null;
  } | null;
  customerServicePhone: string | null;
  roadEmergencyPhone: string | null;
  roadEmergencyPhone2: string | null;
  contactPageUrl: string | null;
  cotizadorFormTitle: string | null;
  cotizadorFormDescription: string | null;
  cotizadorForm: {
    _id: string;
    _type: "formularios";
    title: string | null;
    description: string | null;
    slug: string | null;
    fields: Array<
      | {
          label: string | null;
          name: string | null;
          type:
            | "checkbox"
            | "curso"
            | "direccion"
            | "email"
            | "number"
            | "radio"
            | "rut"
            | "select"
            | "tel"
            | "text"
            | "textarea"
            | null;
          required: "no" | "yes" | null;
          options: Array<string> | null;
          placeholder: string | null;
          courseReference: null;
          selectedTrainingDate: null;
        }
      | {
          label: string | null;
          name: string | null;
          type:
            | "checkbox"
            | "curso"
            | "direccion"
            | "email"
            | "number"
            | "radio"
            | "rut"
            | "select"
            | "tel"
            | "text"
            | "textarea"
            | null;
          required: "no" | "yes" | null;
          options: Array<string> | null;
          placeholder: string | null;
        }
    > | null;
    emailRecipients: string | null;
    submitButtonText: string | null;
    successMessage: string | null;
    errorMessage: string | null;
  } | null;
} | null;
// Variable: queryAllForms
// Query: *[_type == "formularios"]{  _id,  title,  "slug": slug.current,  description}
export type QueryAllFormsResult = Array<{
  _id: string;
  title: string | null;
  slug: string | null;
  description: string | null;
}>;
// Variable: queryFormBySlug
// Query: *[  _type == "formularios"   && slug.current == $slug][0]{  _id,  title,  description,    fields[]{    label,    name,    type,    required,    options,    placeholder,    type == "curso" => {      courseReference->{        _id,        title,        "fechasCapacitacion": fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        }      },      selectedTrainingDate    }  },  emailRecipients,  submitButtonText,  successMessage,  errorMessage,  submitButtonText,  successMessage,  errorMessage}
export type QueryFormBySlugResult = {
  _id: string;
  title: string | null;
  description: string | null;
  fields: Array<
    | {
        label: string | null;
        name: string | null;
        type:
          | "checkbox"
          | "curso"
          | "direccion"
          | "email"
          | "number"
          | "radio"
          | "rut"
          | "select"
          | "tel"
          | "text"
          | "textarea"
          | null;
        required: "no" | "yes" | null;
        options: Array<string> | null;
        placeholder: string | null;
        courseReference: null;
        selectedTrainingDate: null;
      }
    | {
        label: string | null;
        name: string | null;
        type:
          | "checkbox"
          | "curso"
          | "direccion"
          | "email"
          | "number"
          | "radio"
          | "rut"
          | "select"
          | "tel"
          | "text"
          | "textarea"
          | null;
        required: "no" | "yes" | null;
        options: Array<string> | null;
        placeholder: string | null;
      }
  > | null;
  emailRecipients: string | null;
  submitButtonText: string | null;
  successMessage: string | null;
  errorMessage: string | null;
} | null;
// Variable: queryCamionesData
// Query: *[_type == "camiones"]{  _id,  _type,  title,  subtitle,  description,  "slug": slug.current,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },    richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },  "taxonomy": taxonomias->{    prefLabel,    conceptId,    "slug": lower(prefLabel)  }}
export type QueryCamionesDataResult = Array<{
  _id: string;
  _type: "camiones";
  title: string | null;
  subtitle: string | null;
  description: string | null;
  slug: string | null;
  image: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    alt: string | "Image-Broken";
    blurData: string | null;
    dominantColor: string | null;
  } | null;
  richText: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<
          | {
              customLink?: CustomUrl;
              _type: "customLink";
              _key: string;
              openInNewTab: boolean | null;
              href: string | "#" | null;
            }
          | {
              customLink?: CustomUrl;
              _type: "customLink";
              _key: string;
            }
        > | null;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        _key: string;
        _type: "button";
        variant:
          | "default"
          | "link"
          | "outline"
          | "primary"
          | "secondary"
          | null;
        text: string | null;
        icon: "volvo-chevron-right" | "volvo-file-down" | null;
        url?: {
          type?: "external" | "file" | "internal";
          internal?:
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "blog";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "blogIndex";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "buses";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "camiones";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "motoresPenta";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "page";
              };
          external?: string;
          file?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
            };
            media?: unknown;
            _type: "file";
          };
          openInNewTab?: boolean;
        };
        openInNewTab: boolean | null;
        href: string | null;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        caption?: string;
        _type: "image";
        _key: string;
      }
  > | null;
  taxonomy: {
    prefLabel: string | null;
    conceptId: string | null;
    slug: string | null;
  } | null;
}>;
// Variable: queryCamionOrPageBySlug
// Query: *[  (_type == "camiones" || _type == "page")  && slug.current == $slug ][0]{  _id,  _type,  title,  subtitle,  description,  "slug": slug.current,  _type == "camiones" => {       image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },     taxonomias->{      "label": prefLabel,      "slug": prefLabel,      "iri": "/camiones/" + lower(prefLabel)    }  },    pageBuilder[]{    ...,    _type,      _type == "cta" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },  },      _type == "mainHero" => {    ...,    titleFont,    layout,    "backgroundImage": backgroundImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    "backgroundVideo": backgroundVideo.asset->url,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "hero" => {    ...,    variant,    titleFont,    imageAlignment,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "doubleHero" => {    ...,    variant,    primaryBadge,    primaryTitle,    "primaryRichText": primaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "primaryImage": primaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    primaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    secondaryBadge,    secondaryTitle,    "secondaryRichText": secondaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "secondaryImage": secondaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    secondaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },      _type == "faqAccordion" => {    ...,      "faqs": array::compact(faqs[]->{    title,    _id,    _type,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  }),    link{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },      _type == "subscribeNewsletter" => {    ...,    "subTitle": subTitle[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "helperText": helperText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      _type == "imageLinkCards" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },    "cards": array::compact(cards[]{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      ),        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },    })  },      _type == "formBlock" => {    ...,    title,    description,    variant,    displayMode,    triggerText,    buttonPosition,    "form": form->{      _id,      title,      description,        fields[]{    label,    name,    type,    required,    options,    placeholder,    type == "curso" => {      courseReference->{        _id,        title,        "fechasCapacitacion": fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        }      },      selectedTrainingDate    }  },  emailRecipients,  submitButtonText,  successMessage,  errorMessage,      submitButtonText,      successMessage,      errorMessage    }  },      _type == "tabs" => {    ...,    title,    description,    tabs[]{      _key,      label,      content[]{        ...,        _type,        _key,          _type == "cta" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },  },          _type == "mainHero" => {    ...,    titleFont,    layout,    "backgroundImage": backgroundImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    "backgroundVideo": backgroundVideo.asset->url,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },          _type == "hero" => {    ...,    variant,    titleFont,    imageAlignment,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },          _type == "doubleHero" => {    ...,    variant,    primaryBadge,    primaryTitle,    "primaryRichText": primaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "primaryImage": primaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    primaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    secondaryBadge,    secondaryTitle,    "secondaryRichText": secondaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "secondaryImage": secondaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    secondaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },          _type == "faqAccordion" => {    ...,      "faqs": array::compact(faqs[]->{    title,    _id,    _type,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  }),    link{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },          _type == "subscribeNewsletter" => {    ...,    "subTitle": subTitle[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "helperText": helperText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },          _type == "imageLinkCards" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },    "cards": array::compact(cards[]{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      ),        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },    })  },          _type == "formBlock" => {    ...,    title,    description,    variant,    displayMode,    triggerText,    buttonPosition,    "form": form->{      _id,      title,      description,        fields[]{    label,    name,    type,    required,    options,    placeholder,    type == "curso" => {      courseReference->{        _id,        title,        "fechasCapacitacion": fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        }      },      selectedTrainingDate    }  },  emailRecipients,  submitButtonText,  successMessage,  errorMessage,      submitButtonText,      successMessage,      errorMessage    }  },          _type == "imageGallery" => {    ...,    title,    description,    layout,    columns,    slidesPerRow,    "images": images[]{      ...,      "image": image{        ...,        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background,      },      caption    }  },          _type == "featuredBlogs" => {    ...,    title,    subtitle,    displayMode,    blogCount,    buttonText,    "showViewAllButton": showViewAllButton == "yes",    "blogs": select(      displayMode == "curated" => blogs[]-> {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      },      displayMode == "latest" => *[        _type == "blog"         && (seoHideFromLists != true)      ] | order(publishedAt desc, _createdAt desc)[0...3] {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      }    )  },        _type == "tabs" => {          ...,          title,          description,          tabs[]{            _key,            label,            content[]{               ...,              _type,              _key            }          }        }      }    }  },      _type == "infoSection" => {    ...,    title,    headingLevel,    content[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      _type == "imageGallery" => {    ...,    title,    description,    layout,    columns,    slidesPerRow,    "images": images[]{      ...,      "image": image{        ...,        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background,      },      caption    }  },      _type == "specificationsTable" => {    ...,    title,    description,    variant,    "specifications": specifications[]{      _key,      label,      "content": content[]{        ...,          markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }      }    }  },      _type == "genericTable" => {    ...,    title,    description,    columnCount,    columnHeaders,    rows[]{      _key,      cells[]{        _key,        content,        isLastColumn,        _type == "richCell" => {          content[]{            ...,              markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }          }        }      }    },    variant  },      _type == "featuredBlogs" => {    ...,    title,    subtitle,    displayMode,    blogCount,    buttonText,    "showViewAllButton": showViewAllButton == "yes",    "blogs": select(      displayMode == "curated" => blogs[]-> {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      },      displayMode == "latest" => *[        _type == "blog"         && (seoHideFromLists != true)      ] | order(publishedAt desc, _createdAt desc)[0...3] {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      }    )  },      _type == "highlightedAspects" => {    title,    description,    columns,    aspects[]{      _key,      title,      variant,      icon,      image{        ...,        "alt": coalesce(asset->altText, asset->originalFilename, "Aspect Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background      },      content[]{        ...,        _type == "button" => {          ...,          text,          variant,          icon,            "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)        },        _type == "block" => {          ...,            markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }        }      }    }  },      _type == "videoBlock" => {    ...,    _key,    _type,    title,    videoType,    "mp4File": coalesce(      mp4File.asset->url,      mp4File.asset->sources[0].url,      null    ),    youtubeUrl,    showControls,    autoplay,    loop,    allowFullscreen,    "posterImage": posterImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Video Poster"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    }  },      _type == "videoHero" => {    ...,    variant,    titleFont,    videoType,    "mp4File": coalesce(      mp4File.asset->url,      mp4File.asset->sources[0].url,      null    ),    youtubeUrl,    showControls,    autoplay,    loop,    "posterImage": posterImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Video Hero Poster"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "textBlock" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "sucursalesSelector" => {    ...,    title,    description,    showMap,    showAllRegions,    selectedRegions,    variant  },      _type == "cursosBlock" => {    ...,    title,    description,    displayMode,    "showAllDates": showAllDates == "yes",    "cursos": cursos[]-> {      _id,      _type,      title,      description,      "slug": slug.current,        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      "fechasCapacitacion": select(        ^.showAllDates == "yes" => fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        } | order(fecha asc),        fechasCapacitacion[fecha > now()]{          nombre,          profesor,          fecha,          hora        } | order(fecha asc)      )    }  }  } }
export type QueryCamionOrPageBySlugResult =
  | {
      _id: string;
      _type: "camiones";
      title: string | null;
      subtitle: string | null;
      description: string | null;
      slug: string | null;
      image: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        alt: string | "Image-Broken";
        blurData: string | null;
        dominantColor: string | null;
      } | null;
      richText: Array<
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
            listItem?: "bullet" | "number";
            markDefs: Array<
              | {
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                  openInNewTab: boolean | null;
                  href: string | "#" | null;
                }
              | {
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }
            > | null;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            _key: string;
            _type: "button";
            variant:
              | "default"
              | "link"
              | "outline"
              | "primary"
              | "secondary"
              | null;
            text: string | null;
            icon: "volvo-chevron-right" | "volvo-file-down" | null;
            url?: {
              type?: "external" | "file" | "internal";
              internal?:
                | {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "blog";
                  }
                | {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "blogIndex";
                  }
                | {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "buses";
                  }
                | {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "camiones";
                  }
                | {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "motoresPenta";
                  }
                | {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "page";
                  };
              external?: string;
              file?: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                };
                media?: unknown;
                _type: "file";
              };
              openInNewTab?: boolean;
            };
            openInNewTab: boolean | null;
            href: string | null;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            caption?: string;
            _type: "image";
            _key: string;
          }
      > | null;
      taxonomias: {
        label: string | null;
        slug: string | null;
        iri: string | null;
      } | null;
      pageBuilder: Array<
        | {
            _key: string;
            _type: "cta";
            eyebrow?: string;
            title?: string;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
        | {
            _key: string;
            _type: "cursosBlock";
            title: string | null;
            description: string | null;
            cursos: Array<{
              _id: string;
              _type: "cursos";
              title: string | null;
              description: RichText | null;
              slug: string | null;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                alt: string | "Image-Broken";
                _type: "image";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              fechasCapacitacion: Array<{
                nombre: string | null;
                profesor: "Abraham Medina" | "Patricio Barahona" | null;
                fecha: string | null;
                hora: string | null;
              }> | null;
            }> | null;
            displayMode: "grid" | "list" | null;
            showAllDates: false | true;
          }
        | {
            _key: string;
            _type: "doubleHero";
            variant:
              | "accent1"
              | "accent2"
              | "alt"
              | "brand"
              | "default"
              | "inset"
              | null;
            primaryBadge: string | null;
            primaryTitle: string | null;
            primaryRichText: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }> | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            primaryImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Primary Image";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            primaryButtons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              openInNewTab: boolean | null;
              href: string | null;
            }> | null;
            secondaryBadge: string | null;
            secondaryTitle: string | null;
            secondaryRichText: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }> | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            secondaryImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Secondary Image";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            secondaryButtons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              openInNewTab: boolean | null;
              href: string | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "faqAccordion";
            eyebrow?: string;
            title?: string;
            subtitle?: string;
            link: {
              title?: string;
              description?: string;
              url?: CustomUrl;
              openInNewTab: boolean | null;
              href: string | null;
            } | null;
            faqs: Array<{
              title: string | null;
              _id: string;
              _type: "faq";
              richText: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                          openInNewTab: boolean | null;
                          href: string | "#" | null;
                        }
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    _key: string;
                    _type: "button";
                    variant:
                      | "default"
                      | "link"
                      | "outline"
                      | "primary"
                      | "secondary"
                      | null;
                    text: string | null;
                    icon: "volvo-chevron-right" | "volvo-file-down" | null;
                    url?: {
                      type?: "external" | "file" | "internal";
                      internal?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blog";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blogIndex";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "buses";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "camiones";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "motoresPenta";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          };
                      external?: string;
                      file?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                        };
                        media?: unknown;
                        _type: "file";
                      };
                      openInNewTab?: boolean;
                    };
                    openInNewTab: boolean | null;
                    href: string | null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    caption?: string;
                    _type: "image";
                    _key: string;
                  }
              > | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "featureCardsIcon";
            eyebrow?: string;
            title?: string;
            richText?: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }>;
            cards?: Array<{
              icon?: IconPicker;
              title?: string;
              richText?: Array<{
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
                listItem?: "bullet" | "number";
                markDefs?: Array<{
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }>;
              _type: "featureCardIcon";
              _key: string;
            }>;
          }
        | {
            _key: string;
            _type: "featuredBlogs";
            title: string | null;
            subtitle: string | null;
            displayMode: "curated" | "latest" | null;
            blogCount: "1" | "2" | "3" | null;
            blogs: Array<{
              _type: "blog";
              _id: string;
              title: string | null;
              description: string | null;
              slug: string | null;
              richText: RichText | null;
              orderRank: string | null;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Image-Broken";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              publishedAt: string | null;
              authors: {
                _id: string;
                name: string | null;
                position: string | null;
                image: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Image-Broken";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
              } | null;
            }> | null;
            showViewAllButton: false | true;
            buttonText: string | null;
          }
        | {
            _key: string;
            _type: "formBlock";
            title: string | null;
            description: string | null;
            form: {
              _id: string;
              title: string | null;
              description: string | null;
              fields: Array<
                | {
                    label: string | null;
                    name: string | null;
                    type:
                      | "checkbox"
                      | "curso"
                      | "direccion"
                      | "email"
                      | "number"
                      | "radio"
                      | "rut"
                      | "select"
                      | "tel"
                      | "text"
                      | "textarea"
                      | null;
                    required: "no" | "yes" | null;
                    options: Array<string> | null;
                    placeholder: string | null;
                    courseReference: null;
                    selectedTrainingDate: null;
                  }
                | {
                    label: string | null;
                    name: string | null;
                    type:
                      | "checkbox"
                      | "curso"
                      | "direccion"
                      | "email"
                      | "number"
                      | "radio"
                      | "rut"
                      | "select"
                      | "tel"
                      | "text"
                      | "textarea"
                      | null;
                    required: "no" | "yes" | null;
                    options: Array<string> | null;
                    placeholder: string | null;
                  }
              > | null;
              emailRecipients: string | null;
              submitButtonText: string | null;
              successMessage: string | null;
              errorMessage: string | null;
            } | null;
            displayMode: "inline" | "modal" | null;
            triggerText: string | null;
            buttonPosition: "default" | "fixed" | null;
            variant: "centered" | "default" | "withBackground" | null;
          }
        | {
            _key: string;
            _type: "genericTable";
            title: string | null;
            description: string | null;
            columnCount: 3 | 4 | 5 | 6 | null;
            columnHeaders: Array<string> | null;
            rows: Array<{
              _key: string;
              cells: Array<
                | {
                    _key: string;
                    content: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant?:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary";
                          text?: string;
                          icon?: "volvo-chevron-right" | "volvo-file-down";
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          markDefs: null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                          markDefs: null;
                        }
                    > | null;
                    isLastColumn: boolean | null;
                  }
                | {
                    _key: string;
                    content: string | null;
                    isLastColumn: boolean | null;
                  }
              > | null;
            }> | null;
            variant: "bordered" | "compact" | "default" | "striped" | null;
          }
        | {
            _key: string;
            _type: "hero";
            variant: "accent1" | "accent2" | "alt" | "brand" | "default" | null;
            badge?: string;
            title?: string;
            titleFont: "default" | "statement" | null;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            image: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Image-Broken";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            imageAlignment: "default" | "fit" | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
        | {
            _key: string;
            _type: "highlightedAspects";
            title: string | null;
            description: string | null;
            aspects: Array<{
              _key: string;
              title: string | null;
              variant: "icon" | "image" | "none" | null;
              icon: null;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Aspect Image";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              content: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                          openInNewTab: boolean | null;
                          href: string | "#" | null;
                        }
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    _key: string;
                    _type: "button";
                    variant:
                      | "default"
                      | "link"
                      | "outline"
                      | "primary"
                      | "secondary"
                      | null;
                    text: string | null;
                    icon: "volvo-chevron-right" | "volvo-file-down" | null;
                    url?: {
                      type?: "external" | "file" | "internal";
                      internal?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blog";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blogIndex";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "buses";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "camiones";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "motoresPenta";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          };
                      external?: string;
                      file?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                        };
                        media?: unknown;
                        _type: "file";
                      };
                      openInNewTab?: boolean;
                    };
                    href: string | "#" | null;
                    openInNewTab: boolean | false;
                  }
              > | null;
            }> | null;
            columns: "2" | "3" | "4" | null;
          }
        | {
            _key: string;
            _type: "imageGallery";
            title: string | null;
            description: string | null;
            images: Array<{
              _key: string;
              _type: "galleryImage";
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Gallery Image";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              alt?: string;
              caption: string | null;
            }> | null;
            layout: "bento" | "carousel" | "grid" | "masonry" | null;
            columns: "2" | "3" | "4" | null;
            slidesPerRow: 1 | 2 | 3 | 4 | 5 | null;
          }
        | {
            _key: string;
            _type: "imageLinkCards";
            eyebrow?: string;
            title?: string;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
            cards: Array<{
              title?: string;
              description?: string;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Image-Broken";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              url?: CustomUrl;
              _type: "imageLinkCard";
              _key: string;
              openInNewTab: boolean | null;
              href: string | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "infoSection";
            title: string | null;
            headingLevel: "h1" | "h2" | "h3" | "h4" | null;
            content: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }> | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          }
        | {
            _key: string;
            _type: "mainHero";
            badge?: string;
            title?: string;
            titleFont: "default" | "statement" | null;
            layout: "default" | "fullImage" | null;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            backgroundType?: "image" | "video";
            backgroundImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Background Image";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            backgroundVideo: string | null;
            image: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Image-Broken";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
        | {
            _key: string;
            _type: "productListing";
            title?: string;
            productType?: "buses" | "camiones" | "motoresPenta";
            taxonomyFilter?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "skosConcept";
            };
          }
        | {
            _key: string;
            _type: "specificationsTable";
            title: string | null;
            description: string | null;
            specifications: Array<{
              _key: string;
              label: string | null;
              content: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                          openInNewTab: boolean | null;
                          href: string | "#" | null;
                        }
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    _key: string;
                    _type: "button";
                    variant?:
                      | "default"
                      | "link"
                      | "outline"
                      | "primary"
                      | "secondary";
                    text?: string;
                    icon?: "volvo-chevron-right" | "volvo-file-down";
                    url?: {
                      type?: "external" | "file" | "internal";
                      internal?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blog";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blogIndex";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "buses";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "camiones";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "motoresPenta";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          };
                      external?: string;
                      file?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                        };
                        media?: unknown;
                        _type: "file";
                      };
                      openInNewTab?: boolean;
                    };
                    markDefs: null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    caption?: string;
                    _type: "image";
                    _key: string;
                    markDefs: null;
                  }
              > | null;
            }> | null;
            variant: "bordered" | "compact" | "default" | "striped" | null;
          }
        | {
            _key: string;
            _type: "subscribeNewsletter";
            title?: string;
            subTitle: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            helperText: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          }
        | {
            _key: string;
            _type: "sucursalesSelector";
            title: string | null;
            description: string | null;
            showMap: boolean | null;
            showAllRegions: boolean | null;
            selectedRegions: Array<string> | null;
            variant: "cards" | "compact" | "default" | null;
          }
        | {
            _key: string;
            _type: "tabs";
            title: string | null;
            description: string | null;
            tabs: Array<{
              _key: string;
              label: string | null;
              content: Array<
                | {
                    eyebrow?: string;
                    title?: string;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    _type: "cta";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    cursos?: Array<{
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      _key: string;
                      [internalGroqTypeReferenceTo]?: "cursos";
                    }>;
                    displayMode?: "grid" | "list";
                    showAllDates?: "no" | "yes";
                    _type: "cursosBlock";
                    _key: string;
                  }
                | {
                    variant:
                      | "accent1"
                      | "accent2"
                      | "alt"
                      | "brand"
                      | "default"
                      | "inset"
                      | null;
                    primaryBadge: string | null;
                    primaryTitle: string | null;
                    primaryRichText: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "blockquote"
                        | "h1"
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<{
                        href?: string;
                        _type: "link";
                        _key: string;
                      }> | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    primaryImage: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Primary Image";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    primaryButtons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      openInNewTab: boolean | null;
                      href: string | null;
                    }> | null;
                    secondaryBadge: string | null;
                    secondaryTitle: string | null;
                    secondaryRichText: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "blockquote"
                        | "h1"
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<{
                        href?: string;
                        _type: "link";
                        _key: string;
                      }> | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    secondaryImage: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Secondary Image";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    secondaryButtons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      openInNewTab: boolean | null;
                      href: string | null;
                    }> | null;
                    _type: "doubleHero";
                    _key: string;
                  }
                | {
                    eyebrow?: string;
                    title?: string;
                    subtitle?: string;
                    link: {
                      title?: string;
                      description?: string;
                      url?: CustomUrl;
                      openInNewTab: boolean | null;
                      href: string | null;
                    } | null;
                    faqs: Array<{
                      title: string | null;
                      _id: string;
                      _type: "faq";
                      richText: Array<
                        | {
                            children?: Array<{
                              marks?: Array<string>;
                              text?: string;
                              _type: "span";
                              _key: string;
                            }>;
                            style?:
                              | "h2"
                              | "h3"
                              | "h4"
                              | "h5"
                              | "h6"
                              | "inline"
                              | "normal";
                            listItem?: "bullet" | "number";
                            markDefs: Array<
                              | {
                                  customLink?: CustomUrl;
                                  _type: "customLink";
                                  _key: string;
                                  openInNewTab: boolean | null;
                                  href: string | "#" | null;
                                }
                              | {
                                  customLink?: CustomUrl;
                                  _type: "customLink";
                                  _key: string;
                                }
                            > | null;
                            level?: number;
                            _type: "block";
                            _key: string;
                          }
                        | {
                            _key: string;
                            _type: "button";
                            variant:
                              | "default"
                              | "link"
                              | "outline"
                              | "primary"
                              | "secondary"
                              | null;
                            text: string | null;
                            icon:
                              | "volvo-chevron-right"
                              | "volvo-file-down"
                              | null;
                            url?: {
                              type?: "external" | "file" | "internal";
                              internal?:
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "blog";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "blogIndex";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "buses";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "camiones";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "motoresPenta";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "page";
                                  };
                              external?: string;
                              file?: {
                                asset?: {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                                };
                                media?: unknown;
                                _type: "file";
                              };
                              openInNewTab?: boolean;
                            };
                            openInNewTab: boolean | null;
                            href: string | null;
                          }
                        | {
                            asset?: {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                            };
                            media?: unknown;
                            hotspot?: SanityImageHotspot;
                            crop?: SanityImageCrop;
                            caption?: string;
                            _type: "image";
                            _key: string;
                          }
                      > | null;
                    }> | null;
                    _type: "faqAccordion";
                    _key: string;
                  }
                | {
                    eyebrow?: string;
                    title?: string;
                    richText?: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }>;
                    cards?: Array<{
                      icon?: IconPicker;
                      title?: string;
                      richText?: Array<{
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?:
                          | "h2"
                          | "h3"
                          | "h4"
                          | "h5"
                          | "h6"
                          | "inline"
                          | "normal";
                        listItem?: "bullet" | "number";
                        markDefs?: Array<{
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }>;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }>;
                      _type: "featureCardIcon";
                      _key: string;
                    }>;
                    _type: "featureCardsIcon";
                    _key: string;
                  }
                | {
                    title: string | null;
                    description: string | null;
                    form: {
                      _id: string;
                      title: string | null;
                      description: string | null;
                      fields: Array<
                        | {
                            label: string | null;
                            name: string | null;
                            type:
                              | "checkbox"
                              | "curso"
                              | "direccion"
                              | "email"
                              | "number"
                              | "radio"
                              | "rut"
                              | "select"
                              | "tel"
                              | "text"
                              | "textarea"
                              | null;
                            required: "no" | "yes" | null;
                            options: Array<string> | null;
                            placeholder: string | null;
                            courseReference: null;
                            selectedTrainingDate: null;
                          }
                        | {
                            label: string | null;
                            name: string | null;
                            type:
                              | "checkbox"
                              | "curso"
                              | "direccion"
                              | "email"
                              | "number"
                              | "radio"
                              | "rut"
                              | "select"
                              | "tel"
                              | "text"
                              | "textarea"
                              | null;
                            required: "no" | "yes" | null;
                            options: Array<string> | null;
                            placeholder: string | null;
                          }
                      > | null;
                      emailRecipients: string | null;
                      submitButtonText: string | null;
                      successMessage: string | null;
                      errorMessage: string | null;
                    } | null;
                    displayMode: "inline" | "modal" | null;
                    triggerText: string | null;
                    buttonPosition: "default" | "fixed" | null;
                    variant: "centered" | "default" | "withBackground" | null;
                    _type: "formBlock";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    columnCount?: 3 | 4 | 5 | 6;
                    columnHeaders?: Array<string>;
                    rows?: Array<{
                      cells?: Array<
                        | {
                            content?: string;
                            isLastColumn?: boolean;
                            _type: "cell";
                            _key: string;
                          }
                        | {
                            content?: Array<
                              | ({
                                  _key: string;
                                } & Button)
                              | {
                                  children?: Array<{
                                    marks?: Array<string>;
                                    text?: string;
                                    _type: "span";
                                    _key: string;
                                  }>;
                                  style?:
                                    | "h2"
                                    | "h3"
                                    | "h4"
                                    | "h5"
                                    | "h6"
                                    | "inline"
                                    | "normal";
                                  listItem?: "bullet" | "number";
                                  markDefs?: Array<{
                                    customLink?: CustomUrl;
                                    _type: "customLink";
                                    _key: string;
                                  }>;
                                  level?: number;
                                  _type: "block";
                                  _key: string;
                                }
                              | {
                                  asset?: {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                                  };
                                  media?: unknown;
                                  hotspot?: SanityImageHotspot;
                                  crop?: SanityImageCrop;
                                  caption?: string;
                                  _type: "image";
                                  _key: string;
                                }
                            >;
                            isLastColumn?: boolean;
                            _type: "richCell";
                            _key: string;
                          }
                      >;
                      _type: "row";
                      _key: string;
                    }>;
                    variant?: "bordered" | "compact" | "default" | "striped";
                    _type: "genericTable";
                    _key: string;
                  }
                | {
                    variant:
                      | "accent1"
                      | "accent2"
                      | "alt"
                      | "brand"
                      | "default"
                      | null;
                    badge?: string;
                    title?: string;
                    titleFont: "default" | "statement" | null;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    image: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Image-Broken";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    imageAlignment: "default" | "fit" | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    _type: "hero";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    aspects?: Array<{
                      title?: string;
                      variant?: "icon" | "image" | "none";
                      image?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        _type: "image";
                      };
                      content?: Array<
                        | ({
                            _key: string;
                          } & Button)
                        | {
                            children?: Array<{
                              marks?: Array<string>;
                              text?: string;
                              _type: "span";
                              _key: string;
                            }>;
                            style?:
                              | "h2"
                              | "h3"
                              | "h4"
                              | "h5"
                              | "h6"
                              | "inline"
                              | "normal";
                            listItem?: "bullet" | "number";
                            markDefs?: Array<{
                              customLink?: CustomUrl;
                              _type: "customLink";
                              _key: string;
                            }>;
                            level?: number;
                            _type: "block";
                            _key: string;
                          }
                      >;
                      _type: "aspect";
                      _key: string;
                    }>;
                    columns?: "2" | "3" | "4";
                    _type: "highlightedAspects";
                    _key: string;
                  }
                | {
                    title: string | null;
                    description: string | null;
                    images: Array<{
                      _key: string;
                      _type: "galleryImage";
                      image: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        _type: "image";
                        alt: string | "Gallery Image";
                        blurData: string | null;
                        dominantColor: string | null;
                      } | null;
                      alt?: string;
                      caption: string | null;
                    }> | null;
                    layout: "bento" | "carousel" | "grid" | "masonry" | null;
                    columns: "2" | "3" | "4" | null;
                    slidesPerRow: 1 | 2 | 3 | 4 | 5 | null;
                    _type: "imageGallery";
                    _key: string;
                  }
                | {
                    eyebrow?: string;
                    title?: string;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    cards: Array<{
                      title?: string;
                      description?: string;
                      image: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        _type: "image";
                        alt: string | "Image-Broken";
                        blurData: string | null;
                        dominantColor: string | null;
                      } | null;
                      url?: CustomUrl;
                      _type: "imageLinkCard";
                      _key: string;
                      openInNewTab: boolean | null;
                      href: string | null;
                    }> | null;
                    _type: "imageLinkCards";
                    _key: string;
                  }
                | {
                    badge?: string;
                    title?: string;
                    titleFont: "default" | "statement" | null;
                    layout: "default" | "fullImage" | null;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    backgroundType?: "image" | "video";
                    backgroundImage: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Background Image";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    backgroundVideo: string | null;
                    image: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Image-Broken";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    _type: "mainHero";
                    _key: string;
                  }
                | {
                    title?: string;
                    productType?: "buses" | "camiones" | "motoresPenta";
                    taxonomyFilter?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "skosConcept";
                    };
                    _type: "productListing";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    specifications?: Array<
                      {
                        _key: string;
                      } & SpecificationItem
                    >;
                    variant?: "bordered" | "compact" | "default" | "striped";
                    _type: "specificationsTable";
                    _key: string;
                  }
                | {
                    title?: string;
                    subTitle: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    helperText: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    _type: "subscribeNewsletter";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    showMap?: boolean;
                    showAllRegions?: boolean;
                    selectedRegions?: Array<string>;
                    variant?: "cards" | "compact" | "default";
                    _type: "sucursalesSelector";
                    _key: string;
                  }
                | {
                    richText?: Array<
                      | ({
                          _key: string;
                        } & Button)
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs?: Array<{
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }>;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    >;
                    _type: "textBlock";
                    _key: string;
                  }
                | {
                    title?: string;
                    videoType?: "mp4" | "youtube";
                    mp4File?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    youtubeUrl?: string;
                    posterImage?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                    };
                    showControls?: "no" | "yes";
                    autoplay?: "no" | "yes";
                    loop?: "no" | "yes";
                    allowFullscreen?: "no" | "yes";
                    _type: "videoBlock";
                    _key: string;
                  }
                | {
                    variant?:
                      | "accent1"
                      | "accent2"
                      | "alt"
                      | "brand"
                      | "default";
                    badge?: string;
                    title?: string;
                    titleFont?: "default" | "statement";
                    richText?: Array<
                      | ({
                          _key: string;
                        } & Button)
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs?: Array<{
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }>;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    >;
                    videoType?: "mp4" | "youtube";
                    mp4File?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    youtubeUrl?: string;
                    posterImage?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                    };
                    showControls?: "no" | "yes";
                    autoplay?: "no" | "yes";
                    loop?: "no" | "yes";
                    buttons?: Array<
                      {
                        _key: string;
                      } & Button
                    >;
                    _type: "videoHero";
                    _key: string;
                  }
              > | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "textBlock";
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
          }
        | {
            _key: string;
            _type: "videoBlock";
            title: string | null;
            videoType: "mp4" | "youtube" | null;
            mp4File: string | null;
            youtubeUrl: string | null;
            posterImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Video Poster";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            showControls: "no" | "yes" | null;
            autoplay: "no" | "yes" | null;
            loop: "no" | "yes" | null;
            allowFullscreen: "no" | "yes" | null;
          }
        | {
            _key: string;
            _type: "videoHero";
            variant: "accent1" | "accent2" | "alt" | "brand" | "default" | null;
            badge?: string;
            title?: string;
            titleFont: "default" | "statement" | null;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            videoType: "mp4" | "youtube" | null;
            mp4File: string | null;
            youtubeUrl: string | null;
            posterImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Video Hero Poster";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            showControls: "no" | "yes" | null;
            autoplay: "no" | "yes" | null;
            loop: "no" | "yes" | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
      > | null;
    }
  | {
      _id: string;
      _type: "page";
      title: string | null;
      subtitle: null;
      description: string | null;
      slug: string | null;
      pageBuilder: Array<
        | {
            _key: string;
            _type: "cta";
            eyebrow?: string;
            title?: string;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
        | {
            _key: string;
            _type: "cursosBlock";
            title: string | null;
            description: string | null;
            cursos: Array<{
              _id: string;
              _type: "cursos";
              title: string | null;
              description: RichText | null;
              slug: string | null;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                alt: string | "Image-Broken";
                _type: "image";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              fechasCapacitacion: Array<{
                nombre: string | null;
                profesor: "Abraham Medina" | "Patricio Barahona" | null;
                fecha: string | null;
                hora: string | null;
              }> | null;
            }> | null;
            displayMode: "grid" | "list" | null;
            showAllDates: false | true;
          }
        | {
            _key: string;
            _type: "doubleHero";
            variant:
              | "accent1"
              | "accent2"
              | "alt"
              | "brand"
              | "default"
              | "inset"
              | null;
            primaryBadge: string | null;
            primaryTitle: string | null;
            primaryRichText: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }> | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            primaryImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Primary Image";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            primaryButtons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              openInNewTab: boolean | null;
              href: string | null;
            }> | null;
            secondaryBadge: string | null;
            secondaryTitle: string | null;
            secondaryRichText: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }> | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            secondaryImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Secondary Image";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            secondaryButtons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              openInNewTab: boolean | null;
              href: string | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "faqAccordion";
            eyebrow?: string;
            title?: string;
            subtitle?: string;
            link: {
              title?: string;
              description?: string;
              url?: CustomUrl;
              openInNewTab: boolean | null;
              href: string | null;
            } | null;
            faqs: Array<{
              title: string | null;
              _id: string;
              _type: "faq";
              richText: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                          openInNewTab: boolean | null;
                          href: string | "#" | null;
                        }
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    _key: string;
                    _type: "button";
                    variant:
                      | "default"
                      | "link"
                      | "outline"
                      | "primary"
                      | "secondary"
                      | null;
                    text: string | null;
                    icon: "volvo-chevron-right" | "volvo-file-down" | null;
                    url?: {
                      type?: "external" | "file" | "internal";
                      internal?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blog";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blogIndex";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "buses";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "camiones";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "motoresPenta";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          };
                      external?: string;
                      file?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                        };
                        media?: unknown;
                        _type: "file";
                      };
                      openInNewTab?: boolean;
                    };
                    openInNewTab: boolean | null;
                    href: string | null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    caption?: string;
                    _type: "image";
                    _key: string;
                  }
              > | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "featureCardsIcon";
            eyebrow?: string;
            title?: string;
            richText?: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }>;
            cards?: Array<{
              icon?: IconPicker;
              title?: string;
              richText?: Array<{
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
                listItem?: "bullet" | "number";
                markDefs?: Array<{
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }>;
              _type: "featureCardIcon";
              _key: string;
            }>;
          }
        | {
            _key: string;
            _type: "featuredBlogs";
            title: string | null;
            subtitle: string | null;
            displayMode: "curated" | "latest" | null;
            blogCount: "1" | "2" | "3" | null;
            blogs: Array<{
              _type: "blog";
              _id: string;
              title: string | null;
              description: string | null;
              slug: string | null;
              richText: RichText | null;
              orderRank: string | null;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Image-Broken";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              publishedAt: string | null;
              authors: {
                _id: string;
                name: string | null;
                position: string | null;
                image: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Image-Broken";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
              } | null;
            }> | null;
            showViewAllButton: false | true;
            buttonText: string | null;
          }
        | {
            _key: string;
            _type: "formBlock";
            title: string | null;
            description: string | null;
            form: {
              _id: string;
              title: string | null;
              description: string | null;
              fields: Array<
                | {
                    label: string | null;
                    name: string | null;
                    type:
                      | "checkbox"
                      | "curso"
                      | "direccion"
                      | "email"
                      | "number"
                      | "radio"
                      | "rut"
                      | "select"
                      | "tel"
                      | "text"
                      | "textarea"
                      | null;
                    required: "no" | "yes" | null;
                    options: Array<string> | null;
                    placeholder: string | null;
                    courseReference: null;
                    selectedTrainingDate: null;
                  }
                | {
                    label: string | null;
                    name: string | null;
                    type:
                      | "checkbox"
                      | "curso"
                      | "direccion"
                      | "email"
                      | "number"
                      | "radio"
                      | "rut"
                      | "select"
                      | "tel"
                      | "text"
                      | "textarea"
                      | null;
                    required: "no" | "yes" | null;
                    options: Array<string> | null;
                    placeholder: string | null;
                  }
              > | null;
              emailRecipients: string | null;
              submitButtonText: string | null;
              successMessage: string | null;
              errorMessage: string | null;
            } | null;
            displayMode: "inline" | "modal" | null;
            triggerText: string | null;
            buttonPosition: "default" | "fixed" | null;
            variant: "centered" | "default" | "withBackground" | null;
          }
        | {
            _key: string;
            _type: "genericTable";
            title: string | null;
            description: string | null;
            columnCount: 3 | 4 | 5 | 6 | null;
            columnHeaders: Array<string> | null;
            rows: Array<{
              _key: string;
              cells: Array<
                | {
                    _key: string;
                    content: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant?:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary";
                          text?: string;
                          icon?: "volvo-chevron-right" | "volvo-file-down";
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          markDefs: null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                          markDefs: null;
                        }
                    > | null;
                    isLastColumn: boolean | null;
                  }
                | {
                    _key: string;
                    content: string | null;
                    isLastColumn: boolean | null;
                  }
              > | null;
            }> | null;
            variant: "bordered" | "compact" | "default" | "striped" | null;
          }
        | {
            _key: string;
            _type: "hero";
            variant: "accent1" | "accent2" | "alt" | "brand" | "default" | null;
            badge?: string;
            title?: string;
            titleFont: "default" | "statement" | null;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            image: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Image-Broken";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            imageAlignment: "default" | "fit" | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
        | {
            _key: string;
            _type: "highlightedAspects";
            title: string | null;
            description: string | null;
            aspects: Array<{
              _key: string;
              title: string | null;
              variant: "icon" | "image" | "none" | null;
              icon: null;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Aspect Image";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              content: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                          openInNewTab: boolean | null;
                          href: string | "#" | null;
                        }
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    _key: string;
                    _type: "button";
                    variant:
                      | "default"
                      | "link"
                      | "outline"
                      | "primary"
                      | "secondary"
                      | null;
                    text: string | null;
                    icon: "volvo-chevron-right" | "volvo-file-down" | null;
                    url?: {
                      type?: "external" | "file" | "internal";
                      internal?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blog";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blogIndex";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "buses";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "camiones";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "motoresPenta";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          };
                      external?: string;
                      file?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                        };
                        media?: unknown;
                        _type: "file";
                      };
                      openInNewTab?: boolean;
                    };
                    href: string | "#" | null;
                    openInNewTab: boolean | false;
                  }
              > | null;
            }> | null;
            columns: "2" | "3" | "4" | null;
          }
        | {
            _key: string;
            _type: "imageGallery";
            title: string | null;
            description: string | null;
            images: Array<{
              _key: string;
              _type: "galleryImage";
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Gallery Image";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              alt?: string;
              caption: string | null;
            }> | null;
            layout: "bento" | "carousel" | "grid" | "masonry" | null;
            columns: "2" | "3" | "4" | null;
            slidesPerRow: 1 | 2 | 3 | 4 | 5 | null;
          }
        | {
            _key: string;
            _type: "imageLinkCards";
            eyebrow?: string;
            title?: string;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
            cards: Array<{
              title?: string;
              description?: string;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Image-Broken";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              url?: CustomUrl;
              _type: "imageLinkCard";
              _key: string;
              openInNewTab: boolean | null;
              href: string | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "infoSection";
            title: string | null;
            headingLevel: "h1" | "h2" | "h3" | "h4" | null;
            content: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }> | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          }
        | {
            _key: string;
            _type: "mainHero";
            badge?: string;
            title?: string;
            titleFont: "default" | "statement" | null;
            layout: "default" | "fullImage" | null;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            backgroundType?: "image" | "video";
            backgroundImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Background Image";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            backgroundVideo: string | null;
            image: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Image-Broken";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
        | {
            _key: string;
            _type: "productListing";
            title?: string;
            productType?: "buses" | "camiones" | "motoresPenta";
            taxonomyFilter?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "skosConcept";
            };
          }
        | {
            _key: string;
            _type: "specificationsTable";
            title: string | null;
            description: string | null;
            specifications: Array<{
              _key: string;
              label: string | null;
              content: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                          openInNewTab: boolean | null;
                          href: string | "#" | null;
                        }
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    _key: string;
                    _type: "button";
                    variant?:
                      | "default"
                      | "link"
                      | "outline"
                      | "primary"
                      | "secondary";
                    text?: string;
                    icon?: "volvo-chevron-right" | "volvo-file-down";
                    url?: {
                      type?: "external" | "file" | "internal";
                      internal?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blog";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blogIndex";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "buses";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "camiones";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "motoresPenta";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          };
                      external?: string;
                      file?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                        };
                        media?: unknown;
                        _type: "file";
                      };
                      openInNewTab?: boolean;
                    };
                    markDefs: null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    caption?: string;
                    _type: "image";
                    _key: string;
                    markDefs: null;
                  }
              > | null;
            }> | null;
            variant: "bordered" | "compact" | "default" | "striped" | null;
          }
        | {
            _key: string;
            _type: "subscribeNewsletter";
            title?: string;
            subTitle: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            helperText: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          }
        | {
            _key: string;
            _type: "sucursalesSelector";
            title: string | null;
            description: string | null;
            showMap: boolean | null;
            showAllRegions: boolean | null;
            selectedRegions: Array<string> | null;
            variant: "cards" | "compact" | "default" | null;
          }
        | {
            _key: string;
            _type: "tabs";
            title: string | null;
            description: string | null;
            tabs: Array<{
              _key: string;
              label: string | null;
              content: Array<
                | {
                    eyebrow?: string;
                    title?: string;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    _type: "cta";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    cursos?: Array<{
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      _key: string;
                      [internalGroqTypeReferenceTo]?: "cursos";
                    }>;
                    displayMode?: "grid" | "list";
                    showAllDates?: "no" | "yes";
                    _type: "cursosBlock";
                    _key: string;
                  }
                | {
                    variant:
                      | "accent1"
                      | "accent2"
                      | "alt"
                      | "brand"
                      | "default"
                      | "inset"
                      | null;
                    primaryBadge: string | null;
                    primaryTitle: string | null;
                    primaryRichText: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "blockquote"
                        | "h1"
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<{
                        href?: string;
                        _type: "link";
                        _key: string;
                      }> | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    primaryImage: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Primary Image";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    primaryButtons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      openInNewTab: boolean | null;
                      href: string | null;
                    }> | null;
                    secondaryBadge: string | null;
                    secondaryTitle: string | null;
                    secondaryRichText: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "blockquote"
                        | "h1"
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<{
                        href?: string;
                        _type: "link";
                        _key: string;
                      }> | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    secondaryImage: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Secondary Image";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    secondaryButtons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      openInNewTab: boolean | null;
                      href: string | null;
                    }> | null;
                    _type: "doubleHero";
                    _key: string;
                  }
                | {
                    eyebrow?: string;
                    title?: string;
                    subtitle?: string;
                    link: {
                      title?: string;
                      description?: string;
                      url?: CustomUrl;
                      openInNewTab: boolean | null;
                      href: string | null;
                    } | null;
                    faqs: Array<{
                      title: string | null;
                      _id: string;
                      _type: "faq";
                      richText: Array<
                        | {
                            children?: Array<{
                              marks?: Array<string>;
                              text?: string;
                              _type: "span";
                              _key: string;
                            }>;
                            style?:
                              | "h2"
                              | "h3"
                              | "h4"
                              | "h5"
                              | "h6"
                              | "inline"
                              | "normal";
                            listItem?: "bullet" | "number";
                            markDefs: Array<
                              | {
                                  customLink?: CustomUrl;
                                  _type: "customLink";
                                  _key: string;
                                  openInNewTab: boolean | null;
                                  href: string | "#" | null;
                                }
                              | {
                                  customLink?: CustomUrl;
                                  _type: "customLink";
                                  _key: string;
                                }
                            > | null;
                            level?: number;
                            _type: "block";
                            _key: string;
                          }
                        | {
                            _key: string;
                            _type: "button";
                            variant:
                              | "default"
                              | "link"
                              | "outline"
                              | "primary"
                              | "secondary"
                              | null;
                            text: string | null;
                            icon:
                              | "volvo-chevron-right"
                              | "volvo-file-down"
                              | null;
                            url?: {
                              type?: "external" | "file" | "internal";
                              internal?:
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "blog";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "blogIndex";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "buses";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "camiones";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "motoresPenta";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "page";
                                  };
                              external?: string;
                              file?: {
                                asset?: {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                                };
                                media?: unknown;
                                _type: "file";
                              };
                              openInNewTab?: boolean;
                            };
                            openInNewTab: boolean | null;
                            href: string | null;
                          }
                        | {
                            asset?: {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                            };
                            media?: unknown;
                            hotspot?: SanityImageHotspot;
                            crop?: SanityImageCrop;
                            caption?: string;
                            _type: "image";
                            _key: string;
                          }
                      > | null;
                    }> | null;
                    _type: "faqAccordion";
                    _key: string;
                  }
                | {
                    eyebrow?: string;
                    title?: string;
                    richText?: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }>;
                    cards?: Array<{
                      icon?: IconPicker;
                      title?: string;
                      richText?: Array<{
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?:
                          | "h2"
                          | "h3"
                          | "h4"
                          | "h5"
                          | "h6"
                          | "inline"
                          | "normal";
                        listItem?: "bullet" | "number";
                        markDefs?: Array<{
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }>;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }>;
                      _type: "featureCardIcon";
                      _key: string;
                    }>;
                    _type: "featureCardsIcon";
                    _key: string;
                  }
                | {
                    title: string | null;
                    description: string | null;
                    form: {
                      _id: string;
                      title: string | null;
                      description: string | null;
                      fields: Array<
                        | {
                            label: string | null;
                            name: string | null;
                            type:
                              | "checkbox"
                              | "curso"
                              | "direccion"
                              | "email"
                              | "number"
                              | "radio"
                              | "rut"
                              | "select"
                              | "tel"
                              | "text"
                              | "textarea"
                              | null;
                            required: "no" | "yes" | null;
                            options: Array<string> | null;
                            placeholder: string | null;
                            courseReference: null;
                            selectedTrainingDate: null;
                          }
                        | {
                            label: string | null;
                            name: string | null;
                            type:
                              | "checkbox"
                              | "curso"
                              | "direccion"
                              | "email"
                              | "number"
                              | "radio"
                              | "rut"
                              | "select"
                              | "tel"
                              | "text"
                              | "textarea"
                              | null;
                            required: "no" | "yes" | null;
                            options: Array<string> | null;
                            placeholder: string | null;
                          }
                      > | null;
                      emailRecipients: string | null;
                      submitButtonText: string | null;
                      successMessage: string | null;
                      errorMessage: string | null;
                    } | null;
                    displayMode: "inline" | "modal" | null;
                    triggerText: string | null;
                    buttonPosition: "default" | "fixed" | null;
                    variant: "centered" | "default" | "withBackground" | null;
                    _type: "formBlock";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    columnCount?: 3 | 4 | 5 | 6;
                    columnHeaders?: Array<string>;
                    rows?: Array<{
                      cells?: Array<
                        | {
                            content?: string;
                            isLastColumn?: boolean;
                            _type: "cell";
                            _key: string;
                          }
                        | {
                            content?: Array<
                              | ({
                                  _key: string;
                                } & Button)
                              | {
                                  children?: Array<{
                                    marks?: Array<string>;
                                    text?: string;
                                    _type: "span";
                                    _key: string;
                                  }>;
                                  style?:
                                    | "h2"
                                    | "h3"
                                    | "h4"
                                    | "h5"
                                    | "h6"
                                    | "inline"
                                    | "normal";
                                  listItem?: "bullet" | "number";
                                  markDefs?: Array<{
                                    customLink?: CustomUrl;
                                    _type: "customLink";
                                    _key: string;
                                  }>;
                                  level?: number;
                                  _type: "block";
                                  _key: string;
                                }
                              | {
                                  asset?: {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                                  };
                                  media?: unknown;
                                  hotspot?: SanityImageHotspot;
                                  crop?: SanityImageCrop;
                                  caption?: string;
                                  _type: "image";
                                  _key: string;
                                }
                            >;
                            isLastColumn?: boolean;
                            _type: "richCell";
                            _key: string;
                          }
                      >;
                      _type: "row";
                      _key: string;
                    }>;
                    variant?: "bordered" | "compact" | "default" | "striped";
                    _type: "genericTable";
                    _key: string;
                  }
                | {
                    variant:
                      | "accent1"
                      | "accent2"
                      | "alt"
                      | "brand"
                      | "default"
                      | null;
                    badge?: string;
                    title?: string;
                    titleFont: "default" | "statement" | null;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    image: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Image-Broken";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    imageAlignment: "default" | "fit" | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    _type: "hero";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    aspects?: Array<{
                      title?: string;
                      variant?: "icon" | "image" | "none";
                      image?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        _type: "image";
                      };
                      content?: Array<
                        | ({
                            _key: string;
                          } & Button)
                        | {
                            children?: Array<{
                              marks?: Array<string>;
                              text?: string;
                              _type: "span";
                              _key: string;
                            }>;
                            style?:
                              | "h2"
                              | "h3"
                              | "h4"
                              | "h5"
                              | "h6"
                              | "inline"
                              | "normal";
                            listItem?: "bullet" | "number";
                            markDefs?: Array<{
                              customLink?: CustomUrl;
                              _type: "customLink";
                              _key: string;
                            }>;
                            level?: number;
                            _type: "block";
                            _key: string;
                          }
                      >;
                      _type: "aspect";
                      _key: string;
                    }>;
                    columns?: "2" | "3" | "4";
                    _type: "highlightedAspects";
                    _key: string;
                  }
                | {
                    title: string | null;
                    description: string | null;
                    images: Array<{
                      _key: string;
                      _type: "galleryImage";
                      image: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        _type: "image";
                        alt: string | "Gallery Image";
                        blurData: string | null;
                        dominantColor: string | null;
                      } | null;
                      alt?: string;
                      caption: string | null;
                    }> | null;
                    layout: "bento" | "carousel" | "grid" | "masonry" | null;
                    columns: "2" | "3" | "4" | null;
                    slidesPerRow: 1 | 2 | 3 | 4 | 5 | null;
                    _type: "imageGallery";
                    _key: string;
                  }
                | {
                    eyebrow?: string;
                    title?: string;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    cards: Array<{
                      title?: string;
                      description?: string;
                      image: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        _type: "image";
                        alt: string | "Image-Broken";
                        blurData: string | null;
                        dominantColor: string | null;
                      } | null;
                      url?: CustomUrl;
                      _type: "imageLinkCard";
                      _key: string;
                      openInNewTab: boolean | null;
                      href: string | null;
                    }> | null;
                    _type: "imageLinkCards";
                    _key: string;
                  }
                | {
                    badge?: string;
                    title?: string;
                    titleFont: "default" | "statement" | null;
                    layout: "default" | "fullImage" | null;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    backgroundType?: "image" | "video";
                    backgroundImage: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Background Image";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    backgroundVideo: string | null;
                    image: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Image-Broken";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    _type: "mainHero";
                    _key: string;
                  }
                | {
                    title?: string;
                    productType?: "buses" | "camiones" | "motoresPenta";
                    taxonomyFilter?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "skosConcept";
                    };
                    _type: "productListing";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    specifications?: Array<
                      {
                        _key: string;
                      } & SpecificationItem
                    >;
                    variant?: "bordered" | "compact" | "default" | "striped";
                    _type: "specificationsTable";
                    _key: string;
                  }
                | {
                    title?: string;
                    subTitle: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    helperText: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    _type: "subscribeNewsletter";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    showMap?: boolean;
                    showAllRegions?: boolean;
                    selectedRegions?: Array<string>;
                    variant?: "cards" | "compact" | "default";
                    _type: "sucursalesSelector";
                    _key: string;
                  }
                | {
                    richText?: Array<
                      | ({
                          _key: string;
                        } & Button)
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs?: Array<{
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }>;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    >;
                    _type: "textBlock";
                    _key: string;
                  }
                | {
                    title?: string;
                    videoType?: "mp4" | "youtube";
                    mp4File?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    youtubeUrl?: string;
                    posterImage?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                    };
                    showControls?: "no" | "yes";
                    autoplay?: "no" | "yes";
                    loop?: "no" | "yes";
                    allowFullscreen?: "no" | "yes";
                    _type: "videoBlock";
                    _key: string;
                  }
                | {
                    variant?:
                      | "accent1"
                      | "accent2"
                      | "alt"
                      | "brand"
                      | "default";
                    badge?: string;
                    title?: string;
                    titleFont?: "default" | "statement";
                    richText?: Array<
                      | ({
                          _key: string;
                        } & Button)
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs?: Array<{
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }>;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    >;
                    videoType?: "mp4" | "youtube";
                    mp4File?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    youtubeUrl?: string;
                    posterImage?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                    };
                    showControls?: "no" | "yes";
                    autoplay?: "no" | "yes";
                    loop?: "no" | "yes";
                    buttons?: Array<
                      {
                        _key: string;
                      } & Button
                    >;
                    _type: "videoHero";
                    _key: string;
                  }
              > | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "textBlock";
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
          }
        | {
            _key: string;
            _type: "videoBlock";
            title: string | null;
            videoType: "mp4" | "youtube" | null;
            mp4File: string | null;
            youtubeUrl: string | null;
            posterImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Video Poster";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            showControls: "no" | "yes" | null;
            autoplay: "no" | "yes" | null;
            loop: "no" | "yes" | null;
            allowFullscreen: "no" | "yes" | null;
          }
        | {
            _key: string;
            _type: "videoHero";
            variant: "accent1" | "accent2" | "alt" | "brand" | "default" | null;
            badge?: string;
            title?: string;
            titleFont: "default" | "statement" | null;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            videoType: "mp4" | "youtube" | null;
            mp4File: string | null;
            youtubeUrl: string | null;
            posterImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Video Hero Poster";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            showControls: "no" | "yes" | null;
            autoplay: "no" | "yes" | null;
            loop: "no" | "yes" | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
      > | null;
    }
  | null;
// Variable: queryCamionesPaths
// Query: *[_type == "camiones" && defined(slug.current)].slug.current
export type QueryCamionesPathsResult = Array<string | null>;
// Variable: queryBusesData
// Query: *[_type == "buses"]{  _id,  _type,  title,  subtitle,  description,  "slug": slug.current,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },    richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },  "taxonomy": taxonomias->{    prefLabel,    conceptId,    "slug": lower(prefLabel)  }}
export type QueryBusesDataResult = Array<{
  _id: string;
  _type: "buses";
  title: string | null;
  subtitle: string | null;
  description: string | null;
  slug: string | null;
  image: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    alt: string | "Image-Broken";
    blurData: string | null;
    dominantColor: string | null;
  } | null;
  richText: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<
          | {
              customLink?: CustomUrl;
              _type: "customLink";
              _key: string;
              openInNewTab: boolean | null;
              href: string | "#" | null;
            }
          | {
              customLink?: CustomUrl;
              _type: "customLink";
              _key: string;
            }
        > | null;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        _key: string;
        _type: "button";
        variant:
          | "default"
          | "link"
          | "outline"
          | "primary"
          | "secondary"
          | null;
        text: string | null;
        icon: "volvo-chevron-right" | "volvo-file-down" | null;
        url?: {
          type?: "external" | "file" | "internal";
          internal?:
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "blog";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "blogIndex";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "buses";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "camiones";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "motoresPenta";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "page";
              };
          external?: string;
          file?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
            };
            media?: unknown;
            _type: "file";
          };
          openInNewTab?: boolean;
        };
        openInNewTab: boolean | null;
        href: string | null;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        caption?: string;
        _type: "image";
        _key: string;
      }
  > | null;
  taxonomy: {
    prefLabel: string | null;
    conceptId: string | null;
    slug: string | null;
  } | null;
}>;
// Variable: queryBusOrPageBySlug
// Query: *[  (_type == "buses" || _type == "page")  && slug.current == $slug ][0]{  _id,  _type,  title,  description,  "slug": slug.current,  _type == "buses" => {       image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },     taxonomias->{      "label": prefLabel,      "slug": prefLabel,      "iri": "/buses/" + lower(prefLabel)    }  },    pageBuilder[]{    ...,    _type,      _type == "cta" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },  },      _type == "mainHero" => {    ...,    titleFont,    layout,    "backgroundImage": backgroundImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    "backgroundVideo": backgroundVideo.asset->url,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "hero" => {    ...,    variant,    titleFont,    imageAlignment,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "doubleHero" => {    ...,    variant,    primaryBadge,    primaryTitle,    "primaryRichText": primaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "primaryImage": primaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    primaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    secondaryBadge,    secondaryTitle,    "secondaryRichText": secondaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "secondaryImage": secondaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    secondaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },      _type == "faqAccordion" => {    ...,      "faqs": array::compact(faqs[]->{    title,    _id,    _type,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  }),    link{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },      _type == "subscribeNewsletter" => {    ...,    "subTitle": subTitle[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "helperText": helperText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      _type == "imageLinkCards" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },    "cards": array::compact(cards[]{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      ),        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },    })  },      _type == "formBlock" => {    ...,    title,    description,    variant,    displayMode,    triggerText,    buttonPosition,    "form": form->{      _id,      title,      description,        fields[]{    label,    name,    type,    required,    options,    placeholder,    type == "curso" => {      courseReference->{        _id,        title,        "fechasCapacitacion": fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        }      },      selectedTrainingDate    }  },  emailRecipients,  submitButtonText,  successMessage,  errorMessage,      submitButtonText,      successMessage,      errorMessage    }  },      _type == "tabs" => {    ...,    title,    description,    tabs[]{      _key,      label,      content[]{        ...,        _type,        _key,          _type == "cta" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },  },          _type == "mainHero" => {    ...,    titleFont,    layout,    "backgroundImage": backgroundImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    "backgroundVideo": backgroundVideo.asset->url,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },          _type == "hero" => {    ...,    variant,    titleFont,    imageAlignment,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },          _type == "doubleHero" => {    ...,    variant,    primaryBadge,    primaryTitle,    "primaryRichText": primaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "primaryImage": primaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    primaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    secondaryBadge,    secondaryTitle,    "secondaryRichText": secondaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "secondaryImage": secondaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    secondaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },          _type == "faqAccordion" => {    ...,      "faqs": array::compact(faqs[]->{    title,    _id,    _type,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  }),    link{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },          _type == "subscribeNewsletter" => {    ...,    "subTitle": subTitle[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "helperText": helperText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },          _type == "imageLinkCards" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },    "cards": array::compact(cards[]{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      ),        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },    })  },          _type == "formBlock" => {    ...,    title,    description,    variant,    displayMode,    triggerText,    buttonPosition,    "form": form->{      _id,      title,      description,        fields[]{    label,    name,    type,    required,    options,    placeholder,    type == "curso" => {      courseReference->{        _id,        title,        "fechasCapacitacion": fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        }      },      selectedTrainingDate    }  },  emailRecipients,  submitButtonText,  successMessage,  errorMessage,      submitButtonText,      successMessage,      errorMessage    }  },          _type == "imageGallery" => {    ...,    title,    description,    layout,    columns,    slidesPerRow,    "images": images[]{      ...,      "image": image{        ...,        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background,      },      caption    }  },          _type == "featuredBlogs" => {    ...,    title,    subtitle,    displayMode,    blogCount,    buttonText,    "showViewAllButton": showViewAllButton == "yes",    "blogs": select(      displayMode == "curated" => blogs[]-> {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      },      displayMode == "latest" => *[        _type == "blog"         && (seoHideFromLists != true)      ] | order(publishedAt desc, _createdAt desc)[0...3] {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      }    )  },        _type == "tabs" => {          ...,          title,          description,          tabs[]{            _key,            label,            content[]{               ...,              _type,              _key            }          }        }      }    }  },      _type == "infoSection" => {    ...,    title,    headingLevel,    content[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      _type == "imageGallery" => {    ...,    title,    description,    layout,    columns,    slidesPerRow,    "images": images[]{      ...,      "image": image{        ...,        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background,      },      caption    }  },      _type == "specificationsTable" => {    ...,    title,    description,    variant,    "specifications": specifications[]{      _key,      label,      "content": content[]{        ...,          markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }      }    }  },      _type == "genericTable" => {    ...,    title,    description,    columnCount,    columnHeaders,    rows[]{      _key,      cells[]{        _key,        content,        isLastColumn,        _type == "richCell" => {          content[]{            ...,              markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }          }        }      }    },    variant  },      _type == "featuredBlogs" => {    ...,    title,    subtitle,    displayMode,    blogCount,    buttonText,    "showViewAllButton": showViewAllButton == "yes",    "blogs": select(      displayMode == "curated" => blogs[]-> {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      },      displayMode == "latest" => *[        _type == "blog"         && (seoHideFromLists != true)      ] | order(publishedAt desc, _createdAt desc)[0...3] {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      }    )  },      _type == "highlightedAspects" => {    title,    description,    columns,    aspects[]{      _key,      title,      variant,      icon,      image{        ...,        "alt": coalesce(asset->altText, asset->originalFilename, "Aspect Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background      },      content[]{        ...,        _type == "button" => {          ...,          text,          variant,          icon,            "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)        },        _type == "block" => {          ...,            markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }        }      }    }  },      _type == "videoBlock" => {    ...,    _key,    _type,    title,    videoType,    "mp4File": coalesce(      mp4File.asset->url,      mp4File.asset->sources[0].url,      null    ),    youtubeUrl,    showControls,    autoplay,    loop,    allowFullscreen,    "posterImage": posterImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Video Poster"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    }  },      _type == "videoHero" => {    ...,    variant,    titleFont,    videoType,    "mp4File": coalesce(      mp4File.asset->url,      mp4File.asset->sources[0].url,      null    ),    youtubeUrl,    showControls,    autoplay,    loop,    "posterImage": posterImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Video Hero Poster"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "textBlock" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "sucursalesSelector" => {    ...,    title,    description,    showMap,    showAllRegions,    selectedRegions,    variant  },      _type == "cursosBlock" => {    ...,    title,    description,    displayMode,    "showAllDates": showAllDates == "yes",    "cursos": cursos[]-> {      _id,      _type,      title,      description,      "slug": slug.current,        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      "fechasCapacitacion": select(        ^.showAllDates == "yes" => fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        } | order(fecha asc),        fechasCapacitacion[fecha > now()]{          nombre,          profesor,          fecha,          hora        } | order(fecha asc)      )    }  }  } }
export type QueryBusOrPageBySlugResult =
  | {
      _id: string;
      _type: "buses";
      title: string | null;
      description: string | null;
      slug: string | null;
      image: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        alt: string | "Image-Broken";
        blurData: string | null;
        dominantColor: string | null;
      } | null;
      richText: Array<
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
            listItem?: "bullet" | "number";
            markDefs: Array<
              | {
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                  openInNewTab: boolean | null;
                  href: string | "#" | null;
                }
              | {
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }
            > | null;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            _key: string;
            _type: "button";
            variant:
              | "default"
              | "link"
              | "outline"
              | "primary"
              | "secondary"
              | null;
            text: string | null;
            icon: "volvo-chevron-right" | "volvo-file-down" | null;
            url?: {
              type?: "external" | "file" | "internal";
              internal?:
                | {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "blog";
                  }
                | {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "blogIndex";
                  }
                | {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "buses";
                  }
                | {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "camiones";
                  }
                | {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "motoresPenta";
                  }
                | {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "page";
                  };
              external?: string;
              file?: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                };
                media?: unknown;
                _type: "file";
              };
              openInNewTab?: boolean;
            };
            openInNewTab: boolean | null;
            href: string | null;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            caption?: string;
            _type: "image";
            _key: string;
          }
      > | null;
      taxonomias: {
        label: string | null;
        slug: string | null;
        iri: string | null;
      } | null;
      pageBuilder: Array<
        | {
            _key: string;
            _type: "cta";
            eyebrow?: string;
            title?: string;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
        | {
            _key: string;
            _type: "cursosBlock";
            title: string | null;
            description: string | null;
            cursos: Array<{
              _id: string;
              _type: "cursos";
              title: string | null;
              description: RichText | null;
              slug: string | null;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                alt: string | "Image-Broken";
                _type: "image";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              fechasCapacitacion: Array<{
                nombre: string | null;
                profesor: "Abraham Medina" | "Patricio Barahona" | null;
                fecha: string | null;
                hora: string | null;
              }> | null;
            }> | null;
            displayMode: "grid" | "list" | null;
            showAllDates: false | true;
          }
        | {
            _key: string;
            _type: "doubleHero";
            variant:
              | "accent1"
              | "accent2"
              | "alt"
              | "brand"
              | "default"
              | "inset"
              | null;
            primaryBadge: string | null;
            primaryTitle: string | null;
            primaryRichText: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }> | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            primaryImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Primary Image";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            primaryButtons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              openInNewTab: boolean | null;
              href: string | null;
            }> | null;
            secondaryBadge: string | null;
            secondaryTitle: string | null;
            secondaryRichText: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }> | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            secondaryImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Secondary Image";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            secondaryButtons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              openInNewTab: boolean | null;
              href: string | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "faqAccordion";
            eyebrow?: string;
            title?: string;
            subtitle?: string;
            link: {
              title?: string;
              description?: string;
              url?: CustomUrl;
              openInNewTab: boolean | null;
              href: string | null;
            } | null;
            faqs: Array<{
              title: string | null;
              _id: string;
              _type: "faq";
              richText: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                          openInNewTab: boolean | null;
                          href: string | "#" | null;
                        }
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    _key: string;
                    _type: "button";
                    variant:
                      | "default"
                      | "link"
                      | "outline"
                      | "primary"
                      | "secondary"
                      | null;
                    text: string | null;
                    icon: "volvo-chevron-right" | "volvo-file-down" | null;
                    url?: {
                      type?: "external" | "file" | "internal";
                      internal?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blog";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blogIndex";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "buses";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "camiones";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "motoresPenta";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          };
                      external?: string;
                      file?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                        };
                        media?: unknown;
                        _type: "file";
                      };
                      openInNewTab?: boolean;
                    };
                    openInNewTab: boolean | null;
                    href: string | null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    caption?: string;
                    _type: "image";
                    _key: string;
                  }
              > | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "featureCardsIcon";
            eyebrow?: string;
            title?: string;
            richText?: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }>;
            cards?: Array<{
              icon?: IconPicker;
              title?: string;
              richText?: Array<{
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
                listItem?: "bullet" | "number";
                markDefs?: Array<{
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }>;
              _type: "featureCardIcon";
              _key: string;
            }>;
          }
        | {
            _key: string;
            _type: "featuredBlogs";
            title: string | null;
            subtitle: string | null;
            displayMode: "curated" | "latest" | null;
            blogCount: "1" | "2" | "3" | null;
            blogs: Array<{
              _type: "blog";
              _id: string;
              title: string | null;
              description: string | null;
              slug: string | null;
              richText: RichText | null;
              orderRank: string | null;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Image-Broken";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              publishedAt: string | null;
              authors: {
                _id: string;
                name: string | null;
                position: string | null;
                image: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Image-Broken";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
              } | null;
            }> | null;
            showViewAllButton: false | true;
            buttonText: string | null;
          }
        | {
            _key: string;
            _type: "formBlock";
            title: string | null;
            description: string | null;
            form: {
              _id: string;
              title: string | null;
              description: string | null;
              fields: Array<
                | {
                    label: string | null;
                    name: string | null;
                    type:
                      | "checkbox"
                      | "curso"
                      | "direccion"
                      | "email"
                      | "number"
                      | "radio"
                      | "rut"
                      | "select"
                      | "tel"
                      | "text"
                      | "textarea"
                      | null;
                    required: "no" | "yes" | null;
                    options: Array<string> | null;
                    placeholder: string | null;
                    courseReference: null;
                    selectedTrainingDate: null;
                  }
                | {
                    label: string | null;
                    name: string | null;
                    type:
                      | "checkbox"
                      | "curso"
                      | "direccion"
                      | "email"
                      | "number"
                      | "radio"
                      | "rut"
                      | "select"
                      | "tel"
                      | "text"
                      | "textarea"
                      | null;
                    required: "no" | "yes" | null;
                    options: Array<string> | null;
                    placeholder: string | null;
                  }
              > | null;
              emailRecipients: string | null;
              submitButtonText: string | null;
              successMessage: string | null;
              errorMessage: string | null;
            } | null;
            displayMode: "inline" | "modal" | null;
            triggerText: string | null;
            buttonPosition: "default" | "fixed" | null;
            variant: "centered" | "default" | "withBackground" | null;
          }
        | {
            _key: string;
            _type: "genericTable";
            title: string | null;
            description: string | null;
            columnCount: 3 | 4 | 5 | 6 | null;
            columnHeaders: Array<string> | null;
            rows: Array<{
              _key: string;
              cells: Array<
                | {
                    _key: string;
                    content: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant?:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary";
                          text?: string;
                          icon?: "volvo-chevron-right" | "volvo-file-down";
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          markDefs: null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                          markDefs: null;
                        }
                    > | null;
                    isLastColumn: boolean | null;
                  }
                | {
                    _key: string;
                    content: string | null;
                    isLastColumn: boolean | null;
                  }
              > | null;
            }> | null;
            variant: "bordered" | "compact" | "default" | "striped" | null;
          }
        | {
            _key: string;
            _type: "hero";
            variant: "accent1" | "accent2" | "alt" | "brand" | "default" | null;
            badge?: string;
            title?: string;
            titleFont: "default" | "statement" | null;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            image: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Image-Broken";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            imageAlignment: "default" | "fit" | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
        | {
            _key: string;
            _type: "highlightedAspects";
            title: string | null;
            description: string | null;
            aspects: Array<{
              _key: string;
              title: string | null;
              variant: "icon" | "image" | "none" | null;
              icon: null;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Aspect Image";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              content: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                          openInNewTab: boolean | null;
                          href: string | "#" | null;
                        }
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    _key: string;
                    _type: "button";
                    variant:
                      | "default"
                      | "link"
                      | "outline"
                      | "primary"
                      | "secondary"
                      | null;
                    text: string | null;
                    icon: "volvo-chevron-right" | "volvo-file-down" | null;
                    url?: {
                      type?: "external" | "file" | "internal";
                      internal?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blog";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blogIndex";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "buses";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "camiones";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "motoresPenta";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          };
                      external?: string;
                      file?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                        };
                        media?: unknown;
                        _type: "file";
                      };
                      openInNewTab?: boolean;
                    };
                    href: string | "#" | null;
                    openInNewTab: boolean | false;
                  }
              > | null;
            }> | null;
            columns: "2" | "3" | "4" | null;
          }
        | {
            _key: string;
            _type: "imageGallery";
            title: string | null;
            description: string | null;
            images: Array<{
              _key: string;
              _type: "galleryImage";
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Gallery Image";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              alt?: string;
              caption: string | null;
            }> | null;
            layout: "bento" | "carousel" | "grid" | "masonry" | null;
            columns: "2" | "3" | "4" | null;
            slidesPerRow: 1 | 2 | 3 | 4 | 5 | null;
          }
        | {
            _key: string;
            _type: "imageLinkCards";
            eyebrow?: string;
            title?: string;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
            cards: Array<{
              title?: string;
              description?: string;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Image-Broken";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              url?: CustomUrl;
              _type: "imageLinkCard";
              _key: string;
              openInNewTab: boolean | null;
              href: string | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "infoSection";
            title: string | null;
            headingLevel: "h1" | "h2" | "h3" | "h4" | null;
            content: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }> | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          }
        | {
            _key: string;
            _type: "mainHero";
            badge?: string;
            title?: string;
            titleFont: "default" | "statement" | null;
            layout: "default" | "fullImage" | null;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            backgroundType?: "image" | "video";
            backgroundImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Background Image";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            backgroundVideo: string | null;
            image: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Image-Broken";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
        | {
            _key: string;
            _type: "productListing";
            title?: string;
            productType?: "buses" | "camiones" | "motoresPenta";
            taxonomyFilter?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "skosConcept";
            };
          }
        | {
            _key: string;
            _type: "specificationsTable";
            title: string | null;
            description: string | null;
            specifications: Array<{
              _key: string;
              label: string | null;
              content: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                          openInNewTab: boolean | null;
                          href: string | "#" | null;
                        }
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    _key: string;
                    _type: "button";
                    variant?:
                      | "default"
                      | "link"
                      | "outline"
                      | "primary"
                      | "secondary";
                    text?: string;
                    icon?: "volvo-chevron-right" | "volvo-file-down";
                    url?: {
                      type?: "external" | "file" | "internal";
                      internal?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blog";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blogIndex";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "buses";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "camiones";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "motoresPenta";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          };
                      external?: string;
                      file?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                        };
                        media?: unknown;
                        _type: "file";
                      };
                      openInNewTab?: boolean;
                    };
                    markDefs: null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    caption?: string;
                    _type: "image";
                    _key: string;
                    markDefs: null;
                  }
              > | null;
            }> | null;
            variant: "bordered" | "compact" | "default" | "striped" | null;
          }
        | {
            _key: string;
            _type: "subscribeNewsletter";
            title?: string;
            subTitle: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            helperText: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          }
        | {
            _key: string;
            _type: "sucursalesSelector";
            title: string | null;
            description: string | null;
            showMap: boolean | null;
            showAllRegions: boolean | null;
            selectedRegions: Array<string> | null;
            variant: "cards" | "compact" | "default" | null;
          }
        | {
            _key: string;
            _type: "tabs";
            title: string | null;
            description: string | null;
            tabs: Array<{
              _key: string;
              label: string | null;
              content: Array<
                | {
                    eyebrow?: string;
                    title?: string;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    _type: "cta";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    cursos?: Array<{
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      _key: string;
                      [internalGroqTypeReferenceTo]?: "cursos";
                    }>;
                    displayMode?: "grid" | "list";
                    showAllDates?: "no" | "yes";
                    _type: "cursosBlock";
                    _key: string;
                  }
                | {
                    variant:
                      | "accent1"
                      | "accent2"
                      | "alt"
                      | "brand"
                      | "default"
                      | "inset"
                      | null;
                    primaryBadge: string | null;
                    primaryTitle: string | null;
                    primaryRichText: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "blockquote"
                        | "h1"
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<{
                        href?: string;
                        _type: "link";
                        _key: string;
                      }> | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    primaryImage: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Primary Image";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    primaryButtons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      openInNewTab: boolean | null;
                      href: string | null;
                    }> | null;
                    secondaryBadge: string | null;
                    secondaryTitle: string | null;
                    secondaryRichText: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "blockquote"
                        | "h1"
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<{
                        href?: string;
                        _type: "link";
                        _key: string;
                      }> | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    secondaryImage: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Secondary Image";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    secondaryButtons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      openInNewTab: boolean | null;
                      href: string | null;
                    }> | null;
                    _type: "doubleHero";
                    _key: string;
                  }
                | {
                    eyebrow?: string;
                    title?: string;
                    subtitle?: string;
                    link: {
                      title?: string;
                      description?: string;
                      url?: CustomUrl;
                      openInNewTab: boolean | null;
                      href: string | null;
                    } | null;
                    faqs: Array<{
                      title: string | null;
                      _id: string;
                      _type: "faq";
                      richText: Array<
                        | {
                            children?: Array<{
                              marks?: Array<string>;
                              text?: string;
                              _type: "span";
                              _key: string;
                            }>;
                            style?:
                              | "h2"
                              | "h3"
                              | "h4"
                              | "h5"
                              | "h6"
                              | "inline"
                              | "normal";
                            listItem?: "bullet" | "number";
                            markDefs: Array<
                              | {
                                  customLink?: CustomUrl;
                                  _type: "customLink";
                                  _key: string;
                                  openInNewTab: boolean | null;
                                  href: string | "#" | null;
                                }
                              | {
                                  customLink?: CustomUrl;
                                  _type: "customLink";
                                  _key: string;
                                }
                            > | null;
                            level?: number;
                            _type: "block";
                            _key: string;
                          }
                        | {
                            _key: string;
                            _type: "button";
                            variant:
                              | "default"
                              | "link"
                              | "outline"
                              | "primary"
                              | "secondary"
                              | null;
                            text: string | null;
                            icon:
                              | "volvo-chevron-right"
                              | "volvo-file-down"
                              | null;
                            url?: {
                              type?: "external" | "file" | "internal";
                              internal?:
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "blog";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "blogIndex";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "buses";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "camiones";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "motoresPenta";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "page";
                                  };
                              external?: string;
                              file?: {
                                asset?: {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                                };
                                media?: unknown;
                                _type: "file";
                              };
                              openInNewTab?: boolean;
                            };
                            openInNewTab: boolean | null;
                            href: string | null;
                          }
                        | {
                            asset?: {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                            };
                            media?: unknown;
                            hotspot?: SanityImageHotspot;
                            crop?: SanityImageCrop;
                            caption?: string;
                            _type: "image";
                            _key: string;
                          }
                      > | null;
                    }> | null;
                    _type: "faqAccordion";
                    _key: string;
                  }
                | {
                    eyebrow?: string;
                    title?: string;
                    richText?: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }>;
                    cards?: Array<{
                      icon?: IconPicker;
                      title?: string;
                      richText?: Array<{
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?:
                          | "h2"
                          | "h3"
                          | "h4"
                          | "h5"
                          | "h6"
                          | "inline"
                          | "normal";
                        listItem?: "bullet" | "number";
                        markDefs?: Array<{
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }>;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }>;
                      _type: "featureCardIcon";
                      _key: string;
                    }>;
                    _type: "featureCardsIcon";
                    _key: string;
                  }
                | {
                    title: string | null;
                    description: string | null;
                    form: {
                      _id: string;
                      title: string | null;
                      description: string | null;
                      fields: Array<
                        | {
                            label: string | null;
                            name: string | null;
                            type:
                              | "checkbox"
                              | "curso"
                              | "direccion"
                              | "email"
                              | "number"
                              | "radio"
                              | "rut"
                              | "select"
                              | "tel"
                              | "text"
                              | "textarea"
                              | null;
                            required: "no" | "yes" | null;
                            options: Array<string> | null;
                            placeholder: string | null;
                            courseReference: null;
                            selectedTrainingDate: null;
                          }
                        | {
                            label: string | null;
                            name: string | null;
                            type:
                              | "checkbox"
                              | "curso"
                              | "direccion"
                              | "email"
                              | "number"
                              | "radio"
                              | "rut"
                              | "select"
                              | "tel"
                              | "text"
                              | "textarea"
                              | null;
                            required: "no" | "yes" | null;
                            options: Array<string> | null;
                            placeholder: string | null;
                          }
                      > | null;
                      emailRecipients: string | null;
                      submitButtonText: string | null;
                      successMessage: string | null;
                      errorMessage: string | null;
                    } | null;
                    displayMode: "inline" | "modal" | null;
                    triggerText: string | null;
                    buttonPosition: "default" | "fixed" | null;
                    variant: "centered" | "default" | "withBackground" | null;
                    _type: "formBlock";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    columnCount?: 3 | 4 | 5 | 6;
                    columnHeaders?: Array<string>;
                    rows?: Array<{
                      cells?: Array<
                        | {
                            content?: string;
                            isLastColumn?: boolean;
                            _type: "cell";
                            _key: string;
                          }
                        | {
                            content?: Array<
                              | ({
                                  _key: string;
                                } & Button)
                              | {
                                  children?: Array<{
                                    marks?: Array<string>;
                                    text?: string;
                                    _type: "span";
                                    _key: string;
                                  }>;
                                  style?:
                                    | "h2"
                                    | "h3"
                                    | "h4"
                                    | "h5"
                                    | "h6"
                                    | "inline"
                                    | "normal";
                                  listItem?: "bullet" | "number";
                                  markDefs?: Array<{
                                    customLink?: CustomUrl;
                                    _type: "customLink";
                                    _key: string;
                                  }>;
                                  level?: number;
                                  _type: "block";
                                  _key: string;
                                }
                              | {
                                  asset?: {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                                  };
                                  media?: unknown;
                                  hotspot?: SanityImageHotspot;
                                  crop?: SanityImageCrop;
                                  caption?: string;
                                  _type: "image";
                                  _key: string;
                                }
                            >;
                            isLastColumn?: boolean;
                            _type: "richCell";
                            _key: string;
                          }
                      >;
                      _type: "row";
                      _key: string;
                    }>;
                    variant?: "bordered" | "compact" | "default" | "striped";
                    _type: "genericTable";
                    _key: string;
                  }
                | {
                    variant:
                      | "accent1"
                      | "accent2"
                      | "alt"
                      | "brand"
                      | "default"
                      | null;
                    badge?: string;
                    title?: string;
                    titleFont: "default" | "statement" | null;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    image: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Image-Broken";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    imageAlignment: "default" | "fit" | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    _type: "hero";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    aspects?: Array<{
                      title?: string;
                      variant?: "icon" | "image" | "none";
                      image?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        _type: "image";
                      };
                      content?: Array<
                        | ({
                            _key: string;
                          } & Button)
                        | {
                            children?: Array<{
                              marks?: Array<string>;
                              text?: string;
                              _type: "span";
                              _key: string;
                            }>;
                            style?:
                              | "h2"
                              | "h3"
                              | "h4"
                              | "h5"
                              | "h6"
                              | "inline"
                              | "normal";
                            listItem?: "bullet" | "number";
                            markDefs?: Array<{
                              customLink?: CustomUrl;
                              _type: "customLink";
                              _key: string;
                            }>;
                            level?: number;
                            _type: "block";
                            _key: string;
                          }
                      >;
                      _type: "aspect";
                      _key: string;
                    }>;
                    columns?: "2" | "3" | "4";
                    _type: "highlightedAspects";
                    _key: string;
                  }
                | {
                    title: string | null;
                    description: string | null;
                    images: Array<{
                      _key: string;
                      _type: "galleryImage";
                      image: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        _type: "image";
                        alt: string | "Gallery Image";
                        blurData: string | null;
                        dominantColor: string | null;
                      } | null;
                      alt?: string;
                      caption: string | null;
                    }> | null;
                    layout: "bento" | "carousel" | "grid" | "masonry" | null;
                    columns: "2" | "3" | "4" | null;
                    slidesPerRow: 1 | 2 | 3 | 4 | 5 | null;
                    _type: "imageGallery";
                    _key: string;
                  }
                | {
                    eyebrow?: string;
                    title?: string;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    cards: Array<{
                      title?: string;
                      description?: string;
                      image: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        _type: "image";
                        alt: string | "Image-Broken";
                        blurData: string | null;
                        dominantColor: string | null;
                      } | null;
                      url?: CustomUrl;
                      _type: "imageLinkCard";
                      _key: string;
                      openInNewTab: boolean | null;
                      href: string | null;
                    }> | null;
                    _type: "imageLinkCards";
                    _key: string;
                  }
                | {
                    badge?: string;
                    title?: string;
                    titleFont: "default" | "statement" | null;
                    layout: "default" | "fullImage" | null;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    backgroundType?: "image" | "video";
                    backgroundImage: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Background Image";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    backgroundVideo: string | null;
                    image: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Image-Broken";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    _type: "mainHero";
                    _key: string;
                  }
                | {
                    title?: string;
                    productType?: "buses" | "camiones" | "motoresPenta";
                    taxonomyFilter?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "skosConcept";
                    };
                    _type: "productListing";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    specifications?: Array<
                      {
                        _key: string;
                      } & SpecificationItem
                    >;
                    variant?: "bordered" | "compact" | "default" | "striped";
                    _type: "specificationsTable";
                    _key: string;
                  }
                | {
                    title?: string;
                    subTitle: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    helperText: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    _type: "subscribeNewsletter";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    showMap?: boolean;
                    showAllRegions?: boolean;
                    selectedRegions?: Array<string>;
                    variant?: "cards" | "compact" | "default";
                    _type: "sucursalesSelector";
                    _key: string;
                  }
                | {
                    richText?: Array<
                      | ({
                          _key: string;
                        } & Button)
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs?: Array<{
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }>;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    >;
                    _type: "textBlock";
                    _key: string;
                  }
                | {
                    title?: string;
                    videoType?: "mp4" | "youtube";
                    mp4File?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    youtubeUrl?: string;
                    posterImage?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                    };
                    showControls?: "no" | "yes";
                    autoplay?: "no" | "yes";
                    loop?: "no" | "yes";
                    allowFullscreen?: "no" | "yes";
                    _type: "videoBlock";
                    _key: string;
                  }
                | {
                    variant?:
                      | "accent1"
                      | "accent2"
                      | "alt"
                      | "brand"
                      | "default";
                    badge?: string;
                    title?: string;
                    titleFont?: "default" | "statement";
                    richText?: Array<
                      | ({
                          _key: string;
                        } & Button)
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs?: Array<{
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }>;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    >;
                    videoType?: "mp4" | "youtube";
                    mp4File?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    youtubeUrl?: string;
                    posterImage?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                    };
                    showControls?: "no" | "yes";
                    autoplay?: "no" | "yes";
                    loop?: "no" | "yes";
                    buttons?: Array<
                      {
                        _key: string;
                      } & Button
                    >;
                    _type: "videoHero";
                    _key: string;
                  }
              > | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "textBlock";
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
          }
        | {
            _key: string;
            _type: "videoBlock";
            title: string | null;
            videoType: "mp4" | "youtube" | null;
            mp4File: string | null;
            youtubeUrl: string | null;
            posterImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Video Poster";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            showControls: "no" | "yes" | null;
            autoplay: "no" | "yes" | null;
            loop: "no" | "yes" | null;
            allowFullscreen: "no" | "yes" | null;
          }
        | {
            _key: string;
            _type: "videoHero";
            variant: "accent1" | "accent2" | "alt" | "brand" | "default" | null;
            badge?: string;
            title?: string;
            titleFont: "default" | "statement" | null;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            videoType: "mp4" | "youtube" | null;
            mp4File: string | null;
            youtubeUrl: string | null;
            posterImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Video Hero Poster";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            showControls: "no" | "yes" | null;
            autoplay: "no" | "yes" | null;
            loop: "no" | "yes" | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
      > | null;
    }
  | {
      _id: string;
      _type: "page";
      title: string | null;
      description: string | null;
      slug: string | null;
      pageBuilder: Array<
        | {
            _key: string;
            _type: "cta";
            eyebrow?: string;
            title?: string;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
        | {
            _key: string;
            _type: "cursosBlock";
            title: string | null;
            description: string | null;
            cursos: Array<{
              _id: string;
              _type: "cursos";
              title: string | null;
              description: RichText | null;
              slug: string | null;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                alt: string | "Image-Broken";
                _type: "image";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              fechasCapacitacion: Array<{
                nombre: string | null;
                profesor: "Abraham Medina" | "Patricio Barahona" | null;
                fecha: string | null;
                hora: string | null;
              }> | null;
            }> | null;
            displayMode: "grid" | "list" | null;
            showAllDates: false | true;
          }
        | {
            _key: string;
            _type: "doubleHero";
            variant:
              | "accent1"
              | "accent2"
              | "alt"
              | "brand"
              | "default"
              | "inset"
              | null;
            primaryBadge: string | null;
            primaryTitle: string | null;
            primaryRichText: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }> | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            primaryImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Primary Image";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            primaryButtons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              openInNewTab: boolean | null;
              href: string | null;
            }> | null;
            secondaryBadge: string | null;
            secondaryTitle: string | null;
            secondaryRichText: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }> | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            secondaryImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Secondary Image";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            secondaryButtons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              openInNewTab: boolean | null;
              href: string | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "faqAccordion";
            eyebrow?: string;
            title?: string;
            subtitle?: string;
            link: {
              title?: string;
              description?: string;
              url?: CustomUrl;
              openInNewTab: boolean | null;
              href: string | null;
            } | null;
            faqs: Array<{
              title: string | null;
              _id: string;
              _type: "faq";
              richText: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                          openInNewTab: boolean | null;
                          href: string | "#" | null;
                        }
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    _key: string;
                    _type: "button";
                    variant:
                      | "default"
                      | "link"
                      | "outline"
                      | "primary"
                      | "secondary"
                      | null;
                    text: string | null;
                    icon: "volvo-chevron-right" | "volvo-file-down" | null;
                    url?: {
                      type?: "external" | "file" | "internal";
                      internal?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blog";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blogIndex";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "buses";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "camiones";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "motoresPenta";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          };
                      external?: string;
                      file?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                        };
                        media?: unknown;
                        _type: "file";
                      };
                      openInNewTab?: boolean;
                    };
                    openInNewTab: boolean | null;
                    href: string | null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    caption?: string;
                    _type: "image";
                    _key: string;
                  }
              > | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "featureCardsIcon";
            eyebrow?: string;
            title?: string;
            richText?: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }>;
            cards?: Array<{
              icon?: IconPicker;
              title?: string;
              richText?: Array<{
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
                listItem?: "bullet" | "number";
                markDefs?: Array<{
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }>;
              _type: "featureCardIcon";
              _key: string;
            }>;
          }
        | {
            _key: string;
            _type: "featuredBlogs";
            title: string | null;
            subtitle: string | null;
            displayMode: "curated" | "latest" | null;
            blogCount: "1" | "2" | "3" | null;
            blogs: Array<{
              _type: "blog";
              _id: string;
              title: string | null;
              description: string | null;
              slug: string | null;
              richText: RichText | null;
              orderRank: string | null;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Image-Broken";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              publishedAt: string | null;
              authors: {
                _id: string;
                name: string | null;
                position: string | null;
                image: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Image-Broken";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
              } | null;
            }> | null;
            showViewAllButton: false | true;
            buttonText: string | null;
          }
        | {
            _key: string;
            _type: "formBlock";
            title: string | null;
            description: string | null;
            form: {
              _id: string;
              title: string | null;
              description: string | null;
              fields: Array<
                | {
                    label: string | null;
                    name: string | null;
                    type:
                      | "checkbox"
                      | "curso"
                      | "direccion"
                      | "email"
                      | "number"
                      | "radio"
                      | "rut"
                      | "select"
                      | "tel"
                      | "text"
                      | "textarea"
                      | null;
                    required: "no" | "yes" | null;
                    options: Array<string> | null;
                    placeholder: string | null;
                    courseReference: null;
                    selectedTrainingDate: null;
                  }
                | {
                    label: string | null;
                    name: string | null;
                    type:
                      | "checkbox"
                      | "curso"
                      | "direccion"
                      | "email"
                      | "number"
                      | "radio"
                      | "rut"
                      | "select"
                      | "tel"
                      | "text"
                      | "textarea"
                      | null;
                    required: "no" | "yes" | null;
                    options: Array<string> | null;
                    placeholder: string | null;
                  }
              > | null;
              emailRecipients: string | null;
              submitButtonText: string | null;
              successMessage: string | null;
              errorMessage: string | null;
            } | null;
            displayMode: "inline" | "modal" | null;
            triggerText: string | null;
            buttonPosition: "default" | "fixed" | null;
            variant: "centered" | "default" | "withBackground" | null;
          }
        | {
            _key: string;
            _type: "genericTable";
            title: string | null;
            description: string | null;
            columnCount: 3 | 4 | 5 | 6 | null;
            columnHeaders: Array<string> | null;
            rows: Array<{
              _key: string;
              cells: Array<
                | {
                    _key: string;
                    content: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant?:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary";
                          text?: string;
                          icon?: "volvo-chevron-right" | "volvo-file-down";
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          markDefs: null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                          markDefs: null;
                        }
                    > | null;
                    isLastColumn: boolean | null;
                  }
                | {
                    _key: string;
                    content: string | null;
                    isLastColumn: boolean | null;
                  }
              > | null;
            }> | null;
            variant: "bordered" | "compact" | "default" | "striped" | null;
          }
        | {
            _key: string;
            _type: "hero";
            variant: "accent1" | "accent2" | "alt" | "brand" | "default" | null;
            badge?: string;
            title?: string;
            titleFont: "default" | "statement" | null;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            image: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Image-Broken";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            imageAlignment: "default" | "fit" | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
        | {
            _key: string;
            _type: "highlightedAspects";
            title: string | null;
            description: string | null;
            aspects: Array<{
              _key: string;
              title: string | null;
              variant: "icon" | "image" | "none" | null;
              icon: null;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Aspect Image";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              content: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                          openInNewTab: boolean | null;
                          href: string | "#" | null;
                        }
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    _key: string;
                    _type: "button";
                    variant:
                      | "default"
                      | "link"
                      | "outline"
                      | "primary"
                      | "secondary"
                      | null;
                    text: string | null;
                    icon: "volvo-chevron-right" | "volvo-file-down" | null;
                    url?: {
                      type?: "external" | "file" | "internal";
                      internal?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blog";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blogIndex";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "buses";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "camiones";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "motoresPenta";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          };
                      external?: string;
                      file?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                        };
                        media?: unknown;
                        _type: "file";
                      };
                      openInNewTab?: boolean;
                    };
                    href: string | "#" | null;
                    openInNewTab: boolean | false;
                  }
              > | null;
            }> | null;
            columns: "2" | "3" | "4" | null;
          }
        | {
            _key: string;
            _type: "imageGallery";
            title: string | null;
            description: string | null;
            images: Array<{
              _key: string;
              _type: "galleryImage";
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Gallery Image";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              alt?: string;
              caption: string | null;
            }> | null;
            layout: "bento" | "carousel" | "grid" | "masonry" | null;
            columns: "2" | "3" | "4" | null;
            slidesPerRow: 1 | 2 | 3 | 4 | 5 | null;
          }
        | {
            _key: string;
            _type: "imageLinkCards";
            eyebrow?: string;
            title?: string;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
            cards: Array<{
              title?: string;
              description?: string;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Image-Broken";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              url?: CustomUrl;
              _type: "imageLinkCard";
              _key: string;
              openInNewTab: boolean | null;
              href: string | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "infoSection";
            title: string | null;
            headingLevel: "h1" | "h2" | "h3" | "h4" | null;
            content: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }> | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          }
        | {
            _key: string;
            _type: "mainHero";
            badge?: string;
            title?: string;
            titleFont: "default" | "statement" | null;
            layout: "default" | "fullImage" | null;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            backgroundType?: "image" | "video";
            backgroundImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Background Image";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            backgroundVideo: string | null;
            image: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Image-Broken";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
        | {
            _key: string;
            _type: "productListing";
            title?: string;
            productType?: "buses" | "camiones" | "motoresPenta";
            taxonomyFilter?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "skosConcept";
            };
          }
        | {
            _key: string;
            _type: "specificationsTable";
            title: string | null;
            description: string | null;
            specifications: Array<{
              _key: string;
              label: string | null;
              content: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                          openInNewTab: boolean | null;
                          href: string | "#" | null;
                        }
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    _key: string;
                    _type: "button";
                    variant?:
                      | "default"
                      | "link"
                      | "outline"
                      | "primary"
                      | "secondary";
                    text?: string;
                    icon?: "volvo-chevron-right" | "volvo-file-down";
                    url?: {
                      type?: "external" | "file" | "internal";
                      internal?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blog";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blogIndex";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "buses";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "camiones";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "motoresPenta";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          };
                      external?: string;
                      file?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                        };
                        media?: unknown;
                        _type: "file";
                      };
                      openInNewTab?: boolean;
                    };
                    markDefs: null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    caption?: string;
                    _type: "image";
                    _key: string;
                    markDefs: null;
                  }
              > | null;
            }> | null;
            variant: "bordered" | "compact" | "default" | "striped" | null;
          }
        | {
            _key: string;
            _type: "subscribeNewsletter";
            title?: string;
            subTitle: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            helperText: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          }
        | {
            _key: string;
            _type: "sucursalesSelector";
            title: string | null;
            description: string | null;
            showMap: boolean | null;
            showAllRegions: boolean | null;
            selectedRegions: Array<string> | null;
            variant: "cards" | "compact" | "default" | null;
          }
        | {
            _key: string;
            _type: "tabs";
            title: string | null;
            description: string | null;
            tabs: Array<{
              _key: string;
              label: string | null;
              content: Array<
                | {
                    eyebrow?: string;
                    title?: string;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    _type: "cta";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    cursos?: Array<{
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      _key: string;
                      [internalGroqTypeReferenceTo]?: "cursos";
                    }>;
                    displayMode?: "grid" | "list";
                    showAllDates?: "no" | "yes";
                    _type: "cursosBlock";
                    _key: string;
                  }
                | {
                    variant:
                      | "accent1"
                      | "accent2"
                      | "alt"
                      | "brand"
                      | "default"
                      | "inset"
                      | null;
                    primaryBadge: string | null;
                    primaryTitle: string | null;
                    primaryRichText: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "blockquote"
                        | "h1"
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<{
                        href?: string;
                        _type: "link";
                        _key: string;
                      }> | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    primaryImage: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Primary Image";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    primaryButtons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      openInNewTab: boolean | null;
                      href: string | null;
                    }> | null;
                    secondaryBadge: string | null;
                    secondaryTitle: string | null;
                    secondaryRichText: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "blockquote"
                        | "h1"
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<{
                        href?: string;
                        _type: "link";
                        _key: string;
                      }> | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    secondaryImage: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Secondary Image";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    secondaryButtons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      openInNewTab: boolean | null;
                      href: string | null;
                    }> | null;
                    _type: "doubleHero";
                    _key: string;
                  }
                | {
                    eyebrow?: string;
                    title?: string;
                    subtitle?: string;
                    link: {
                      title?: string;
                      description?: string;
                      url?: CustomUrl;
                      openInNewTab: boolean | null;
                      href: string | null;
                    } | null;
                    faqs: Array<{
                      title: string | null;
                      _id: string;
                      _type: "faq";
                      richText: Array<
                        | {
                            children?: Array<{
                              marks?: Array<string>;
                              text?: string;
                              _type: "span";
                              _key: string;
                            }>;
                            style?:
                              | "h2"
                              | "h3"
                              | "h4"
                              | "h5"
                              | "h6"
                              | "inline"
                              | "normal";
                            listItem?: "bullet" | "number";
                            markDefs: Array<
                              | {
                                  customLink?: CustomUrl;
                                  _type: "customLink";
                                  _key: string;
                                  openInNewTab: boolean | null;
                                  href: string | "#" | null;
                                }
                              | {
                                  customLink?: CustomUrl;
                                  _type: "customLink";
                                  _key: string;
                                }
                            > | null;
                            level?: number;
                            _type: "block";
                            _key: string;
                          }
                        | {
                            _key: string;
                            _type: "button";
                            variant:
                              | "default"
                              | "link"
                              | "outline"
                              | "primary"
                              | "secondary"
                              | null;
                            text: string | null;
                            icon:
                              | "volvo-chevron-right"
                              | "volvo-file-down"
                              | null;
                            url?: {
                              type?: "external" | "file" | "internal";
                              internal?:
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "blog";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "blogIndex";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "buses";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "camiones";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "motoresPenta";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "page";
                                  };
                              external?: string;
                              file?: {
                                asset?: {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                                };
                                media?: unknown;
                                _type: "file";
                              };
                              openInNewTab?: boolean;
                            };
                            openInNewTab: boolean | null;
                            href: string | null;
                          }
                        | {
                            asset?: {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                            };
                            media?: unknown;
                            hotspot?: SanityImageHotspot;
                            crop?: SanityImageCrop;
                            caption?: string;
                            _type: "image";
                            _key: string;
                          }
                      > | null;
                    }> | null;
                    _type: "faqAccordion";
                    _key: string;
                  }
                | {
                    eyebrow?: string;
                    title?: string;
                    richText?: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }>;
                    cards?: Array<{
                      icon?: IconPicker;
                      title?: string;
                      richText?: Array<{
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?:
                          | "h2"
                          | "h3"
                          | "h4"
                          | "h5"
                          | "h6"
                          | "inline"
                          | "normal";
                        listItem?: "bullet" | "number";
                        markDefs?: Array<{
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }>;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }>;
                      _type: "featureCardIcon";
                      _key: string;
                    }>;
                    _type: "featureCardsIcon";
                    _key: string;
                  }
                | {
                    title: string | null;
                    description: string | null;
                    form: {
                      _id: string;
                      title: string | null;
                      description: string | null;
                      fields: Array<
                        | {
                            label: string | null;
                            name: string | null;
                            type:
                              | "checkbox"
                              | "curso"
                              | "direccion"
                              | "email"
                              | "number"
                              | "radio"
                              | "rut"
                              | "select"
                              | "tel"
                              | "text"
                              | "textarea"
                              | null;
                            required: "no" | "yes" | null;
                            options: Array<string> | null;
                            placeholder: string | null;
                            courseReference: null;
                            selectedTrainingDate: null;
                          }
                        | {
                            label: string | null;
                            name: string | null;
                            type:
                              | "checkbox"
                              | "curso"
                              | "direccion"
                              | "email"
                              | "number"
                              | "radio"
                              | "rut"
                              | "select"
                              | "tel"
                              | "text"
                              | "textarea"
                              | null;
                            required: "no" | "yes" | null;
                            options: Array<string> | null;
                            placeholder: string | null;
                          }
                      > | null;
                      emailRecipients: string | null;
                      submitButtonText: string | null;
                      successMessage: string | null;
                      errorMessage: string | null;
                    } | null;
                    displayMode: "inline" | "modal" | null;
                    triggerText: string | null;
                    buttonPosition: "default" | "fixed" | null;
                    variant: "centered" | "default" | "withBackground" | null;
                    _type: "formBlock";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    columnCount?: 3 | 4 | 5 | 6;
                    columnHeaders?: Array<string>;
                    rows?: Array<{
                      cells?: Array<
                        | {
                            content?: string;
                            isLastColumn?: boolean;
                            _type: "cell";
                            _key: string;
                          }
                        | {
                            content?: Array<
                              | ({
                                  _key: string;
                                } & Button)
                              | {
                                  children?: Array<{
                                    marks?: Array<string>;
                                    text?: string;
                                    _type: "span";
                                    _key: string;
                                  }>;
                                  style?:
                                    | "h2"
                                    | "h3"
                                    | "h4"
                                    | "h5"
                                    | "h6"
                                    | "inline"
                                    | "normal";
                                  listItem?: "bullet" | "number";
                                  markDefs?: Array<{
                                    customLink?: CustomUrl;
                                    _type: "customLink";
                                    _key: string;
                                  }>;
                                  level?: number;
                                  _type: "block";
                                  _key: string;
                                }
                              | {
                                  asset?: {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                                  };
                                  media?: unknown;
                                  hotspot?: SanityImageHotspot;
                                  crop?: SanityImageCrop;
                                  caption?: string;
                                  _type: "image";
                                  _key: string;
                                }
                            >;
                            isLastColumn?: boolean;
                            _type: "richCell";
                            _key: string;
                          }
                      >;
                      _type: "row";
                      _key: string;
                    }>;
                    variant?: "bordered" | "compact" | "default" | "striped";
                    _type: "genericTable";
                    _key: string;
                  }
                | {
                    variant:
                      | "accent1"
                      | "accent2"
                      | "alt"
                      | "brand"
                      | "default"
                      | null;
                    badge?: string;
                    title?: string;
                    titleFont: "default" | "statement" | null;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    image: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Image-Broken";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    imageAlignment: "default" | "fit" | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    _type: "hero";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    aspects?: Array<{
                      title?: string;
                      variant?: "icon" | "image" | "none";
                      image?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        _type: "image";
                      };
                      content?: Array<
                        | ({
                            _key: string;
                          } & Button)
                        | {
                            children?: Array<{
                              marks?: Array<string>;
                              text?: string;
                              _type: "span";
                              _key: string;
                            }>;
                            style?:
                              | "h2"
                              | "h3"
                              | "h4"
                              | "h5"
                              | "h6"
                              | "inline"
                              | "normal";
                            listItem?: "bullet" | "number";
                            markDefs?: Array<{
                              customLink?: CustomUrl;
                              _type: "customLink";
                              _key: string;
                            }>;
                            level?: number;
                            _type: "block";
                            _key: string;
                          }
                      >;
                      _type: "aspect";
                      _key: string;
                    }>;
                    columns?: "2" | "3" | "4";
                    _type: "highlightedAspects";
                    _key: string;
                  }
                | {
                    title: string | null;
                    description: string | null;
                    images: Array<{
                      _key: string;
                      _type: "galleryImage";
                      image: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        _type: "image";
                        alt: string | "Gallery Image";
                        blurData: string | null;
                        dominantColor: string | null;
                      } | null;
                      alt?: string;
                      caption: string | null;
                    }> | null;
                    layout: "bento" | "carousel" | "grid" | "masonry" | null;
                    columns: "2" | "3" | "4" | null;
                    slidesPerRow: 1 | 2 | 3 | 4 | 5 | null;
                    _type: "imageGallery";
                    _key: string;
                  }
                | {
                    eyebrow?: string;
                    title?: string;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    cards: Array<{
                      title?: string;
                      description?: string;
                      image: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        _type: "image";
                        alt: string | "Image-Broken";
                        blurData: string | null;
                        dominantColor: string | null;
                      } | null;
                      url?: CustomUrl;
                      _type: "imageLinkCard";
                      _key: string;
                      openInNewTab: boolean | null;
                      href: string | null;
                    }> | null;
                    _type: "imageLinkCards";
                    _key: string;
                  }
                | {
                    badge?: string;
                    title?: string;
                    titleFont: "default" | "statement" | null;
                    layout: "default" | "fullImage" | null;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    backgroundType?: "image" | "video";
                    backgroundImage: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Background Image";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    backgroundVideo: string | null;
                    image: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Image-Broken";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    _type: "mainHero";
                    _key: string;
                  }
                | {
                    title?: string;
                    productType?: "buses" | "camiones" | "motoresPenta";
                    taxonomyFilter?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "skosConcept";
                    };
                    _type: "productListing";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    specifications?: Array<
                      {
                        _key: string;
                      } & SpecificationItem
                    >;
                    variant?: "bordered" | "compact" | "default" | "striped";
                    _type: "specificationsTable";
                    _key: string;
                  }
                | {
                    title?: string;
                    subTitle: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    helperText: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    _type: "subscribeNewsletter";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    showMap?: boolean;
                    showAllRegions?: boolean;
                    selectedRegions?: Array<string>;
                    variant?: "cards" | "compact" | "default";
                    _type: "sucursalesSelector";
                    _key: string;
                  }
                | {
                    richText?: Array<
                      | ({
                          _key: string;
                        } & Button)
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs?: Array<{
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }>;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    >;
                    _type: "textBlock";
                    _key: string;
                  }
                | {
                    title?: string;
                    videoType?: "mp4" | "youtube";
                    mp4File?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    youtubeUrl?: string;
                    posterImage?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                    };
                    showControls?: "no" | "yes";
                    autoplay?: "no" | "yes";
                    loop?: "no" | "yes";
                    allowFullscreen?: "no" | "yes";
                    _type: "videoBlock";
                    _key: string;
                  }
                | {
                    variant?:
                      | "accent1"
                      | "accent2"
                      | "alt"
                      | "brand"
                      | "default";
                    badge?: string;
                    title?: string;
                    titleFont?: "default" | "statement";
                    richText?: Array<
                      | ({
                          _key: string;
                        } & Button)
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs?: Array<{
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }>;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    >;
                    videoType?: "mp4" | "youtube";
                    mp4File?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    youtubeUrl?: string;
                    posterImage?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                    };
                    showControls?: "no" | "yes";
                    autoplay?: "no" | "yes";
                    loop?: "no" | "yes";
                    buttons?: Array<
                      {
                        _key: string;
                      } & Button
                    >;
                    _type: "videoHero";
                    _key: string;
                  }
              > | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "textBlock";
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
          }
        | {
            _key: string;
            _type: "videoBlock";
            title: string | null;
            videoType: "mp4" | "youtube" | null;
            mp4File: string | null;
            youtubeUrl: string | null;
            posterImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Video Poster";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            showControls: "no" | "yes" | null;
            autoplay: "no" | "yes" | null;
            loop: "no" | "yes" | null;
            allowFullscreen: "no" | "yes" | null;
          }
        | {
            _key: string;
            _type: "videoHero";
            variant: "accent1" | "accent2" | "alt" | "brand" | "default" | null;
            badge?: string;
            title?: string;
            titleFont: "default" | "statement" | null;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            videoType: "mp4" | "youtube" | null;
            mp4File: string | null;
            youtubeUrl: string | null;
            posterImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Video Hero Poster";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            showControls: "no" | "yes" | null;
            autoplay: "no" | "yes" | null;
            loop: "no" | "yes" | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
      > | null;
    }
  | null;
// Variable: queryBusesPaths
// Query: *[_type == "buses" && defined(slug.current)].slug.current
export type QueryBusesPathsResult = Array<string | null>;
// Variable: queryMotoresPentaData
// Query: *[_type == "motoresPenta"]{  _id,  _type,  title,  subtitle,  description,  "slug": slug.current,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },    richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },  "taxonomy": taxonomias->{    prefLabel,    conceptId,    "slug": lower(prefLabel)  }}
export type QueryMotoresPentaDataResult = Array<{
  _id: string;
  _type: "motoresPenta";
  title: string | null;
  subtitle: string | null;
  description: string | null;
  slug: string | null;
  image: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    alt: string | "Image-Broken";
    blurData: string | null;
    dominantColor: string | null;
  } | null;
  richText: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<
          | {
              customLink?: CustomUrl;
              _type: "customLink";
              _key: string;
              openInNewTab: boolean | null;
              href: string | "#" | null;
            }
          | {
              customLink?: CustomUrl;
              _type: "customLink";
              _key: string;
            }
        > | null;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        _key: string;
        _type: "button";
        variant:
          | "default"
          | "link"
          | "outline"
          | "primary"
          | "secondary"
          | null;
        text: string | null;
        icon: "volvo-chevron-right" | "volvo-file-down" | null;
        url?: {
          type?: "external" | "file" | "internal";
          internal?:
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "blog";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "blogIndex";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "buses";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "camiones";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "motoresPenta";
              }
            | {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "page";
              };
          external?: string;
          file?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
            };
            media?: unknown;
            _type: "file";
          };
          openInNewTab?: boolean;
        };
        openInNewTab: boolean | null;
        href: string | null;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        caption?: string;
        _type: "image";
        _key: string;
      }
  > | null;
  taxonomy: {
    prefLabel: string | null;
    conceptId: string | null;
    slug: string | null;
  } | null;
}>;
// Variable: queryMotorPentaOrPageBySlug
// Query: *[  (_type == "motoresPenta" || _type == "page")  && slug.current == $slug ][0]{  _id,  _type,  title,  subtitle,  description,  "slug": slug.current,  _type == "motoresPenta" => {       image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },     taxonomias->{      "label": prefLabel,      "slug": prefLabel,      "iri": "/motores-penta/" + lower(prefLabel)    }  },    pageBuilder[]{    ...,    _type,      _type == "cta" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },  },      _type == "mainHero" => {    ...,    titleFont,    layout,    "backgroundImage": backgroundImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    "backgroundVideo": backgroundVideo.asset->url,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "hero" => {    ...,    variant,    titleFont,    imageAlignment,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "doubleHero" => {    ...,    variant,    primaryBadge,    primaryTitle,    "primaryRichText": primaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "primaryImage": primaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    primaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    secondaryBadge,    secondaryTitle,    "secondaryRichText": secondaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "secondaryImage": secondaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    secondaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },      _type == "faqAccordion" => {    ...,      "faqs": array::compact(faqs[]->{    title,    _id,    _type,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  }),    link{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },      _type == "subscribeNewsletter" => {    ...,    "subTitle": subTitle[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "helperText": helperText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      _type == "imageLinkCards" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },    "cards": array::compact(cards[]{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      ),        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },    })  },      _type == "formBlock" => {    ...,    title,    description,    variant,    displayMode,    triggerText,    buttonPosition,    "form": form->{      _id,      title,      description,        fields[]{    label,    name,    type,    required,    options,    placeholder,    type == "curso" => {      courseReference->{        _id,        title,        "fechasCapacitacion": fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        }      },      selectedTrainingDate    }  },  emailRecipients,  submitButtonText,  successMessage,  errorMessage,      submitButtonText,      successMessage,      errorMessage    }  },      _type == "tabs" => {    ...,    title,    description,    tabs[]{      _key,      label,      content[]{        ...,        _type,        _key,          _type == "cta" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },  },          _type == "mainHero" => {    ...,    titleFont,    layout,    "backgroundImage": backgroundImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    "backgroundVideo": backgroundVideo.asset->url,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },          _type == "hero" => {    ...,    variant,    titleFont,    imageAlignment,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },          _type == "doubleHero" => {    ...,    variant,    primaryBadge,    primaryTitle,    "primaryRichText": primaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "primaryImage": primaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    primaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    secondaryBadge,    secondaryTitle,    "secondaryRichText": secondaryRichText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "secondaryImage": secondaryImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },    secondaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },          _type == "faqAccordion" => {    ...,      "faqs": array::compact(faqs[]->{    title,    _id,    _type,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  }),    link{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  },          _type == "subscribeNewsletter" => {    ...,    "subTitle": subTitle[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    },    "helperText": helperText[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },          _type == "imageLinkCards" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },    "cards": array::compact(cards[]{      ...,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      ),        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },    })  },          _type == "formBlock" => {    ...,    title,    description,    variant,    displayMode,    triggerText,    buttonPosition,    "form": form->{      _id,      title,      description,        fields[]{    label,    name,    type,    required,    options,    placeholder,    type == "curso" => {      courseReference->{        _id,        title,        "fechasCapacitacion": fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        }      },      selectedTrainingDate    }  },  emailRecipients,  submitButtonText,  successMessage,  errorMessage,      submitButtonText,      successMessage,      errorMessage    }  },          _type == "imageGallery" => {    ...,    title,    description,    layout,    columns,    slidesPerRow,    "images": images[]{      ...,      "image": image{        ...,        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background,      },      caption    }  },          _type == "featuredBlogs" => {    ...,    title,    subtitle,    displayMode,    blogCount,    buttonText,    "showViewAllButton": showViewAllButton == "yes",    "blogs": select(      displayMode == "curated" => blogs[]-> {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      },      displayMode == "latest" => *[        _type == "blog"         && (seoHideFromLists != true)      ] | order(publishedAt desc, _createdAt desc)[0...3] {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      }    )  },        _type == "tabs" => {          ...,          title,          description,          tabs[]{            _key,            label,            content[]{               ...,              _type,              _key            }          }        }      }    }  },      _type == "infoSection" => {    ...,    title,    headingLevel,    content[]{      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  },      _type == "imageGallery" => {    ...,    title,    description,    layout,    columns,    slidesPerRow,    "images": images[]{      ...,      "image": image{        ...,        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background,      },      caption    }  },      _type == "specificationsTable" => {    ...,    title,    description,    variant,    "specifications": specifications[]{      _key,      label,      "content": content[]{        ...,          markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }      }    }  },      _type == "genericTable" => {    ...,    title,    description,    columnCount,    columnHeaders,    rows[]{      _key,      cells[]{        _key,        content,        isLastColumn,        _type == "richCell" => {          content[]{            ...,              markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }          }        }      }    },    variant  },      _type == "featuredBlogs" => {    ...,    title,    subtitle,    displayMode,    blogCount,    buttonText,    "showViewAllButton": showViewAllButton == "yes",    "blogs": select(      displayMode == "curated" => blogs[]-> {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      },      displayMode == "latest" => *[        _type == "blog"         && (seoHideFromLists != true)      ] | order(publishedAt desc, _createdAt desc)[0...3] {          _type,  _id,  title,  description,  "slug":slug.current,  richText,  orderRank,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  publishedAt,    authors[0]->{    _id,    name,    position,      image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }  }      }    )  },      _type == "highlightedAspects" => {    title,    description,    columns,    aspects[]{      _key,      title,      variant,      icon,      image{        ...,        "alt": coalesce(asset->altText, asset->originalFilename, "Aspect Image"),        "blurData": asset->metadata.lqip,        "dominantColor": asset->metadata.palette.dominant.background      },      content[]{        ...,        _type == "button" => {          ...,          text,          variant,          icon,            "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)        },        _type == "block" => {          ...,            markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }        }      }    }  },      _type == "videoBlock" => {    ...,    _key,    _type,    title,    videoType,    "mp4File": coalesce(      mp4File.asset->url,      mp4File.asset->sources[0].url,      null    ),    youtubeUrl,    showControls,    autoplay,    loop,    allowFullscreen,    "posterImage": posterImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Video Poster"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    }  },      _type == "videoHero" => {    ...,    variant,    titleFont,    videoType,    "mp4File": coalesce(      mp4File.asset->url,      mp4File.asset->sources[0].url,      null    ),    youtubeUrl,    showControls,    autoplay,    loop,    "posterImage": posterImage{      ...,      "alt": coalesce(asset->altText, asset->originalFilename, "Video Hero Poster"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background,    },      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  },      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "textBlock" => {    ...,      richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }  },      _type == "sucursalesSelector" => {    ...,    title,    description,    showMap,    showAllRegions,    selectedRegions,    variant  },      _type == "cursosBlock" => {    ...,    title,    description,    displayMode,    "showAllDates": showAllDates == "yes",    "cursos": cursos[]-> {      _id,      _type,      title,      description,      "slug": slug.current,        image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },      "fechasCapacitacion": select(        ^.showAllDates == "yes" => fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        } | order(fecha asc),        fechasCapacitacion[fecha > now()]{          nombre,          profesor,          fecha,          hora        } | order(fecha asc)      )    }  }  } }
export type QueryMotorPentaOrPageBySlugResult =
  | {
      _id: string;
      _type: "motoresPenta";
      title: string | null;
      subtitle: string | null;
      description: string | null;
      slug: string | null;
      image: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        alt: string | "Image-Broken";
        blurData: string | null;
        dominantColor: string | null;
      } | null;
      richText: Array<
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
            listItem?: "bullet" | "number";
            markDefs: Array<
              | {
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                  openInNewTab: boolean | null;
                  href: string | "#" | null;
                }
              | {
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }
            > | null;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            _key: string;
            _type: "button";
            variant:
              | "default"
              | "link"
              | "outline"
              | "primary"
              | "secondary"
              | null;
            text: string | null;
            icon: "volvo-chevron-right" | "volvo-file-down" | null;
            url?: {
              type?: "external" | "file" | "internal";
              internal?:
                | {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "blog";
                  }
                | {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "blogIndex";
                  }
                | {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "buses";
                  }
                | {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "camiones";
                  }
                | {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "motoresPenta";
                  }
                | {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "page";
                  };
              external?: string;
              file?: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                };
                media?: unknown;
                _type: "file";
              };
              openInNewTab?: boolean;
            };
            openInNewTab: boolean | null;
            href: string | null;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            caption?: string;
            _type: "image";
            _key: string;
          }
      > | null;
      taxonomias: {
        label: string | null;
        slug: string | null;
        iri: string | null;
      } | null;
      pageBuilder: Array<
        | {
            _key: string;
            _type: "cta";
            eyebrow?: string;
            title?: string;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
        | {
            _key: string;
            _type: "cursosBlock";
            title: string | null;
            description: string | null;
            cursos: Array<{
              _id: string;
              _type: "cursos";
              title: string | null;
              description: RichText | null;
              slug: string | null;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                alt: string | "Image-Broken";
                _type: "image";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              fechasCapacitacion: Array<{
                nombre: string | null;
                profesor: "Abraham Medina" | "Patricio Barahona" | null;
                fecha: string | null;
                hora: string | null;
              }> | null;
            }> | null;
            displayMode: "grid" | "list" | null;
            showAllDates: false | true;
          }
        | {
            _key: string;
            _type: "doubleHero";
            variant:
              | "accent1"
              | "accent2"
              | "alt"
              | "brand"
              | "default"
              | "inset"
              | null;
            primaryBadge: string | null;
            primaryTitle: string | null;
            primaryRichText: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }> | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            primaryImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Primary Image";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            primaryButtons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              openInNewTab: boolean | null;
              href: string | null;
            }> | null;
            secondaryBadge: string | null;
            secondaryTitle: string | null;
            secondaryRichText: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }> | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            secondaryImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Secondary Image";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            secondaryButtons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              openInNewTab: boolean | null;
              href: string | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "faqAccordion";
            eyebrow?: string;
            title?: string;
            subtitle?: string;
            link: {
              title?: string;
              description?: string;
              url?: CustomUrl;
              openInNewTab: boolean | null;
              href: string | null;
            } | null;
            faqs: Array<{
              title: string | null;
              _id: string;
              _type: "faq";
              richText: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                          openInNewTab: boolean | null;
                          href: string | "#" | null;
                        }
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    _key: string;
                    _type: "button";
                    variant:
                      | "default"
                      | "link"
                      | "outline"
                      | "primary"
                      | "secondary"
                      | null;
                    text: string | null;
                    icon: "volvo-chevron-right" | "volvo-file-down" | null;
                    url?: {
                      type?: "external" | "file" | "internal";
                      internal?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blog";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blogIndex";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "buses";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "camiones";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "motoresPenta";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          };
                      external?: string;
                      file?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                        };
                        media?: unknown;
                        _type: "file";
                      };
                      openInNewTab?: boolean;
                    };
                    openInNewTab: boolean | null;
                    href: string | null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    caption?: string;
                    _type: "image";
                    _key: string;
                  }
              > | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "featureCardsIcon";
            eyebrow?: string;
            title?: string;
            richText?: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }>;
            cards?: Array<{
              icon?: IconPicker;
              title?: string;
              richText?: Array<{
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
                listItem?: "bullet" | "number";
                markDefs?: Array<{
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }>;
              _type: "featureCardIcon";
              _key: string;
            }>;
          }
        | {
            _key: string;
            _type: "featuredBlogs";
            title: string | null;
            subtitle: string | null;
            displayMode: "curated" | "latest" | null;
            blogCount: "1" | "2" | "3" | null;
            blogs: Array<{
              _type: "blog";
              _id: string;
              title: string | null;
              description: string | null;
              slug: string | null;
              richText: RichText | null;
              orderRank: string | null;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Image-Broken";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              publishedAt: string | null;
              authors: {
                _id: string;
                name: string | null;
                position: string | null;
                image: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Image-Broken";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
              } | null;
            }> | null;
            showViewAllButton: false | true;
            buttonText: string | null;
          }
        | {
            _key: string;
            _type: "formBlock";
            title: string | null;
            description: string | null;
            form: {
              _id: string;
              title: string | null;
              description: string | null;
              fields: Array<
                | {
                    label: string | null;
                    name: string | null;
                    type:
                      | "checkbox"
                      | "curso"
                      | "direccion"
                      | "email"
                      | "number"
                      | "radio"
                      | "rut"
                      | "select"
                      | "tel"
                      | "text"
                      | "textarea"
                      | null;
                    required: "no" | "yes" | null;
                    options: Array<string> | null;
                    placeholder: string | null;
                    courseReference: null;
                    selectedTrainingDate: null;
                  }
                | {
                    label: string | null;
                    name: string | null;
                    type:
                      | "checkbox"
                      | "curso"
                      | "direccion"
                      | "email"
                      | "number"
                      | "radio"
                      | "rut"
                      | "select"
                      | "tel"
                      | "text"
                      | "textarea"
                      | null;
                    required: "no" | "yes" | null;
                    options: Array<string> | null;
                    placeholder: string | null;
                  }
              > | null;
              emailRecipients: string | null;
              submitButtonText: string | null;
              successMessage: string | null;
              errorMessage: string | null;
            } | null;
            displayMode: "inline" | "modal" | null;
            triggerText: string | null;
            buttonPosition: "default" | "fixed" | null;
            variant: "centered" | "default" | "withBackground" | null;
          }
        | {
            _key: string;
            _type: "genericTable";
            title: string | null;
            description: string | null;
            columnCount: 3 | 4 | 5 | 6 | null;
            columnHeaders: Array<string> | null;
            rows: Array<{
              _key: string;
              cells: Array<
                | {
                    _key: string;
                    content: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant?:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary";
                          text?: string;
                          icon?: "volvo-chevron-right" | "volvo-file-down";
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          markDefs: null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                          markDefs: null;
                        }
                    > | null;
                    isLastColumn: boolean | null;
                  }
                | {
                    _key: string;
                    content: string | null;
                    isLastColumn: boolean | null;
                  }
              > | null;
            }> | null;
            variant: "bordered" | "compact" | "default" | "striped" | null;
          }
        | {
            _key: string;
            _type: "hero";
            variant: "accent1" | "accent2" | "alt" | "brand" | "default" | null;
            badge?: string;
            title?: string;
            titleFont: "default" | "statement" | null;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            image: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Image-Broken";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            imageAlignment: "default" | "fit" | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
        | {
            _key: string;
            _type: "highlightedAspects";
            title: string | null;
            description: string | null;
            aspects: Array<{
              _key: string;
              title: string | null;
              variant: "icon" | "image" | "none" | null;
              icon: null;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Aspect Image";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              content: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                          openInNewTab: boolean | null;
                          href: string | "#" | null;
                        }
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    _key: string;
                    _type: "button";
                    variant:
                      | "default"
                      | "link"
                      | "outline"
                      | "primary"
                      | "secondary"
                      | null;
                    text: string | null;
                    icon: "volvo-chevron-right" | "volvo-file-down" | null;
                    url?: {
                      type?: "external" | "file" | "internal";
                      internal?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blog";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blogIndex";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "buses";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "camiones";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "motoresPenta";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          };
                      external?: string;
                      file?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                        };
                        media?: unknown;
                        _type: "file";
                      };
                      openInNewTab?: boolean;
                    };
                    href: string | "#" | null;
                    openInNewTab: boolean | false;
                  }
              > | null;
            }> | null;
            columns: "2" | "3" | "4" | null;
          }
        | {
            _key: string;
            _type: "imageGallery";
            title: string | null;
            description: string | null;
            images: Array<{
              _key: string;
              _type: "galleryImage";
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Gallery Image";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              alt?: string;
              caption: string | null;
            }> | null;
            layout: "bento" | "carousel" | "grid" | "masonry" | null;
            columns: "2" | "3" | "4" | null;
            slidesPerRow: 1 | 2 | 3 | 4 | 5 | null;
          }
        | {
            _key: string;
            _type: "imageLinkCards";
            eyebrow?: string;
            title?: string;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
            cards: Array<{
              title?: string;
              description?: string;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Image-Broken";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              url?: CustomUrl;
              _type: "imageLinkCard";
              _key: string;
              openInNewTab: boolean | null;
              href: string | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "infoSection";
            title: string | null;
            headingLevel: "h1" | "h2" | "h3" | "h4" | null;
            content: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }> | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          }
        | {
            _key: string;
            _type: "mainHero";
            badge?: string;
            title?: string;
            titleFont: "default" | "statement" | null;
            layout: "default" | "fullImage" | null;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            backgroundType?: "image" | "video";
            backgroundImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Background Image";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            backgroundVideo: string | null;
            image: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Image-Broken";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
        | {
            _key: string;
            _type: "productListing";
            title?: string;
            productType?: "buses" | "camiones" | "motoresPenta";
            taxonomyFilter?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "skosConcept";
            };
          }
        | {
            _key: string;
            _type: "specificationsTable";
            title: string | null;
            description: string | null;
            specifications: Array<{
              _key: string;
              label: string | null;
              content: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                          openInNewTab: boolean | null;
                          href: string | "#" | null;
                        }
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    _key: string;
                    _type: "button";
                    variant?:
                      | "default"
                      | "link"
                      | "outline"
                      | "primary"
                      | "secondary";
                    text?: string;
                    icon?: "volvo-chevron-right" | "volvo-file-down";
                    url?: {
                      type?: "external" | "file" | "internal";
                      internal?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blog";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blogIndex";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "buses";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "camiones";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "motoresPenta";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          };
                      external?: string;
                      file?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                        };
                        media?: unknown;
                        _type: "file";
                      };
                      openInNewTab?: boolean;
                    };
                    markDefs: null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    caption?: string;
                    _type: "image";
                    _key: string;
                    markDefs: null;
                  }
              > | null;
            }> | null;
            variant: "bordered" | "compact" | "default" | "striped" | null;
          }
        | {
            _key: string;
            _type: "subscribeNewsletter";
            title?: string;
            subTitle: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            helperText: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          }
        | {
            _key: string;
            _type: "sucursalesSelector";
            title: string | null;
            description: string | null;
            showMap: boolean | null;
            showAllRegions: boolean | null;
            selectedRegions: Array<string> | null;
            variant: "cards" | "compact" | "default" | null;
          }
        | {
            _key: string;
            _type: "tabs";
            title: string | null;
            description: string | null;
            tabs: Array<{
              _key: string;
              label: string | null;
              content: Array<
                | {
                    eyebrow?: string;
                    title?: string;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    _type: "cta";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    cursos?: Array<{
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      _key: string;
                      [internalGroqTypeReferenceTo]?: "cursos";
                    }>;
                    displayMode?: "grid" | "list";
                    showAllDates?: "no" | "yes";
                    _type: "cursosBlock";
                    _key: string;
                  }
                | {
                    variant:
                      | "accent1"
                      | "accent2"
                      | "alt"
                      | "brand"
                      | "default"
                      | "inset"
                      | null;
                    primaryBadge: string | null;
                    primaryTitle: string | null;
                    primaryRichText: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "blockquote"
                        | "h1"
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<{
                        href?: string;
                        _type: "link";
                        _key: string;
                      }> | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    primaryImage: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Primary Image";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    primaryButtons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      openInNewTab: boolean | null;
                      href: string | null;
                    }> | null;
                    secondaryBadge: string | null;
                    secondaryTitle: string | null;
                    secondaryRichText: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "blockquote"
                        | "h1"
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<{
                        href?: string;
                        _type: "link";
                        _key: string;
                      }> | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    secondaryImage: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Secondary Image";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    secondaryButtons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      openInNewTab: boolean | null;
                      href: string | null;
                    }> | null;
                    _type: "doubleHero";
                    _key: string;
                  }
                | {
                    eyebrow?: string;
                    title?: string;
                    subtitle?: string;
                    link: {
                      title?: string;
                      description?: string;
                      url?: CustomUrl;
                      openInNewTab: boolean | null;
                      href: string | null;
                    } | null;
                    faqs: Array<{
                      title: string | null;
                      _id: string;
                      _type: "faq";
                      richText: Array<
                        | {
                            children?: Array<{
                              marks?: Array<string>;
                              text?: string;
                              _type: "span";
                              _key: string;
                            }>;
                            style?:
                              | "h2"
                              | "h3"
                              | "h4"
                              | "h5"
                              | "h6"
                              | "inline"
                              | "normal";
                            listItem?: "bullet" | "number";
                            markDefs: Array<
                              | {
                                  customLink?: CustomUrl;
                                  _type: "customLink";
                                  _key: string;
                                  openInNewTab: boolean | null;
                                  href: string | "#" | null;
                                }
                              | {
                                  customLink?: CustomUrl;
                                  _type: "customLink";
                                  _key: string;
                                }
                            > | null;
                            level?: number;
                            _type: "block";
                            _key: string;
                          }
                        | {
                            _key: string;
                            _type: "button";
                            variant:
                              | "default"
                              | "link"
                              | "outline"
                              | "primary"
                              | "secondary"
                              | null;
                            text: string | null;
                            icon:
                              | "volvo-chevron-right"
                              | "volvo-file-down"
                              | null;
                            url?: {
                              type?: "external" | "file" | "internal";
                              internal?:
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "blog";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "blogIndex";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "buses";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "camiones";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "motoresPenta";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "page";
                                  };
                              external?: string;
                              file?: {
                                asset?: {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                                };
                                media?: unknown;
                                _type: "file";
                              };
                              openInNewTab?: boolean;
                            };
                            openInNewTab: boolean | null;
                            href: string | null;
                          }
                        | {
                            asset?: {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                            };
                            media?: unknown;
                            hotspot?: SanityImageHotspot;
                            crop?: SanityImageCrop;
                            caption?: string;
                            _type: "image";
                            _key: string;
                          }
                      > | null;
                    }> | null;
                    _type: "faqAccordion";
                    _key: string;
                  }
                | {
                    eyebrow?: string;
                    title?: string;
                    richText?: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }>;
                    cards?: Array<{
                      icon?: IconPicker;
                      title?: string;
                      richText?: Array<{
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?:
                          | "h2"
                          | "h3"
                          | "h4"
                          | "h5"
                          | "h6"
                          | "inline"
                          | "normal";
                        listItem?: "bullet" | "number";
                        markDefs?: Array<{
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }>;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }>;
                      _type: "featureCardIcon";
                      _key: string;
                    }>;
                    _type: "featureCardsIcon";
                    _key: string;
                  }
                | {
                    title: string | null;
                    description: string | null;
                    form: {
                      _id: string;
                      title: string | null;
                      description: string | null;
                      fields: Array<
                        | {
                            label: string | null;
                            name: string | null;
                            type:
                              | "checkbox"
                              | "curso"
                              | "direccion"
                              | "email"
                              | "number"
                              | "radio"
                              | "rut"
                              | "select"
                              | "tel"
                              | "text"
                              | "textarea"
                              | null;
                            required: "no" | "yes" | null;
                            options: Array<string> | null;
                            placeholder: string | null;
                            courseReference: null;
                            selectedTrainingDate: null;
                          }
                        | {
                            label: string | null;
                            name: string | null;
                            type:
                              | "checkbox"
                              | "curso"
                              | "direccion"
                              | "email"
                              | "number"
                              | "radio"
                              | "rut"
                              | "select"
                              | "tel"
                              | "text"
                              | "textarea"
                              | null;
                            required: "no" | "yes" | null;
                            options: Array<string> | null;
                            placeholder: string | null;
                          }
                      > | null;
                      emailRecipients: string | null;
                      submitButtonText: string | null;
                      successMessage: string | null;
                      errorMessage: string | null;
                    } | null;
                    displayMode: "inline" | "modal" | null;
                    triggerText: string | null;
                    buttonPosition: "default" | "fixed" | null;
                    variant: "centered" | "default" | "withBackground" | null;
                    _type: "formBlock";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    columnCount?: 3 | 4 | 5 | 6;
                    columnHeaders?: Array<string>;
                    rows?: Array<{
                      cells?: Array<
                        | {
                            content?: string;
                            isLastColumn?: boolean;
                            _type: "cell";
                            _key: string;
                          }
                        | {
                            content?: Array<
                              | ({
                                  _key: string;
                                } & Button)
                              | {
                                  children?: Array<{
                                    marks?: Array<string>;
                                    text?: string;
                                    _type: "span";
                                    _key: string;
                                  }>;
                                  style?:
                                    | "h2"
                                    | "h3"
                                    | "h4"
                                    | "h5"
                                    | "h6"
                                    | "inline"
                                    | "normal";
                                  listItem?: "bullet" | "number";
                                  markDefs?: Array<{
                                    customLink?: CustomUrl;
                                    _type: "customLink";
                                    _key: string;
                                  }>;
                                  level?: number;
                                  _type: "block";
                                  _key: string;
                                }
                              | {
                                  asset?: {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                                  };
                                  media?: unknown;
                                  hotspot?: SanityImageHotspot;
                                  crop?: SanityImageCrop;
                                  caption?: string;
                                  _type: "image";
                                  _key: string;
                                }
                            >;
                            isLastColumn?: boolean;
                            _type: "richCell";
                            _key: string;
                          }
                      >;
                      _type: "row";
                      _key: string;
                    }>;
                    variant?: "bordered" | "compact" | "default" | "striped";
                    _type: "genericTable";
                    _key: string;
                  }
                | {
                    variant:
                      | "accent1"
                      | "accent2"
                      | "alt"
                      | "brand"
                      | "default"
                      | null;
                    badge?: string;
                    title?: string;
                    titleFont: "default" | "statement" | null;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    image: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Image-Broken";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    imageAlignment: "default" | "fit" | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    _type: "hero";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    aspects?: Array<{
                      title?: string;
                      variant?: "icon" | "image" | "none";
                      image?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        _type: "image";
                      };
                      content?: Array<
                        | ({
                            _key: string;
                          } & Button)
                        | {
                            children?: Array<{
                              marks?: Array<string>;
                              text?: string;
                              _type: "span";
                              _key: string;
                            }>;
                            style?:
                              | "h2"
                              | "h3"
                              | "h4"
                              | "h5"
                              | "h6"
                              | "inline"
                              | "normal";
                            listItem?: "bullet" | "number";
                            markDefs?: Array<{
                              customLink?: CustomUrl;
                              _type: "customLink";
                              _key: string;
                            }>;
                            level?: number;
                            _type: "block";
                            _key: string;
                          }
                      >;
                      _type: "aspect";
                      _key: string;
                    }>;
                    columns?: "2" | "3" | "4";
                    _type: "highlightedAspects";
                    _key: string;
                  }
                | {
                    title: string | null;
                    description: string | null;
                    images: Array<{
                      _key: string;
                      _type: "galleryImage";
                      image: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        _type: "image";
                        alt: string | "Gallery Image";
                        blurData: string | null;
                        dominantColor: string | null;
                      } | null;
                      alt?: string;
                      caption: string | null;
                    }> | null;
                    layout: "bento" | "carousel" | "grid" | "masonry" | null;
                    columns: "2" | "3" | "4" | null;
                    slidesPerRow: 1 | 2 | 3 | 4 | 5 | null;
                    _type: "imageGallery";
                    _key: string;
                  }
                | {
                    eyebrow?: string;
                    title?: string;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    cards: Array<{
                      title?: string;
                      description?: string;
                      image: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        _type: "image";
                        alt: string | "Image-Broken";
                        blurData: string | null;
                        dominantColor: string | null;
                      } | null;
                      url?: CustomUrl;
                      _type: "imageLinkCard";
                      _key: string;
                      openInNewTab: boolean | null;
                      href: string | null;
                    }> | null;
                    _type: "imageLinkCards";
                    _key: string;
                  }
                | {
                    badge?: string;
                    title?: string;
                    titleFont: "default" | "statement" | null;
                    layout: "default" | "fullImage" | null;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    backgroundType?: "image" | "video";
                    backgroundImage: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Background Image";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    backgroundVideo: string | null;
                    image: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Image-Broken";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    _type: "mainHero";
                    _key: string;
                  }
                | {
                    title?: string;
                    productType?: "buses" | "camiones" | "motoresPenta";
                    taxonomyFilter?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "skosConcept";
                    };
                    _type: "productListing";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    specifications?: Array<
                      {
                        _key: string;
                      } & SpecificationItem
                    >;
                    variant?: "bordered" | "compact" | "default" | "striped";
                    _type: "specificationsTable";
                    _key: string;
                  }
                | {
                    title?: string;
                    subTitle: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    helperText: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    _type: "subscribeNewsletter";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    showMap?: boolean;
                    showAllRegions?: boolean;
                    selectedRegions?: Array<string>;
                    variant?: "cards" | "compact" | "default";
                    _type: "sucursalesSelector";
                    _key: string;
                  }
                | {
                    richText?: Array<
                      | ({
                          _key: string;
                        } & Button)
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs?: Array<{
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }>;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    >;
                    _type: "textBlock";
                    _key: string;
                  }
                | {
                    title?: string;
                    videoType?: "mp4" | "youtube";
                    mp4File?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    youtubeUrl?: string;
                    posterImage?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                    };
                    showControls?: "no" | "yes";
                    autoplay?: "no" | "yes";
                    loop?: "no" | "yes";
                    allowFullscreen?: "no" | "yes";
                    _type: "videoBlock";
                    _key: string;
                  }
                | {
                    variant?:
                      | "accent1"
                      | "accent2"
                      | "alt"
                      | "brand"
                      | "default";
                    badge?: string;
                    title?: string;
                    titleFont?: "default" | "statement";
                    richText?: Array<
                      | ({
                          _key: string;
                        } & Button)
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs?: Array<{
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }>;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    >;
                    videoType?: "mp4" | "youtube";
                    mp4File?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    youtubeUrl?: string;
                    posterImage?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                    };
                    showControls?: "no" | "yes";
                    autoplay?: "no" | "yes";
                    loop?: "no" | "yes";
                    buttons?: Array<
                      {
                        _key: string;
                      } & Button
                    >;
                    _type: "videoHero";
                    _key: string;
                  }
              > | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "textBlock";
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
          }
        | {
            _key: string;
            _type: "videoBlock";
            title: string | null;
            videoType: "mp4" | "youtube" | null;
            mp4File: string | null;
            youtubeUrl: string | null;
            posterImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Video Poster";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            showControls: "no" | "yes" | null;
            autoplay: "no" | "yes" | null;
            loop: "no" | "yes" | null;
            allowFullscreen: "no" | "yes" | null;
          }
        | {
            _key: string;
            _type: "videoHero";
            variant: "accent1" | "accent2" | "alt" | "brand" | "default" | null;
            badge?: string;
            title?: string;
            titleFont: "default" | "statement" | null;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            videoType: "mp4" | "youtube" | null;
            mp4File: string | null;
            youtubeUrl: string | null;
            posterImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Video Hero Poster";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            showControls: "no" | "yes" | null;
            autoplay: "no" | "yes" | null;
            loop: "no" | "yes" | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
      > | null;
    }
  | {
      _id: string;
      _type: "page";
      title: string | null;
      subtitle: null;
      description: string | null;
      slug: string | null;
      pageBuilder: Array<
        | {
            _key: string;
            _type: "cta";
            eyebrow?: string;
            title?: string;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
        | {
            _key: string;
            _type: "cursosBlock";
            title: string | null;
            description: string | null;
            cursos: Array<{
              _id: string;
              _type: "cursos";
              title: string | null;
              description: RichText | null;
              slug: string | null;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                alt: string | "Image-Broken";
                _type: "image";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              fechasCapacitacion: Array<{
                nombre: string | null;
                profesor: "Abraham Medina" | "Patricio Barahona" | null;
                fecha: string | null;
                hora: string | null;
              }> | null;
            }> | null;
            displayMode: "grid" | "list" | null;
            showAllDates: false | true;
          }
        | {
            _key: string;
            _type: "doubleHero";
            variant:
              | "accent1"
              | "accent2"
              | "alt"
              | "brand"
              | "default"
              | "inset"
              | null;
            primaryBadge: string | null;
            primaryTitle: string | null;
            primaryRichText: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }> | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            primaryImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Primary Image";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            primaryButtons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              openInNewTab: boolean | null;
              href: string | null;
            }> | null;
            secondaryBadge: string | null;
            secondaryTitle: string | null;
            secondaryRichText: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }> | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            secondaryImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Secondary Image";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            secondaryButtons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              openInNewTab: boolean | null;
              href: string | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "faqAccordion";
            eyebrow?: string;
            title?: string;
            subtitle?: string;
            link: {
              title?: string;
              description?: string;
              url?: CustomUrl;
              openInNewTab: boolean | null;
              href: string | null;
            } | null;
            faqs: Array<{
              title: string | null;
              _id: string;
              _type: "faq";
              richText: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                          openInNewTab: boolean | null;
                          href: string | "#" | null;
                        }
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    _key: string;
                    _type: "button";
                    variant:
                      | "default"
                      | "link"
                      | "outline"
                      | "primary"
                      | "secondary"
                      | null;
                    text: string | null;
                    icon: "volvo-chevron-right" | "volvo-file-down" | null;
                    url?: {
                      type?: "external" | "file" | "internal";
                      internal?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blog";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blogIndex";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "buses";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "camiones";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "motoresPenta";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          };
                      external?: string;
                      file?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                        };
                        media?: unknown;
                        _type: "file";
                      };
                      openInNewTab?: boolean;
                    };
                    openInNewTab: boolean | null;
                    href: string | null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    caption?: string;
                    _type: "image";
                    _key: string;
                  }
              > | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "featureCardsIcon";
            eyebrow?: string;
            title?: string;
            richText?: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }>;
            cards?: Array<{
              icon?: IconPicker;
              title?: string;
              richText?: Array<{
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
                listItem?: "bullet" | "number";
                markDefs?: Array<{
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }>;
              _type: "featureCardIcon";
              _key: string;
            }>;
          }
        | {
            _key: string;
            _type: "featuredBlogs";
            title: string | null;
            subtitle: string | null;
            displayMode: "curated" | "latest" | null;
            blogCount: "1" | "2" | "3" | null;
            blogs: Array<{
              _type: "blog";
              _id: string;
              title: string | null;
              description: string | null;
              slug: string | null;
              richText: RichText | null;
              orderRank: string | null;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Image-Broken";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              publishedAt: string | null;
              authors: {
                _id: string;
                name: string | null;
                position: string | null;
                image: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                  alt: string | "Image-Broken";
                  blurData: string | null;
                  dominantColor: string | null;
                } | null;
              } | null;
            }> | null;
            showViewAllButton: false | true;
            buttonText: string | null;
          }
        | {
            _key: string;
            _type: "formBlock";
            title: string | null;
            description: string | null;
            form: {
              _id: string;
              title: string | null;
              description: string | null;
              fields: Array<
                | {
                    label: string | null;
                    name: string | null;
                    type:
                      | "checkbox"
                      | "curso"
                      | "direccion"
                      | "email"
                      | "number"
                      | "radio"
                      | "rut"
                      | "select"
                      | "tel"
                      | "text"
                      | "textarea"
                      | null;
                    required: "no" | "yes" | null;
                    options: Array<string> | null;
                    placeholder: string | null;
                    courseReference: null;
                    selectedTrainingDate: null;
                  }
                | {
                    label: string | null;
                    name: string | null;
                    type:
                      | "checkbox"
                      | "curso"
                      | "direccion"
                      | "email"
                      | "number"
                      | "radio"
                      | "rut"
                      | "select"
                      | "tel"
                      | "text"
                      | "textarea"
                      | null;
                    required: "no" | "yes" | null;
                    options: Array<string> | null;
                    placeholder: string | null;
                  }
              > | null;
              emailRecipients: string | null;
              submitButtonText: string | null;
              successMessage: string | null;
              errorMessage: string | null;
            } | null;
            displayMode: "inline" | "modal" | null;
            triggerText: string | null;
            buttonPosition: "default" | "fixed" | null;
            variant: "centered" | "default" | "withBackground" | null;
          }
        | {
            _key: string;
            _type: "genericTable";
            title: string | null;
            description: string | null;
            columnCount: 3 | 4 | 5 | 6 | null;
            columnHeaders: Array<string> | null;
            rows: Array<{
              _key: string;
              cells: Array<
                | {
                    _key: string;
                    content: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant?:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary";
                          text?: string;
                          icon?: "volvo-chevron-right" | "volvo-file-down";
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          markDefs: null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                          markDefs: null;
                        }
                    > | null;
                    isLastColumn: boolean | null;
                  }
                | {
                    _key: string;
                    content: string | null;
                    isLastColumn: boolean | null;
                  }
              > | null;
            }> | null;
            variant: "bordered" | "compact" | "default" | "striped" | null;
          }
        | {
            _key: string;
            _type: "hero";
            variant: "accent1" | "accent2" | "alt" | "brand" | "default" | null;
            badge?: string;
            title?: string;
            titleFont: "default" | "statement" | null;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            image: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Image-Broken";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            imageAlignment: "default" | "fit" | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
        | {
            _key: string;
            _type: "highlightedAspects";
            title: string | null;
            description: string | null;
            aspects: Array<{
              _key: string;
              title: string | null;
              variant: "icon" | "image" | "none" | null;
              icon: null;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Aspect Image";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              content: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                          openInNewTab: boolean | null;
                          href: string | "#" | null;
                        }
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    _key: string;
                    _type: "button";
                    variant:
                      | "default"
                      | "link"
                      | "outline"
                      | "primary"
                      | "secondary"
                      | null;
                    text: string | null;
                    icon: "volvo-chevron-right" | "volvo-file-down" | null;
                    url?: {
                      type?: "external" | "file" | "internal";
                      internal?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blog";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blogIndex";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "buses";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "camiones";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "motoresPenta";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          };
                      external?: string;
                      file?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                        };
                        media?: unknown;
                        _type: "file";
                      };
                      openInNewTab?: boolean;
                    };
                    href: string | "#" | null;
                    openInNewTab: boolean | false;
                  }
              > | null;
            }> | null;
            columns: "2" | "3" | "4" | null;
          }
        | {
            _key: string;
            _type: "imageGallery";
            title: string | null;
            description: string | null;
            images: Array<{
              _key: string;
              _type: "galleryImage";
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Gallery Image";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              alt?: string;
              caption: string | null;
            }> | null;
            layout: "bento" | "carousel" | "grid" | "masonry" | null;
            columns: "2" | "3" | "4" | null;
            slidesPerRow: 1 | 2 | 3 | 4 | 5 | null;
          }
        | {
            _key: string;
            _type: "imageLinkCards";
            eyebrow?: string;
            title?: string;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
            cards: Array<{
              title?: string;
              description?: string;
              image: {
                asset?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                };
                media?: unknown;
                hotspot?: SanityImageHotspot;
                crop?: SanityImageCrop;
                _type: "image";
                alt: string | "Image-Broken";
                blurData: string | null;
                dominantColor: string | null;
              } | null;
              url?: CustomUrl;
              _type: "imageLinkCard";
              _key: string;
              openInNewTab: boolean | null;
              href: string | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "infoSection";
            title: string | null;
            headingLevel: "h1" | "h2" | "h3" | "h4" | null;
            content: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?:
                | "blockquote"
                | "h1"
                | "h2"
                | "h3"
                | "h4"
                | "h5"
                | "h6"
                | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }> | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          }
        | {
            _key: string;
            _type: "mainHero";
            badge?: string;
            title?: string;
            titleFont: "default" | "statement" | null;
            layout: "default" | "fullImage" | null;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            backgroundType?: "image" | "video";
            backgroundImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Background Image";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            backgroundVideo: string | null;
            image: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Image-Broken";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
        | {
            _key: string;
            _type: "productListing";
            title?: string;
            productType?: "buses" | "camiones" | "motoresPenta";
            taxonomyFilter?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "skosConcept";
            };
          }
        | {
            _key: string;
            _type: "specificationsTable";
            title: string | null;
            description: string | null;
            specifications: Array<{
              _key: string;
              label: string | null;
              content: Array<
                | {
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                          openInNewTab: boolean | null;
                          href: string | "#" | null;
                        }
                      | {
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }
                | {
                    _key: string;
                    _type: "button";
                    variant?:
                      | "default"
                      | "link"
                      | "outline"
                      | "primary"
                      | "secondary";
                    text?: string;
                    icon?: "volvo-chevron-right" | "volvo-file-down";
                    url?: {
                      type?: "external" | "file" | "internal";
                      internal?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blog";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "blogIndex";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "buses";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "camiones";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "motoresPenta";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          };
                      external?: string;
                      file?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                        };
                        media?: unknown;
                        _type: "file";
                      };
                      openInNewTab?: boolean;
                    };
                    markDefs: null;
                  }
                | {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    caption?: string;
                    _type: "image";
                    _key: string;
                    markDefs: null;
                  }
              > | null;
            }> | null;
            variant: "bordered" | "compact" | "default" | "striped" | null;
          }
        | {
            _key: string;
            _type: "subscribeNewsletter";
            title?: string;
            subTitle: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            helperText: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                    openInNewTab: boolean | null;
                    href: string | "#" | null;
                  }
                | {
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          }
        | {
            _key: string;
            _type: "sucursalesSelector";
            title: string | null;
            description: string | null;
            showMap: boolean | null;
            showAllRegions: boolean | null;
            selectedRegions: Array<string> | null;
            variant: "cards" | "compact" | "default" | null;
          }
        | {
            _key: string;
            _type: "tabs";
            title: string | null;
            description: string | null;
            tabs: Array<{
              _key: string;
              label: string | null;
              content: Array<
                | {
                    eyebrow?: string;
                    title?: string;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    _type: "cta";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    cursos?: Array<{
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      _key: string;
                      [internalGroqTypeReferenceTo]?: "cursos";
                    }>;
                    displayMode?: "grid" | "list";
                    showAllDates?: "no" | "yes";
                    _type: "cursosBlock";
                    _key: string;
                  }
                | {
                    variant:
                      | "accent1"
                      | "accent2"
                      | "alt"
                      | "brand"
                      | "default"
                      | "inset"
                      | null;
                    primaryBadge: string | null;
                    primaryTitle: string | null;
                    primaryRichText: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "blockquote"
                        | "h1"
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<{
                        href?: string;
                        _type: "link";
                        _key: string;
                      }> | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    primaryImage: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Primary Image";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    primaryButtons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      openInNewTab: boolean | null;
                      href: string | null;
                    }> | null;
                    secondaryBadge: string | null;
                    secondaryTitle: string | null;
                    secondaryRichText: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "blockquote"
                        | "h1"
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<{
                        href?: string;
                        _type: "link";
                        _key: string;
                      }> | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    secondaryImage: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Secondary Image";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    secondaryButtons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      openInNewTab: boolean | null;
                      href: string | null;
                    }> | null;
                    _type: "doubleHero";
                    _key: string;
                  }
                | {
                    eyebrow?: string;
                    title?: string;
                    subtitle?: string;
                    link: {
                      title?: string;
                      description?: string;
                      url?: CustomUrl;
                      openInNewTab: boolean | null;
                      href: string | null;
                    } | null;
                    faqs: Array<{
                      title: string | null;
                      _id: string;
                      _type: "faq";
                      richText: Array<
                        | {
                            children?: Array<{
                              marks?: Array<string>;
                              text?: string;
                              _type: "span";
                              _key: string;
                            }>;
                            style?:
                              | "h2"
                              | "h3"
                              | "h4"
                              | "h5"
                              | "h6"
                              | "inline"
                              | "normal";
                            listItem?: "bullet" | "number";
                            markDefs: Array<
                              | {
                                  customLink?: CustomUrl;
                                  _type: "customLink";
                                  _key: string;
                                  openInNewTab: boolean | null;
                                  href: string | "#" | null;
                                }
                              | {
                                  customLink?: CustomUrl;
                                  _type: "customLink";
                                  _key: string;
                                }
                            > | null;
                            level?: number;
                            _type: "block";
                            _key: string;
                          }
                        | {
                            _key: string;
                            _type: "button";
                            variant:
                              | "default"
                              | "link"
                              | "outline"
                              | "primary"
                              | "secondary"
                              | null;
                            text: string | null;
                            icon:
                              | "volvo-chevron-right"
                              | "volvo-file-down"
                              | null;
                            url?: {
                              type?: "external" | "file" | "internal";
                              internal?:
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "blog";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "blogIndex";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "buses";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "camiones";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "motoresPenta";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "page";
                                  };
                              external?: string;
                              file?: {
                                asset?: {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                                };
                                media?: unknown;
                                _type: "file";
                              };
                              openInNewTab?: boolean;
                            };
                            openInNewTab: boolean | null;
                            href: string | null;
                          }
                        | {
                            asset?: {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                            };
                            media?: unknown;
                            hotspot?: SanityImageHotspot;
                            crop?: SanityImageCrop;
                            caption?: string;
                            _type: "image";
                            _key: string;
                          }
                      > | null;
                    }> | null;
                    _type: "faqAccordion";
                    _key: string;
                  }
                | {
                    eyebrow?: string;
                    title?: string;
                    richText?: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }>;
                    cards?: Array<{
                      icon?: IconPicker;
                      title?: string;
                      richText?: Array<{
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?:
                          | "h2"
                          | "h3"
                          | "h4"
                          | "h5"
                          | "h6"
                          | "inline"
                          | "normal";
                        listItem?: "bullet" | "number";
                        markDefs?: Array<{
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }>;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }>;
                      _type: "featureCardIcon";
                      _key: string;
                    }>;
                    _type: "featureCardsIcon";
                    _key: string;
                  }
                | {
                    title: string | null;
                    description: string | null;
                    form: {
                      _id: string;
                      title: string | null;
                      description: string | null;
                      fields: Array<
                        | {
                            label: string | null;
                            name: string | null;
                            type:
                              | "checkbox"
                              | "curso"
                              | "direccion"
                              | "email"
                              | "number"
                              | "radio"
                              | "rut"
                              | "select"
                              | "tel"
                              | "text"
                              | "textarea"
                              | null;
                            required: "no" | "yes" | null;
                            options: Array<string> | null;
                            placeholder: string | null;
                            courseReference: null;
                            selectedTrainingDate: null;
                          }
                        | {
                            label: string | null;
                            name: string | null;
                            type:
                              | "checkbox"
                              | "curso"
                              | "direccion"
                              | "email"
                              | "number"
                              | "radio"
                              | "rut"
                              | "select"
                              | "tel"
                              | "text"
                              | "textarea"
                              | null;
                            required: "no" | "yes" | null;
                            options: Array<string> | null;
                            placeholder: string | null;
                          }
                      > | null;
                      emailRecipients: string | null;
                      submitButtonText: string | null;
                      successMessage: string | null;
                      errorMessage: string | null;
                    } | null;
                    displayMode: "inline" | "modal" | null;
                    triggerText: string | null;
                    buttonPosition: "default" | "fixed" | null;
                    variant: "centered" | "default" | "withBackground" | null;
                    _type: "formBlock";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    columnCount?: 3 | 4 | 5 | 6;
                    columnHeaders?: Array<string>;
                    rows?: Array<{
                      cells?: Array<
                        | {
                            content?: string;
                            isLastColumn?: boolean;
                            _type: "cell";
                            _key: string;
                          }
                        | {
                            content?: Array<
                              | ({
                                  _key: string;
                                } & Button)
                              | {
                                  children?: Array<{
                                    marks?: Array<string>;
                                    text?: string;
                                    _type: "span";
                                    _key: string;
                                  }>;
                                  style?:
                                    | "h2"
                                    | "h3"
                                    | "h4"
                                    | "h5"
                                    | "h6"
                                    | "inline"
                                    | "normal";
                                  listItem?: "bullet" | "number";
                                  markDefs?: Array<{
                                    customLink?: CustomUrl;
                                    _type: "customLink";
                                    _key: string;
                                  }>;
                                  level?: number;
                                  _type: "block";
                                  _key: string;
                                }
                              | {
                                  asset?: {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                                  };
                                  media?: unknown;
                                  hotspot?: SanityImageHotspot;
                                  crop?: SanityImageCrop;
                                  caption?: string;
                                  _type: "image";
                                  _key: string;
                                }
                            >;
                            isLastColumn?: boolean;
                            _type: "richCell";
                            _key: string;
                          }
                      >;
                      _type: "row";
                      _key: string;
                    }>;
                    variant?: "bordered" | "compact" | "default" | "striped";
                    _type: "genericTable";
                    _key: string;
                  }
                | {
                    variant:
                      | "accent1"
                      | "accent2"
                      | "alt"
                      | "brand"
                      | "default"
                      | null;
                    badge?: string;
                    title?: string;
                    titleFont: "default" | "statement" | null;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    image: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Image-Broken";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    imageAlignment: "default" | "fit" | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    _type: "hero";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    aspects?: Array<{
                      title?: string;
                      variant?: "icon" | "image" | "none";
                      image?: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        _type: "image";
                      };
                      content?: Array<
                        | ({
                            _key: string;
                          } & Button)
                        | {
                            children?: Array<{
                              marks?: Array<string>;
                              text?: string;
                              _type: "span";
                              _key: string;
                            }>;
                            style?:
                              | "h2"
                              | "h3"
                              | "h4"
                              | "h5"
                              | "h6"
                              | "inline"
                              | "normal";
                            listItem?: "bullet" | "number";
                            markDefs?: Array<{
                              customLink?: CustomUrl;
                              _type: "customLink";
                              _key: string;
                            }>;
                            level?: number;
                            _type: "block";
                            _key: string;
                          }
                      >;
                      _type: "aspect";
                      _key: string;
                    }>;
                    columns?: "2" | "3" | "4";
                    _type: "highlightedAspects";
                    _key: string;
                  }
                | {
                    title: string | null;
                    description: string | null;
                    images: Array<{
                      _key: string;
                      _type: "galleryImage";
                      image: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        _type: "image";
                        alt: string | "Gallery Image";
                        blurData: string | null;
                        dominantColor: string | null;
                      } | null;
                      alt?: string;
                      caption: string | null;
                    }> | null;
                    layout: "bento" | "carousel" | "grid" | "masonry" | null;
                    columns: "2" | "3" | "4" | null;
                    slidesPerRow: 1 | 2 | 3 | 4 | 5 | null;
                    _type: "imageGallery";
                    _key: string;
                  }
                | {
                    eyebrow?: string;
                    title?: string;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    cards: Array<{
                      title?: string;
                      description?: string;
                      image: {
                        asset?: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        };
                        media?: unknown;
                        hotspot?: SanityImageHotspot;
                        crop?: SanityImageCrop;
                        _type: "image";
                        alt: string | "Image-Broken";
                        blurData: string | null;
                        dominantColor: string | null;
                      } | null;
                      url?: CustomUrl;
                      _type: "imageLinkCard";
                      _key: string;
                      openInNewTab: boolean | null;
                      href: string | null;
                    }> | null;
                    _type: "imageLinkCards";
                    _key: string;
                  }
                | {
                    badge?: string;
                    title?: string;
                    titleFont: "default" | "statement" | null;
                    layout: "default" | "fullImage" | null;
                    richText: Array<
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                                openInNewTab: boolean | null;
                                href: string | "#" | null;
                              }
                            | {
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          _key: string;
                          _type: "button";
                          variant:
                            | "default"
                            | "link"
                            | "outline"
                            | "primary"
                            | "secondary"
                            | null;
                          text: string | null;
                          icon:
                            | "volvo-chevron-right"
                            | "volvo-file-down"
                            | null;
                          url?: {
                            type?: "external" | "file" | "internal";
                            internal?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blog";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "blogIndex";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "buses";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "camiones";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "motoresPenta";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                };
                            external?: string;
                            file?: {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                              };
                              media?: unknown;
                              _type: "file";
                            };
                            openInNewTab?: boolean;
                          };
                          openInNewTab: boolean | null;
                          href: string | null;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    > | null;
                    backgroundType?: "image" | "video";
                    backgroundImage: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Background Image";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    backgroundVideo: string | null;
                    image: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                      alt: string | "Image-Broken";
                      blurData: string | null;
                      dominantColor: string | null;
                    } | null;
                    buttons: Array<{
                      text: string | null;
                      variant:
                        | "default"
                        | "link"
                        | "outline"
                        | "primary"
                        | "secondary"
                        | null;
                      icon: "volvo-chevron-right" | "volvo-file-down" | null;
                      _key: string;
                      _type: "button";
                      href: string | "#" | null;
                      openInNewTab: boolean | false;
                    }> | null;
                    _type: "mainHero";
                    _key: string;
                  }
                | {
                    title?: string;
                    productType?: "buses" | "camiones" | "motoresPenta";
                    taxonomyFilter?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "skosConcept";
                    };
                    _type: "productListing";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    specifications?: Array<
                      {
                        _key: string;
                      } & SpecificationItem
                    >;
                    variant?: "bordered" | "compact" | "default" | "striped";
                    _type: "specificationsTable";
                    _key: string;
                  }
                | {
                    title?: string;
                    subTitle: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    helperText: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                            openInNewTab: boolean | null;
                            href: string | "#" | null;
                          }
                        | {
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                    _type: "subscribeNewsletter";
                    _key: string;
                  }
                | {
                    title?: string;
                    description?: string;
                    showMap?: boolean;
                    showAllRegions?: boolean;
                    selectedRegions?: Array<string>;
                    variant?: "cards" | "compact" | "default";
                    _type: "sucursalesSelector";
                    _key: string;
                  }
                | {
                    richText?: Array<
                      | ({
                          _key: string;
                        } & Button)
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs?: Array<{
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }>;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    >;
                    _type: "textBlock";
                    _key: string;
                  }
                | {
                    title?: string;
                    videoType?: "mp4" | "youtube";
                    mp4File?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    youtubeUrl?: string;
                    posterImage?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                    };
                    showControls?: "no" | "yes";
                    autoplay?: "no" | "yes";
                    loop?: "no" | "yes";
                    allowFullscreen?: "no" | "yes";
                    _type: "videoBlock";
                    _key: string;
                  }
                | {
                    variant?:
                      | "accent1"
                      | "accent2"
                      | "alt"
                      | "brand"
                      | "default";
                    badge?: string;
                    title?: string;
                    titleFont?: "default" | "statement";
                    richText?: Array<
                      | ({
                          _key: string;
                        } & Button)
                      | {
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?:
                            | "h2"
                            | "h3"
                            | "h4"
                            | "h5"
                            | "h6"
                            | "inline"
                            | "normal";
                          listItem?: "bullet" | "number";
                          markDefs?: Array<{
                            customLink?: CustomUrl;
                            _type: "customLink";
                            _key: string;
                          }>;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }
                      | {
                          asset?: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          };
                          media?: unknown;
                          hotspot?: SanityImageHotspot;
                          crop?: SanityImageCrop;
                          caption?: string;
                          _type: "image";
                          _key: string;
                        }
                    >;
                    videoType?: "mp4" | "youtube";
                    mp4File?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    youtubeUrl?: string;
                    posterImage?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      _type: "image";
                    };
                    showControls?: "no" | "yes";
                    autoplay?: "no" | "yes";
                    loop?: "no" | "yes";
                    buttons?: Array<
                      {
                        _key: string;
                      } & Button
                    >;
                    _type: "videoHero";
                    _key: string;
                  }
              > | null;
            }> | null;
          }
        | {
            _key: string;
            _type: "textBlock";
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
          }
        | {
            _key: string;
            _type: "videoBlock";
            title: string | null;
            videoType: "mp4" | "youtube" | null;
            mp4File: string | null;
            youtubeUrl: string | null;
            posterImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Video Poster";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            showControls: "no" | "yes" | null;
            autoplay: "no" | "yes" | null;
            loop: "no" | "yes" | null;
            allowFullscreen: "no" | "yes" | null;
          }
        | {
            _key: string;
            _type: "videoHero";
            variant: "accent1" | "accent2" | "alt" | "brand" | "default" | null;
            badge?: string;
            title?: string;
            titleFont: "default" | "statement" | null;
            richText: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                        openInNewTab: boolean | null;
                        href: string | "#" | null;
                      }
                    | {
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "button";
                  variant:
                    | "default"
                    | "link"
                    | "outline"
                    | "primary"
                    | "secondary"
                    | null;
                  text: string | null;
                  icon: "volvo-chevron-right" | "volvo-file-down" | null;
                  url?: {
                    type?: "external" | "file" | "internal";
                    internal?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blog";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "blogIndex";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "buses";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "camiones";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "motoresPenta";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        };
                    external?: string;
                    file?: {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                      };
                      media?: unknown;
                      _type: "file";
                    };
                    openInNewTab?: boolean;
                  };
                  openInNewTab: boolean | null;
                  href: string | null;
                }
              | {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  caption?: string;
                  _type: "image";
                  _key: string;
                }
            > | null;
            videoType: "mp4" | "youtube" | null;
            mp4File: string | null;
            youtubeUrl: string | null;
            posterImage: {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              alt: string | "Video Hero Poster";
              blurData: string | null;
              dominantColor: string | null;
            } | null;
            showControls: "no" | "yes" | null;
            autoplay: "no" | "yes" | null;
            loop: "no" | "yes" | null;
            buttons: Array<{
              text: string | null;
              variant:
                | "default"
                | "link"
                | "outline"
                | "primary"
                | "secondary"
                | null;
              icon: "volvo-chevron-right" | "volvo-file-down" | null;
              _key: string;
              _type: "button";
              href: string | "#" | null;
              openInNewTab: boolean | false;
            }> | null;
          }
      > | null;
    }
  | null;
// Variable: queryMotoresPentaPaths
// Query: *[_type == "motoresPenta" && defined(slug.current)].slug.current
export type QueryMotoresPentaPathsResult = Array<string | null>;
// Variable: COTIZADOR_SETTINGS_QUERY
// Query: *[  _type == "settings"][0]{  _id,    cotizadorFormTitle,  cotizadorFormDescription,  "cotizadorForm": coalesce(cotizadorForm->{    _id,    _type,    title,    description,    "slug": slug.current,      fields[]{    label,    name,    type,    required,    options,    placeholder,    type == "curso" => {      courseReference->{        _id,        title,        "fechasCapacitacion": fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        }      },      selectedTrainingDate    }  },  emailRecipients,  submitButtonText,  successMessage,  errorMessage  }, null)}
export type COTIZADOR_SETTINGS_QUERYResult = {
  _id: string;
  cotizadorFormTitle: string | null;
  cotizadorFormDescription: string | null;
  cotizadorForm: {
    _id: string;
    _type: "formularios";
    title: string | null;
    description: string | null;
    slug: string | null;
    fields: Array<
      | {
          label: string | null;
          name: string | null;
          type:
            | "checkbox"
            | "curso"
            | "direccion"
            | "email"
            | "number"
            | "radio"
            | "rut"
            | "select"
            | "tel"
            | "text"
            | "textarea"
            | null;
          required: "no" | "yes" | null;
          options: Array<string> | null;
          placeholder: string | null;
          courseReference: null;
          selectedTrainingDate: null;
        }
      | {
          label: string | null;
          name: string | null;
          type:
            | "checkbox"
            | "curso"
            | "direccion"
            | "email"
            | "number"
            | "radio"
            | "rut"
            | "select"
            | "tel"
            | "text"
            | "textarea"
            | null;
          required: "no" | "yes" | null;
          options: Array<string> | null;
          placeholder: string | null;
        }
    > | null;
    emailRecipients: string | null;
    submitButtonText: string | null;
    successMessage: string | null;
    errorMessage: string | null;
  } | null;
} | null;
// Variable: COTIZADOR_FORM_BY_ID_QUERY
// Query: *[  _type == "formularios"   && _id == $formId][0]{  _id,  title,  description,    fields[]{    label,    name,    type,    required,    options,    placeholder,    type == "curso" => {      courseReference->{        _id,        title,        "fechasCapacitacion": fechasCapacitacion[]{          nombre,          profesor,          fecha,          hora        }      },      selectedTrainingDate    }  },  emailRecipients,  submitButtonText,  successMessage,  errorMessage}
export type COTIZADOR_FORM_BY_ID_QUERYResult = {
  _id: string;
  title: string | null;
  description: string | null;
  fields: Array<
    | {
        label: string | null;
        name: string | null;
        type:
          | "checkbox"
          | "curso"
          | "direccion"
          | "email"
          | "number"
          | "radio"
          | "rut"
          | "select"
          | "tel"
          | "text"
          | "textarea"
          | null;
        required: "no" | "yes" | null;
        options: Array<string> | null;
        placeholder: string | null;
        courseReference: null;
        selectedTrainingDate: null;
      }
    | {
        label: string | null;
        name: string | null;
        type:
          | "checkbox"
          | "curso"
          | "direccion"
          | "email"
          | "number"
          | "radio"
          | "rut"
          | "select"
          | "tel"
          | "text"
          | "textarea"
          | null;
        required: "no" | "yes" | null;
        options: Array<string> | null;
        placeholder: string | null;
      }
  > | null;
  emailRecipients: string | null;
  submitButtonText: string | null;
  successMessage: string | null;
  errorMessage: string | null;
} | null;
// Variable: SEARCH_QUERY
// Query: {  "results": *[    _type in ["page", "blog", "camiones", "buses", "motoresPenta"]    && (      title match $searchTerm ||       description match $searchTerm    )  ] | order(_createdAt desc) [0...20] {    _id,    _type,    title,    description,    "slug": slug.current,    "image": image{      "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background    },    "taxonomy": coalesce(taxonomias->{      prefLabel,      conceptId    }, null),    _createdAt  }}
export type SEARCH_QUERYResult = {
  results: Array<
    | {
        _id: string;
        _type: "blog";
        title: string | null;
        description: string | null;
        slug: string | null;
        image: {
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        taxonomy: null;
        _createdAt: string;
      }
    | {
        _id: string;
        _type: "buses";
        title: string | null;
        description: string | null;
        slug: string | null;
        image: {
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        taxonomy: {
          prefLabel: string | null;
          conceptId: string | null;
        } | null;
        _createdAt: string;
      }
    | {
        _id: string;
        _type: "camiones";
        title: string | null;
        description: string | null;
        slug: string | null;
        image: {
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        taxonomy: {
          prefLabel: string | null;
          conceptId: string | null;
        } | null;
        _createdAt: string;
      }
    | {
        _id: string;
        _type: "motoresPenta";
        title: string | null;
        description: string | null;
        slug: string | null;
        image: {
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        taxonomy: {
          prefLabel: string | null;
          conceptId: string | null;
        } | null;
        _createdAt: string;
      }
    | {
        _id: string;
        _type: "page";
        title: string | null;
        description: string | null;
        slug: string | null;
        image: {
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        taxonomy: null;
        _createdAt: string;
      }
  >;
};
// Variable: PRODUCT_LISTING_QUERY
// Query: *[    _type == $productType &&     taxonomias._ref == $taxonomyId  ]{    _id,    title,    "slug": slug.current,    description,    "image": image {        "asset": asset->,        "_type": "image"    },    "taxonomy": taxonomias->{      prefLabel,      conceptId    }  } | order(title asc)
export type PRODUCT_LISTING_QUERYResult = Array<
  | {
      _id: string;
      title: null;
      slug: null;
      description: null;
      image: null;
      taxonomy: null;
    }
  | {
      _id: string;
      title: string | null;
      slug: null;
      description: null;
      image: null;
      taxonomy: null;
    }
  | {
      _id: string;
      title: string | null;
      slug: string | null;
      description: null;
      image: null;
      taxonomy: null;
    }
  | {
      _id: string;
      title: null;
      slug: null;
      description: null;
      image: {
        asset: {
          _id: string;
          _type: "sanity.imageAsset";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          originalFilename?: string;
          label?: string;
          title?: string;
          description?: string;
          altText?: string;
          sha1hash?: string;
          extension?: string;
          mimeType?: string;
          size?: number;
          assetId?: string;
          uploadId?: string;
          path?: string;
          url?: string;
          metadata?: SanityImageMetadata;
          source?: SanityAssetSourceData;
        } | null;
        _type: "image";
      } | null;
      taxonomy: null;
    }
  | {
      _id: string;
      title: string | null;
      slug: string | null;
      description: RichText | null;
      image: {
        asset: {
          _id: string;
          _type: "sanity.imageAsset";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          originalFilename?: string;
          label?: string;
          title?: string;
          description?: string;
          altText?: string;
          sha1hash?: string;
          extension?: string;
          mimeType?: string;
          size?: number;
          assetId?: string;
          uploadId?: string;
          path?: string;
          url?: string;
          metadata?: SanityImageMetadata;
          source?: SanityAssetSourceData;
        } | null;
        _type: "image";
      } | null;
      taxonomy: null;
    }
  | {
      _id: string;
      title: string | null;
      slug: null;
      description: string | null;
      image: null;
      taxonomy: null;
    }
  | {
      _id: string;
      title: string | null;
      slug: string | null;
      description: string | null;
      image: null;
      taxonomy: null;
    }
  | {
      _id: string;
      title: string | null;
      slug: string | null;
      description: string | null;
      image: {
        asset: {
          _id: string;
          _type: "sanity.imageAsset";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          originalFilename?: string;
          label?: string;
          title?: string;
          description?: string;
          altText?: string;
          sha1hash?: string;
          extension?: string;
          mimeType?: string;
          size?: number;
          assetId?: string;
          uploadId?: string;
          path?: string;
          url?: string;
          metadata?: SanityImageMetadata;
          source?: SanityAssetSourceData;
        } | null;
        _type: "image";
      } | null;
      taxonomy: null;
    }
  | {
      _id: string;
      title: string | null;
      slug: string | null;
      description: string | null;
      image: {
        asset: {
          _id: string;
          _type: "sanity.imageAsset";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          originalFilename?: string;
          label?: string;
          title?: string;
          description?: string;
          altText?: string;
          sha1hash?: string;
          extension?: string;
          mimeType?: string;
          size?: number;
          assetId?: string;
          uploadId?: string;
          path?: string;
          url?: string;
          metadata?: SanityImageMetadata;
          source?: SanityAssetSourceData;
        } | null;
        _type: "image";
      } | null;
      taxonomy: {
        prefLabel: string | null;
        conceptId: string | null;
      } | null;
    }
>;
// Variable: PRODUCT_TAXONOMIES_QUERY
// Query: *[_type == "skosConcept" &&     count(broader[_ref in *[      _type == "skosConcept" &&       conceptId == $conceptId    ]._id]) > 0  ]{    prefLabel,    conceptId,    _id  } | order(prefLabel)
export type PRODUCT_TAXONOMIES_QUERYResult = Array<{
  prefLabel: string | null;
  conceptId: string | null;
  _id: string;
}>;
// Variable: CAMION_BY_SLUG_QUERY
// Query: *[_type == "camiones" && slug.current == $slug][0]{  _id,  _type,  title,  subtitle,  description,  image,    "pageBuilder": pageBuilder[]{    ...,    _type,      _type == "cta" => {    ...,      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  }  },  _type == "hero" => {    ...,      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  }  },  _type == "mainHero" => {    ...,      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  }  },  _type == "videoHero" => {    ...,      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  }  },  _type == "imageLinkCards" => {    ...,      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  }  },  _type == "doubleHero" => {    ...,    "primaryButtons": primaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    "secondaryButtons": secondaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  }  },  taxonomias,  slug}
export type CAMION_BY_SLUG_QUERYResult = {
  _id: string;
  _type: "camiones";
  title: string | null;
  subtitle: string | null;
  description: string | null;
  image: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
  pageBuilder: Array<
    | {
        _key: string;
        _type: "cta";
        eyebrow?: string;
        title?: string;
        richText?: Array<
          | ({
              _key: string;
            } & Button)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        >;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
    | {
        _key: string;
        _type: "cursosBlock";
        title?: string;
        description?: string;
        cursos?: Array<{
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          _key: string;
          [internalGroqTypeReferenceTo]?: "cursos";
        }>;
        displayMode?: "grid" | "list";
        showAllDates?: "no" | "yes";
      }
    | {
        _key: string;
        _type: "doubleHero";
        variant?: "accent1" | "accent2" | "alt" | "brand" | "default" | "inset";
        primaryBadge?: string;
        primaryTitle?: string;
        primaryRichText?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
        primaryImage?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        primaryButtons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          openInNewTab: boolean | null;
          href: string | null;
        }> | null;
        secondaryBadge?: string;
        secondaryTitle?: string;
        secondaryRichText?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
        secondaryImage?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        secondaryButtons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          openInNewTab: boolean | null;
          href: string | null;
        }> | null;
      }
    | {
        _key: string;
        _type: "faqAccordion";
        eyebrow?: string;
        title?: string;
        subtitle?: string;
        link?: {
          title?: string;
          description?: string;
          url?: CustomUrl;
        };
        faqs?: Array<{
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          _key: string;
          [internalGroqTypeReferenceTo]?: "faq";
        }>;
      }
    | {
        _key: string;
        _type: "featureCardsIcon";
        eyebrow?: string;
        title?: string;
        richText?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            customLink?: CustomUrl;
            _type: "customLink";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
        cards?: Array<{
          icon?: IconPicker;
          title?: string;
          richText?: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              customLink?: CustomUrl;
              _type: "customLink";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }>;
          _type: "featureCardIcon";
          _key: string;
        }>;
      }
    | {
        _key: string;
        _type: "featuredBlogs";
        title?: string;
        subtitle?: string;
        displayMode?: "curated" | "latest";
        blogCount?: "1" | "2" | "3";
        blogs?: Array<{
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          _key: string;
          [internalGroqTypeReferenceTo]?: "blog";
        }>;
        showViewAllButton?: "no" | "yes";
        buttonText?: string;
      }
    | {
        _key: string;
        _type: "formBlock";
        title?: string;
        description?: string;
        form?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "formularios";
        };
        displayMode?: "inline" | "modal";
        triggerText?: string;
        buttonPosition?: "default" | "fixed";
        variant?: "centered" | "default" | "withBackground";
      }
    | {
        _key: string;
        _type: "genericTable";
        title?: string;
        description?: string;
        columnCount?: 3 | 4 | 5 | 6;
        columnHeaders?: Array<string>;
        rows?: Array<{
          cells?: Array<
            | {
                content?: string;
                isLastColumn?: boolean;
                _type: "cell";
                _key: string;
              }
            | {
                content?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                isLastColumn?: boolean;
                _type: "richCell";
                _key: string;
              }
          >;
          _type: "row";
          _key: string;
        }>;
        variant?: "bordered" | "compact" | "default" | "striped";
      }
    | {
        _key: string;
        _type: "hero";
        variant?: "accent1" | "accent2" | "alt" | "brand" | "default";
        badge?: string;
        title?: string;
        titleFont?: "default" | "statement";
        richText?: Array<
          | ({
              _key: string;
            } & Button)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        >;
        image?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        imageAlignment?: "default" | "fit";
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
    | {
        _key: string;
        _type: "highlightedAspects";
        title?: string;
        description?: string;
        aspects?: Array<{
          title?: string;
          variant?: "icon" | "image" | "none";
          image?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
          };
          content?: Array<
            | ({
                _key: string;
              } & Button)
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
                listItem?: "bullet" | "number";
                markDefs?: Array<{
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }
          >;
          _type: "aspect";
          _key: string;
        }>;
        columns?: "2" | "3" | "4";
      }
    | {
        _key: string;
        _type: "imageGallery";
        title?: string;
        description?: string;
        images?: Array<
          {
            _key: string;
          } & GalleryImage
        >;
        layout?: "bento" | "carousel" | "grid" | "masonry";
        columns?: "2" | "3" | "4";
        slidesPerRow?: 1 | 2 | 3 | 4 | 5;
      }
    | {
        _key: string;
        _type: "imageLinkCards";
        eyebrow?: string;
        title?: string;
        richText?: Array<
          | ({
              _key: string;
            } & Button)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        >;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
        cards?: Array<{
          title?: string;
          description?: string;
          image?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
          };
          url?: CustomUrl;
          _type: "imageLinkCard";
          _key: string;
        }>;
      }
    | {
        _key: string;
        _type: "infoSection";
        title?: string;
        headingLevel?: "h1" | "h2" | "h3" | "h4";
        content?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
      }
    | {
        _key: string;
        _type: "mainHero";
        badge?: string;
        title?: string;
        titleFont?: "default" | "statement";
        layout?: "default" | "fullImage";
        richText?: Array<
          | ({
              _key: string;
            } & Button)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        >;
        backgroundType?: "image" | "video";
        backgroundImage?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        backgroundVideo?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
          };
          media?: unknown;
          _type: "file";
        };
        image?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
    | {
        _key: string;
        _type: "productListing";
        title?: string;
        productType?: "buses" | "camiones" | "motoresPenta";
        taxonomyFilter?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "skosConcept";
        };
      }
    | {
        _key: string;
        _type: "specificationsTable";
        title?: string;
        description?: string;
        specifications?: Array<
          {
            _key: string;
          } & SpecificationItem
        >;
        variant?: "bordered" | "compact" | "default" | "striped";
      }
    | {
        _key: string;
        _type: "subscribeNewsletter";
        title?: string;
        subTitle?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            customLink?: CustomUrl;
            _type: "customLink";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
        helperText?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            customLink?: CustomUrl;
            _type: "customLink";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
      }
    | {
        _key: string;
        _type: "sucursalesSelector";
        title?: string;
        description?: string;
        showMap?: boolean;
        showAllRegions?: boolean;
        selectedRegions?: Array<string>;
        variant?: "cards" | "compact" | "default";
      }
    | {
        _key: string;
        _type: "tabs";
        title?: string;
        description?: string;
        tabs?: Array<{
          label?: string;
          content?: Array<
            | {
                eyebrow?: string;
                title?: string;
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                buttons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                _type: "cta";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                cursos?: Array<{
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  _key: string;
                  [internalGroqTypeReferenceTo]?: "cursos";
                }>;
                displayMode?: "grid" | "list";
                showAllDates?: "no" | "yes";
                _type: "cursosBlock";
                _key: string;
              }
            | {
                variant?:
                  | "accent1"
                  | "accent2"
                  | "alt"
                  | "brand"
                  | "default"
                  | "inset";
                primaryBadge?: string;
                primaryTitle?: string;
                primaryRichText?: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "blockquote"
                    | "h1"
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    href?: string;
                    _type: "link";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }>;
                primaryImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                primaryButtons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                secondaryBadge?: string;
                secondaryTitle?: string;
                secondaryRichText?: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "blockquote"
                    | "h1"
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    href?: string;
                    _type: "link";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }>;
                secondaryImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                secondaryButtons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                _type: "doubleHero";
                _key: string;
              }
            | {
                eyebrow?: string;
                title?: string;
                subtitle?: string;
                link?: {
                  title?: string;
                  description?: string;
                  url?: CustomUrl;
                };
                faqs?: Array<{
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  _key: string;
                  [internalGroqTypeReferenceTo]?: "faq";
                }>;
                _type: "faqAccordion";
                _key: string;
              }
            | {
                eyebrow?: string;
                title?: string;
                richText?: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }>;
                cards?: Array<{
                  icon?: IconPicker;
                  title?: string;
                  richText?: Array<{
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs?: Array<{
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                    }>;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }>;
                  _type: "featureCardIcon";
                  _key: string;
                }>;
                _type: "featureCardsIcon";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                form?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "formularios";
                };
                displayMode?: "inline" | "modal";
                triggerText?: string;
                buttonPosition?: "default" | "fixed";
                variant?: "centered" | "default" | "withBackground";
                _type: "formBlock";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                columnCount?: 3 | 4 | 5 | 6;
                columnHeaders?: Array<string>;
                rows?: Array<{
                  cells?: Array<
                    | {
                        content?: string;
                        isLastColumn?: boolean;
                        _type: "cell";
                        _key: string;
                      }
                    | {
                        content?: Array<
                          | ({
                              _key: string;
                            } & Button)
                          | {
                              children?: Array<{
                                marks?: Array<string>;
                                text?: string;
                                _type: "span";
                                _key: string;
                              }>;
                              style?:
                                | "h2"
                                | "h3"
                                | "h4"
                                | "h5"
                                | "h6"
                                | "inline"
                                | "normal";
                              listItem?: "bullet" | "number";
                              markDefs?: Array<{
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }>;
                              level?: number;
                              _type: "block";
                              _key: string;
                            }
                          | {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                              };
                              media?: unknown;
                              hotspot?: SanityImageHotspot;
                              crop?: SanityImageCrop;
                              caption?: string;
                              _type: "image";
                              _key: string;
                            }
                        >;
                        isLastColumn?: boolean;
                        _type: "richCell";
                        _key: string;
                      }
                  >;
                  _type: "row";
                  _key: string;
                }>;
                variant?: "bordered" | "compact" | "default" | "striped";
                _type: "genericTable";
                _key: string;
              }
            | {
                variant?: "accent1" | "accent2" | "alt" | "brand" | "default";
                badge?: string;
                title?: string;
                titleFont?: "default" | "statement";
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                image?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                imageAlignment?: "default" | "fit";
                buttons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                _type: "hero";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                aspects?: Array<{
                  title?: string;
                  variant?: "icon" | "image" | "none";
                  image?: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    _type: "image";
                  };
                  content?: Array<
                    | ({
                        _key: string;
                      } & Button)
                    | {
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?:
                          | "h2"
                          | "h3"
                          | "h4"
                          | "h5"
                          | "h6"
                          | "inline"
                          | "normal";
                        listItem?: "bullet" | "number";
                        markDefs?: Array<{
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }>;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }
                  >;
                  _type: "aspect";
                  _key: string;
                }>;
                columns?: "2" | "3" | "4";
                _type: "highlightedAspects";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                images?: Array<
                  {
                    _key: string;
                  } & GalleryImage
                >;
                layout?: "bento" | "carousel" | "grid" | "masonry";
                columns?: "2" | "3" | "4";
                slidesPerRow?: 1 | 2 | 3 | 4 | 5;
                _type: "imageGallery";
                _key: string;
              }
            | {
                eyebrow?: string;
                title?: string;
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                buttons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                cards?: Array<{
                  title?: string;
                  description?: string;
                  image?: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    _type: "image";
                  };
                  url?: CustomUrl;
                  _type: "imageLinkCard";
                  _key: string;
                }>;
                _type: "imageLinkCards";
                _key: string;
              }
            | {
                badge?: string;
                title?: string;
                titleFont?: "default" | "statement";
                layout?: "default" | "fullImage";
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                backgroundType?: "image" | "video";
                backgroundImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                backgroundVideo?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                image?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                buttons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                _type: "mainHero";
                _key: string;
              }
            | {
                title?: string;
                productType?: "buses" | "camiones" | "motoresPenta";
                taxonomyFilter?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "skosConcept";
                };
                _type: "productListing";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                specifications?: Array<
                  {
                    _key: string;
                  } & SpecificationItem
                >;
                variant?: "bordered" | "compact" | "default" | "striped";
                _type: "specificationsTable";
                _key: string;
              }
            | {
                title?: string;
                subTitle?: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }>;
                helperText?: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }>;
                _type: "subscribeNewsletter";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                showMap?: boolean;
                showAllRegions?: boolean;
                selectedRegions?: Array<string>;
                variant?: "cards" | "compact" | "default";
                _type: "sucursalesSelector";
                _key: string;
              }
            | {
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                _type: "textBlock";
                _key: string;
              }
            | {
                title?: string;
                videoType?: "mp4" | "youtube";
                mp4File?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                youtubeUrl?: string;
                posterImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                showControls?: "no" | "yes";
                autoplay?: "no" | "yes";
                loop?: "no" | "yes";
                allowFullscreen?: "no" | "yes";
                _type: "videoBlock";
                _key: string;
              }
            | {
                variant?: "accent1" | "accent2" | "alt" | "brand" | "default";
                badge?: string;
                title?: string;
                titleFont?: "default" | "statement";
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                videoType?: "mp4" | "youtube";
                mp4File?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                youtubeUrl?: string;
                posterImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                showControls?: "no" | "yes";
                autoplay?: "no" | "yes";
                loop?: "no" | "yes";
                buttons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                _type: "videoHero";
                _key: string;
              }
          >;
          _type: "tab";
          _key: string;
        }>;
      }
    | {
        _key: string;
        _type: "textBlock";
        richText?: Array<
          | ({
              _key: string;
            } & Button)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        >;
      }
    | {
        _key: string;
        _type: "videoBlock";
        title?: string;
        videoType?: "mp4" | "youtube";
        mp4File?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
          };
          media?: unknown;
          _type: "file";
        };
        youtubeUrl?: string;
        posterImage?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        showControls?: "no" | "yes";
        autoplay?: "no" | "yes";
        loop?: "no" | "yes";
        allowFullscreen?: "no" | "yes";
      }
    | {
        _key: string;
        _type: "videoHero";
        variant?: "accent1" | "accent2" | "alt" | "brand" | "default";
        badge?: string;
        title?: string;
        titleFont?: "default" | "statement";
        richText?: Array<
          | ({
              _key: string;
            } & Button)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        >;
        videoType?: "mp4" | "youtube";
        mp4File?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
          };
          media?: unknown;
          _type: "file";
        };
        youtubeUrl?: string;
        posterImage?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        showControls?: "no" | "yes";
        autoplay?: "no" | "yes";
        loop?: "no" | "yes";
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
  > | null;
  taxonomias: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "skosConcept";
  } | null;
  slug: Slug | null;
} | null;
// Variable: BUS_BY_SLUG_QUERY
// Query: *[_type == "buses" && slug.current == $slug][0]{  _id,  _type,  title,  subtitle,  description,  image,    "pageBuilder": pageBuilder[]{    ...,    _type,      _type == "cta" => {    ...,      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  }  },  _type == "hero" => {    ...,      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  }  },  _type == "mainHero" => {    ...,      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  }  },  _type == "videoHero" => {    ...,      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  }  },  _type == "imageLinkCards" => {    ...,      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  }  },  _type == "doubleHero" => {    ...,    "primaryButtons": primaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    "secondaryButtons": secondaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  }  },  taxonomias,  slug}
export type BUS_BY_SLUG_QUERYResult = {
  _id: string;
  _type: "buses";
  title: string | null;
  subtitle: string | null;
  description: string | null;
  image: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
  pageBuilder: Array<
    | {
        _key: string;
        _type: "cta";
        eyebrow?: string;
        title?: string;
        richText?: Array<
          | ({
              _key: string;
            } & Button)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        >;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
    | {
        _key: string;
        _type: "cursosBlock";
        title?: string;
        description?: string;
        cursos?: Array<{
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          _key: string;
          [internalGroqTypeReferenceTo]?: "cursos";
        }>;
        displayMode?: "grid" | "list";
        showAllDates?: "no" | "yes";
      }
    | {
        _key: string;
        _type: "doubleHero";
        variant?: "accent1" | "accent2" | "alt" | "brand" | "default" | "inset";
        primaryBadge?: string;
        primaryTitle?: string;
        primaryRichText?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
        primaryImage?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        primaryButtons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          openInNewTab: boolean | null;
          href: string | null;
        }> | null;
        secondaryBadge?: string;
        secondaryTitle?: string;
        secondaryRichText?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
        secondaryImage?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        secondaryButtons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          openInNewTab: boolean | null;
          href: string | null;
        }> | null;
      }
    | {
        _key: string;
        _type: "faqAccordion";
        eyebrow?: string;
        title?: string;
        subtitle?: string;
        link?: {
          title?: string;
          description?: string;
          url?: CustomUrl;
        };
        faqs?: Array<{
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          _key: string;
          [internalGroqTypeReferenceTo]?: "faq";
        }>;
      }
    | {
        _key: string;
        _type: "featureCardsIcon";
        eyebrow?: string;
        title?: string;
        richText?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            customLink?: CustomUrl;
            _type: "customLink";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
        cards?: Array<{
          icon?: IconPicker;
          title?: string;
          richText?: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              customLink?: CustomUrl;
              _type: "customLink";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }>;
          _type: "featureCardIcon";
          _key: string;
        }>;
      }
    | {
        _key: string;
        _type: "featuredBlogs";
        title?: string;
        subtitle?: string;
        displayMode?: "curated" | "latest";
        blogCount?: "1" | "2" | "3";
        blogs?: Array<{
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          _key: string;
          [internalGroqTypeReferenceTo]?: "blog";
        }>;
        showViewAllButton?: "no" | "yes";
        buttonText?: string;
      }
    | {
        _key: string;
        _type: "formBlock";
        title?: string;
        description?: string;
        form?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "formularios";
        };
        displayMode?: "inline" | "modal";
        triggerText?: string;
        buttonPosition?: "default" | "fixed";
        variant?: "centered" | "default" | "withBackground";
      }
    | {
        _key: string;
        _type: "genericTable";
        title?: string;
        description?: string;
        columnCount?: 3 | 4 | 5 | 6;
        columnHeaders?: Array<string>;
        rows?: Array<{
          cells?: Array<
            | {
                content?: string;
                isLastColumn?: boolean;
                _type: "cell";
                _key: string;
              }
            | {
                content?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                isLastColumn?: boolean;
                _type: "richCell";
                _key: string;
              }
          >;
          _type: "row";
          _key: string;
        }>;
        variant?: "bordered" | "compact" | "default" | "striped";
      }
    | {
        _key: string;
        _type: "hero";
        variant?: "accent1" | "accent2" | "alt" | "brand" | "default";
        badge?: string;
        title?: string;
        titleFont?: "default" | "statement";
        richText?: Array<
          | ({
              _key: string;
            } & Button)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        >;
        image?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        imageAlignment?: "default" | "fit";
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
    | {
        _key: string;
        _type: "highlightedAspects";
        title?: string;
        description?: string;
        aspects?: Array<{
          title?: string;
          variant?: "icon" | "image" | "none";
          image?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
          };
          content?: Array<
            | ({
                _key: string;
              } & Button)
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
                listItem?: "bullet" | "number";
                markDefs?: Array<{
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }
          >;
          _type: "aspect";
          _key: string;
        }>;
        columns?: "2" | "3" | "4";
      }
    | {
        _key: string;
        _type: "imageGallery";
        title?: string;
        description?: string;
        images?: Array<
          {
            _key: string;
          } & GalleryImage
        >;
        layout?: "bento" | "carousel" | "grid" | "masonry";
        columns?: "2" | "3" | "4";
        slidesPerRow?: 1 | 2 | 3 | 4 | 5;
      }
    | {
        _key: string;
        _type: "imageLinkCards";
        eyebrow?: string;
        title?: string;
        richText?: Array<
          | ({
              _key: string;
            } & Button)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        >;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
        cards?: Array<{
          title?: string;
          description?: string;
          image?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
          };
          url?: CustomUrl;
          _type: "imageLinkCard";
          _key: string;
        }>;
      }
    | {
        _key: string;
        _type: "infoSection";
        title?: string;
        headingLevel?: "h1" | "h2" | "h3" | "h4";
        content?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
      }
    | {
        _key: string;
        _type: "mainHero";
        badge?: string;
        title?: string;
        titleFont?: "default" | "statement";
        layout?: "default" | "fullImage";
        richText?: Array<
          | ({
              _key: string;
            } & Button)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        >;
        backgroundType?: "image" | "video";
        backgroundImage?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        backgroundVideo?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
          };
          media?: unknown;
          _type: "file";
        };
        image?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
    | {
        _key: string;
        _type: "productListing";
        title?: string;
        productType?: "buses" | "camiones" | "motoresPenta";
        taxonomyFilter?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "skosConcept";
        };
      }
    | {
        _key: string;
        _type: "specificationsTable";
        title?: string;
        description?: string;
        specifications?: Array<
          {
            _key: string;
          } & SpecificationItem
        >;
        variant?: "bordered" | "compact" | "default" | "striped";
      }
    | {
        _key: string;
        _type: "subscribeNewsletter";
        title?: string;
        subTitle?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            customLink?: CustomUrl;
            _type: "customLink";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
        helperText?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            customLink?: CustomUrl;
            _type: "customLink";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
      }
    | {
        _key: string;
        _type: "sucursalesSelector";
        title?: string;
        description?: string;
        showMap?: boolean;
        showAllRegions?: boolean;
        selectedRegions?: Array<string>;
        variant?: "cards" | "compact" | "default";
      }
    | {
        _key: string;
        _type: "tabs";
        title?: string;
        description?: string;
        tabs?: Array<{
          label?: string;
          content?: Array<
            | {
                eyebrow?: string;
                title?: string;
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                buttons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                _type: "cta";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                cursos?: Array<{
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  _key: string;
                  [internalGroqTypeReferenceTo]?: "cursos";
                }>;
                displayMode?: "grid" | "list";
                showAllDates?: "no" | "yes";
                _type: "cursosBlock";
                _key: string;
              }
            | {
                variant?:
                  | "accent1"
                  | "accent2"
                  | "alt"
                  | "brand"
                  | "default"
                  | "inset";
                primaryBadge?: string;
                primaryTitle?: string;
                primaryRichText?: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "blockquote"
                    | "h1"
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    href?: string;
                    _type: "link";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }>;
                primaryImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                primaryButtons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                secondaryBadge?: string;
                secondaryTitle?: string;
                secondaryRichText?: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "blockquote"
                    | "h1"
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    href?: string;
                    _type: "link";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }>;
                secondaryImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                secondaryButtons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                _type: "doubleHero";
                _key: string;
              }
            | {
                eyebrow?: string;
                title?: string;
                subtitle?: string;
                link?: {
                  title?: string;
                  description?: string;
                  url?: CustomUrl;
                };
                faqs?: Array<{
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  _key: string;
                  [internalGroqTypeReferenceTo]?: "faq";
                }>;
                _type: "faqAccordion";
                _key: string;
              }
            | {
                eyebrow?: string;
                title?: string;
                richText?: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }>;
                cards?: Array<{
                  icon?: IconPicker;
                  title?: string;
                  richText?: Array<{
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs?: Array<{
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                    }>;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }>;
                  _type: "featureCardIcon";
                  _key: string;
                }>;
                _type: "featureCardsIcon";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                form?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "formularios";
                };
                displayMode?: "inline" | "modal";
                triggerText?: string;
                buttonPosition?: "default" | "fixed";
                variant?: "centered" | "default" | "withBackground";
                _type: "formBlock";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                columnCount?: 3 | 4 | 5 | 6;
                columnHeaders?: Array<string>;
                rows?: Array<{
                  cells?: Array<
                    | {
                        content?: string;
                        isLastColumn?: boolean;
                        _type: "cell";
                        _key: string;
                      }
                    | {
                        content?: Array<
                          | ({
                              _key: string;
                            } & Button)
                          | {
                              children?: Array<{
                                marks?: Array<string>;
                                text?: string;
                                _type: "span";
                                _key: string;
                              }>;
                              style?:
                                | "h2"
                                | "h3"
                                | "h4"
                                | "h5"
                                | "h6"
                                | "inline"
                                | "normal";
                              listItem?: "bullet" | "number";
                              markDefs?: Array<{
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }>;
                              level?: number;
                              _type: "block";
                              _key: string;
                            }
                          | {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                              };
                              media?: unknown;
                              hotspot?: SanityImageHotspot;
                              crop?: SanityImageCrop;
                              caption?: string;
                              _type: "image";
                              _key: string;
                            }
                        >;
                        isLastColumn?: boolean;
                        _type: "richCell";
                        _key: string;
                      }
                  >;
                  _type: "row";
                  _key: string;
                }>;
                variant?: "bordered" | "compact" | "default" | "striped";
                _type: "genericTable";
                _key: string;
              }
            | {
                variant?: "accent1" | "accent2" | "alt" | "brand" | "default";
                badge?: string;
                title?: string;
                titleFont?: "default" | "statement";
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                image?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                imageAlignment?: "default" | "fit";
                buttons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                _type: "hero";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                aspects?: Array<{
                  title?: string;
                  variant?: "icon" | "image" | "none";
                  image?: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    _type: "image";
                  };
                  content?: Array<
                    | ({
                        _key: string;
                      } & Button)
                    | {
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?:
                          | "h2"
                          | "h3"
                          | "h4"
                          | "h5"
                          | "h6"
                          | "inline"
                          | "normal";
                        listItem?: "bullet" | "number";
                        markDefs?: Array<{
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }>;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }
                  >;
                  _type: "aspect";
                  _key: string;
                }>;
                columns?: "2" | "3" | "4";
                _type: "highlightedAspects";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                images?: Array<
                  {
                    _key: string;
                  } & GalleryImage
                >;
                layout?: "bento" | "carousel" | "grid" | "masonry";
                columns?: "2" | "3" | "4";
                slidesPerRow?: 1 | 2 | 3 | 4 | 5;
                _type: "imageGallery";
                _key: string;
              }
            | {
                eyebrow?: string;
                title?: string;
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                buttons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                cards?: Array<{
                  title?: string;
                  description?: string;
                  image?: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    _type: "image";
                  };
                  url?: CustomUrl;
                  _type: "imageLinkCard";
                  _key: string;
                }>;
                _type: "imageLinkCards";
                _key: string;
              }
            | {
                badge?: string;
                title?: string;
                titleFont?: "default" | "statement";
                layout?: "default" | "fullImage";
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                backgroundType?: "image" | "video";
                backgroundImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                backgroundVideo?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                image?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                buttons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                _type: "mainHero";
                _key: string;
              }
            | {
                title?: string;
                productType?: "buses" | "camiones" | "motoresPenta";
                taxonomyFilter?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "skosConcept";
                };
                _type: "productListing";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                specifications?: Array<
                  {
                    _key: string;
                  } & SpecificationItem
                >;
                variant?: "bordered" | "compact" | "default" | "striped";
                _type: "specificationsTable";
                _key: string;
              }
            | {
                title?: string;
                subTitle?: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }>;
                helperText?: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }>;
                _type: "subscribeNewsletter";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                showMap?: boolean;
                showAllRegions?: boolean;
                selectedRegions?: Array<string>;
                variant?: "cards" | "compact" | "default";
                _type: "sucursalesSelector";
                _key: string;
              }
            | {
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                _type: "textBlock";
                _key: string;
              }
            | {
                title?: string;
                videoType?: "mp4" | "youtube";
                mp4File?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                youtubeUrl?: string;
                posterImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                showControls?: "no" | "yes";
                autoplay?: "no" | "yes";
                loop?: "no" | "yes";
                allowFullscreen?: "no" | "yes";
                _type: "videoBlock";
                _key: string;
              }
            | {
                variant?: "accent1" | "accent2" | "alt" | "brand" | "default";
                badge?: string;
                title?: string;
                titleFont?: "default" | "statement";
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                videoType?: "mp4" | "youtube";
                mp4File?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                youtubeUrl?: string;
                posterImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                showControls?: "no" | "yes";
                autoplay?: "no" | "yes";
                loop?: "no" | "yes";
                buttons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                _type: "videoHero";
                _key: string;
              }
          >;
          _type: "tab";
          _key: string;
        }>;
      }
    | {
        _key: string;
        _type: "textBlock";
        richText?: Array<
          | ({
              _key: string;
            } & Button)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        >;
      }
    | {
        _key: string;
        _type: "videoBlock";
        title?: string;
        videoType?: "mp4" | "youtube";
        mp4File?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
          };
          media?: unknown;
          _type: "file";
        };
        youtubeUrl?: string;
        posterImage?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        showControls?: "no" | "yes";
        autoplay?: "no" | "yes";
        loop?: "no" | "yes";
        allowFullscreen?: "no" | "yes";
      }
    | {
        _key: string;
        _type: "videoHero";
        variant?: "accent1" | "accent2" | "alt" | "brand" | "default";
        badge?: string;
        title?: string;
        titleFont?: "default" | "statement";
        richText?: Array<
          | ({
              _key: string;
            } & Button)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        >;
        videoType?: "mp4" | "youtube";
        mp4File?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
          };
          media?: unknown;
          _type: "file";
        };
        youtubeUrl?: string;
        posterImage?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        showControls?: "no" | "yes";
        autoplay?: "no" | "yes";
        loop?: "no" | "yes";
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
  > | null;
  taxonomias: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "skosConcept";
  } | null;
  slug: Slug | null;
} | null;
// Variable: MOTOR_PENTA_BY_SLUG_QUERY
// Query: *[_type == "motoresPenta" && slug.current == $slug][0]{  _id,  _type,  title,  subtitle,  description,  image,    "pageBuilder": pageBuilder[]{    ...,    _type,      _type == "cta" => {    ...,      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  }  },  _type == "hero" => {    ...,      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  }  },  _type == "mainHero" => {    ...,      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  }  },  _type == "videoHero" => {    ...,      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  }  },  _type == "imageLinkCards" => {    ...,      buttons[]{    text,    variant,    icon,    _key,    _type,      "href": select(    defined(url.type) => select(      url.type == "internal" => url.internal->slug.current,      url.type == "external" => url.external,      url.type == "file" => url.file.asset->url,      "#"    ),    defined(url.customUrl.type) => select(      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,      url.customUrl.type == "external" => url.customUrl.external,      url.customUrl.type == "file" => url.customUrl.file.asset->url,      "#"    ),    "#"  ),  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)  }  },  _type == "doubleHero" => {    ...,    "primaryButtons": primaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    "secondaryButtons": secondaryButtons[]{      text,      variant,      icon,      _key,      _type,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    }  }  },  taxonomias,  slug}
export type MOTOR_PENTA_BY_SLUG_QUERYResult = {
  _id: string;
  _type: "motoresPenta";
  title: string | null;
  subtitle: string | null;
  description: string | null;
  image: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
  pageBuilder: Array<
    | {
        _key: string;
        _type: "cta";
        eyebrow?: string;
        title?: string;
        richText?: Array<
          | ({
              _key: string;
            } & Button)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        >;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
    | {
        _key: string;
        _type: "cursosBlock";
        title?: string;
        description?: string;
        cursos?: Array<{
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          _key: string;
          [internalGroqTypeReferenceTo]?: "cursos";
        }>;
        displayMode?: "grid" | "list";
        showAllDates?: "no" | "yes";
      }
    | {
        _key: string;
        _type: "doubleHero";
        variant?: "accent1" | "accent2" | "alt" | "brand" | "default" | "inset";
        primaryBadge?: string;
        primaryTitle?: string;
        primaryRichText?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
        primaryImage?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        primaryButtons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          openInNewTab: boolean | null;
          href: string | null;
        }> | null;
        secondaryBadge?: string;
        secondaryTitle?: string;
        secondaryRichText?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
        secondaryImage?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        secondaryButtons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          openInNewTab: boolean | null;
          href: string | null;
        }> | null;
      }
    | {
        _key: string;
        _type: "faqAccordion";
        eyebrow?: string;
        title?: string;
        subtitle?: string;
        link?: {
          title?: string;
          description?: string;
          url?: CustomUrl;
        };
        faqs?: Array<{
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          _key: string;
          [internalGroqTypeReferenceTo]?: "faq";
        }>;
      }
    | {
        _key: string;
        _type: "featureCardsIcon";
        eyebrow?: string;
        title?: string;
        richText?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            customLink?: CustomUrl;
            _type: "customLink";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
        cards?: Array<{
          icon?: IconPicker;
          title?: string;
          richText?: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              customLink?: CustomUrl;
              _type: "customLink";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }>;
          _type: "featureCardIcon";
          _key: string;
        }>;
      }
    | {
        _key: string;
        _type: "featuredBlogs";
        title?: string;
        subtitle?: string;
        displayMode?: "curated" | "latest";
        blogCount?: "1" | "2" | "3";
        blogs?: Array<{
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          _key: string;
          [internalGroqTypeReferenceTo]?: "blog";
        }>;
        showViewAllButton?: "no" | "yes";
        buttonText?: string;
      }
    | {
        _key: string;
        _type: "formBlock";
        title?: string;
        description?: string;
        form?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "formularios";
        };
        displayMode?: "inline" | "modal";
        triggerText?: string;
        buttonPosition?: "default" | "fixed";
        variant?: "centered" | "default" | "withBackground";
      }
    | {
        _key: string;
        _type: "genericTable";
        title?: string;
        description?: string;
        columnCount?: 3 | 4 | 5 | 6;
        columnHeaders?: Array<string>;
        rows?: Array<{
          cells?: Array<
            | {
                content?: string;
                isLastColumn?: boolean;
                _type: "cell";
                _key: string;
              }
            | {
                content?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                isLastColumn?: boolean;
                _type: "richCell";
                _key: string;
              }
          >;
          _type: "row";
          _key: string;
        }>;
        variant?: "bordered" | "compact" | "default" | "striped";
      }
    | {
        _key: string;
        _type: "hero";
        variant?: "accent1" | "accent2" | "alt" | "brand" | "default";
        badge?: string;
        title?: string;
        titleFont?: "default" | "statement";
        richText?: Array<
          | ({
              _key: string;
            } & Button)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        >;
        image?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        imageAlignment?: "default" | "fit";
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
    | {
        _key: string;
        _type: "highlightedAspects";
        title?: string;
        description?: string;
        aspects?: Array<{
          title?: string;
          variant?: "icon" | "image" | "none";
          image?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
          };
          content?: Array<
            | ({
                _key: string;
              } & Button)
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
                listItem?: "bullet" | "number";
                markDefs?: Array<{
                  customLink?: CustomUrl;
                  _type: "customLink";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }
          >;
          _type: "aspect";
          _key: string;
        }>;
        columns?: "2" | "3" | "4";
      }
    | {
        _key: string;
        _type: "imageGallery";
        title?: string;
        description?: string;
        images?: Array<
          {
            _key: string;
          } & GalleryImage
        >;
        layout?: "bento" | "carousel" | "grid" | "masonry";
        columns?: "2" | "3" | "4";
        slidesPerRow?: 1 | 2 | 3 | 4 | 5;
      }
    | {
        _key: string;
        _type: "imageLinkCards";
        eyebrow?: string;
        title?: string;
        richText?: Array<
          | ({
              _key: string;
            } & Button)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        >;
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
        cards?: Array<{
          title?: string;
          description?: string;
          image?: {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            media?: unknown;
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
          };
          url?: CustomUrl;
          _type: "imageLinkCard";
          _key: string;
        }>;
      }
    | {
        _key: string;
        _type: "infoSection";
        title?: string;
        headingLevel?: "h1" | "h2" | "h3" | "h4";
        content?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?:
            | "blockquote"
            | "h1"
            | "h2"
            | "h3"
            | "h4"
            | "h5"
            | "h6"
            | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
      }
    | {
        _key: string;
        _type: "mainHero";
        badge?: string;
        title?: string;
        titleFont?: "default" | "statement";
        layout?: "default" | "fullImage";
        richText?: Array<
          | ({
              _key: string;
            } & Button)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        >;
        backgroundType?: "image" | "video";
        backgroundImage?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        backgroundVideo?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
          };
          media?: unknown;
          _type: "file";
        };
        image?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
    | {
        _key: string;
        _type: "productListing";
        title?: string;
        productType?: "buses" | "camiones" | "motoresPenta";
        taxonomyFilter?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "skosConcept";
        };
      }
    | {
        _key: string;
        _type: "specificationsTable";
        title?: string;
        description?: string;
        specifications?: Array<
          {
            _key: string;
          } & SpecificationItem
        >;
        variant?: "bordered" | "compact" | "default" | "striped";
      }
    | {
        _key: string;
        _type: "subscribeNewsletter";
        title?: string;
        subTitle?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            customLink?: CustomUrl;
            _type: "customLink";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
        helperText?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            customLink?: CustomUrl;
            _type: "customLink";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }>;
      }
    | {
        _key: string;
        _type: "sucursalesSelector";
        title?: string;
        description?: string;
        showMap?: boolean;
        showAllRegions?: boolean;
        selectedRegions?: Array<string>;
        variant?: "cards" | "compact" | "default";
      }
    | {
        _key: string;
        _type: "tabs";
        title?: string;
        description?: string;
        tabs?: Array<{
          label?: string;
          content?: Array<
            | {
                eyebrow?: string;
                title?: string;
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                buttons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                _type: "cta";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                cursos?: Array<{
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  _key: string;
                  [internalGroqTypeReferenceTo]?: "cursos";
                }>;
                displayMode?: "grid" | "list";
                showAllDates?: "no" | "yes";
                _type: "cursosBlock";
                _key: string;
              }
            | {
                variant?:
                  | "accent1"
                  | "accent2"
                  | "alt"
                  | "brand"
                  | "default"
                  | "inset";
                primaryBadge?: string;
                primaryTitle?: string;
                primaryRichText?: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "blockquote"
                    | "h1"
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    href?: string;
                    _type: "link";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }>;
                primaryImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                primaryButtons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                secondaryBadge?: string;
                secondaryTitle?: string;
                secondaryRichText?: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "blockquote"
                    | "h1"
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    href?: string;
                    _type: "link";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }>;
                secondaryImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                secondaryButtons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                _type: "doubleHero";
                _key: string;
              }
            | {
                eyebrow?: string;
                title?: string;
                subtitle?: string;
                link?: {
                  title?: string;
                  description?: string;
                  url?: CustomUrl;
                };
                faqs?: Array<{
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  _key: string;
                  [internalGroqTypeReferenceTo]?: "faq";
                }>;
                _type: "faqAccordion";
                _key: string;
              }
            | {
                eyebrow?: string;
                title?: string;
                richText?: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }>;
                cards?: Array<{
                  icon?: IconPicker;
                  title?: string;
                  richText?: Array<{
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?:
                      | "h2"
                      | "h3"
                      | "h4"
                      | "h5"
                      | "h6"
                      | "inline"
                      | "normal";
                    listItem?: "bullet" | "number";
                    markDefs?: Array<{
                      customLink?: CustomUrl;
                      _type: "customLink";
                      _key: string;
                    }>;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }>;
                  _type: "featureCardIcon";
                  _key: string;
                }>;
                _type: "featureCardsIcon";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                form?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "formularios";
                };
                displayMode?: "inline" | "modal";
                triggerText?: string;
                buttonPosition?: "default" | "fixed";
                variant?: "centered" | "default" | "withBackground";
                _type: "formBlock";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                columnCount?: 3 | 4 | 5 | 6;
                columnHeaders?: Array<string>;
                rows?: Array<{
                  cells?: Array<
                    | {
                        content?: string;
                        isLastColumn?: boolean;
                        _type: "cell";
                        _key: string;
                      }
                    | {
                        content?: Array<
                          | ({
                              _key: string;
                            } & Button)
                          | {
                              children?: Array<{
                                marks?: Array<string>;
                                text?: string;
                                _type: "span";
                                _key: string;
                              }>;
                              style?:
                                | "h2"
                                | "h3"
                                | "h4"
                                | "h5"
                                | "h6"
                                | "inline"
                                | "normal";
                              listItem?: "bullet" | "number";
                              markDefs?: Array<{
                                customLink?: CustomUrl;
                                _type: "customLink";
                                _key: string;
                              }>;
                              level?: number;
                              _type: "block";
                              _key: string;
                            }
                          | {
                              asset?: {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                              };
                              media?: unknown;
                              hotspot?: SanityImageHotspot;
                              crop?: SanityImageCrop;
                              caption?: string;
                              _type: "image";
                              _key: string;
                            }
                        >;
                        isLastColumn?: boolean;
                        _type: "richCell";
                        _key: string;
                      }
                  >;
                  _type: "row";
                  _key: string;
                }>;
                variant?: "bordered" | "compact" | "default" | "striped";
                _type: "genericTable";
                _key: string;
              }
            | {
                variant?: "accent1" | "accent2" | "alt" | "brand" | "default";
                badge?: string;
                title?: string;
                titleFont?: "default" | "statement";
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                image?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                imageAlignment?: "default" | "fit";
                buttons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                _type: "hero";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                aspects?: Array<{
                  title?: string;
                  variant?: "icon" | "image" | "none";
                  image?: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    _type: "image";
                  };
                  content?: Array<
                    | ({
                        _key: string;
                      } & Button)
                    | {
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?:
                          | "h2"
                          | "h3"
                          | "h4"
                          | "h5"
                          | "h6"
                          | "inline"
                          | "normal";
                        listItem?: "bullet" | "number";
                        markDefs?: Array<{
                          customLink?: CustomUrl;
                          _type: "customLink";
                          _key: string;
                        }>;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }
                  >;
                  _type: "aspect";
                  _key: string;
                }>;
                columns?: "2" | "3" | "4";
                _type: "highlightedAspects";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                images?: Array<
                  {
                    _key: string;
                  } & GalleryImage
                >;
                layout?: "bento" | "carousel" | "grid" | "masonry";
                columns?: "2" | "3" | "4";
                slidesPerRow?: 1 | 2 | 3 | 4 | 5;
                _type: "imageGallery";
                _key: string;
              }
            | {
                eyebrow?: string;
                title?: string;
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                buttons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                cards?: Array<{
                  title?: string;
                  description?: string;
                  image?: {
                    asset?: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    };
                    media?: unknown;
                    hotspot?: SanityImageHotspot;
                    crop?: SanityImageCrop;
                    _type: "image";
                  };
                  url?: CustomUrl;
                  _type: "imageLinkCard";
                  _key: string;
                }>;
                _type: "imageLinkCards";
                _key: string;
              }
            | {
                badge?: string;
                title?: string;
                titleFont?: "default" | "statement";
                layout?: "default" | "fullImage";
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                backgroundType?: "image" | "video";
                backgroundImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                backgroundVideo?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                image?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                buttons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                _type: "mainHero";
                _key: string;
              }
            | {
                title?: string;
                productType?: "buses" | "camiones" | "motoresPenta";
                taxonomyFilter?: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "skosConcept";
                };
                _type: "productListing";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                specifications?: Array<
                  {
                    _key: string;
                  } & SpecificationItem
                >;
                variant?: "bordered" | "compact" | "default" | "striped";
                _type: "specificationsTable";
                _key: string;
              }
            | {
                title?: string;
                subTitle?: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }>;
                helperText?: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?:
                    | "h2"
                    | "h3"
                    | "h4"
                    | "h5"
                    | "h6"
                    | "inline"
                    | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    customLink?: CustomUrl;
                    _type: "customLink";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }>;
                _type: "subscribeNewsletter";
                _key: string;
              }
            | {
                title?: string;
                description?: string;
                showMap?: boolean;
                showAllRegions?: boolean;
                selectedRegions?: Array<string>;
                variant?: "cards" | "compact" | "default";
                _type: "sucursalesSelector";
                _key: string;
              }
            | {
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                _type: "textBlock";
                _key: string;
              }
            | {
                title?: string;
                videoType?: "mp4" | "youtube";
                mp4File?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                youtubeUrl?: string;
                posterImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                showControls?: "no" | "yes";
                autoplay?: "no" | "yes";
                loop?: "no" | "yes";
                allowFullscreen?: "no" | "yes";
                _type: "videoBlock";
                _key: string;
              }
            | {
                variant?: "accent1" | "accent2" | "alt" | "brand" | "default";
                badge?: string;
                title?: string;
                titleFont?: "default" | "statement";
                richText?: Array<
                  | ({
                      _key: string;
                    } & Button)
                  | {
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?:
                        | "h2"
                        | "h3"
                        | "h4"
                        | "h5"
                        | "h6"
                        | "inline"
                        | "normal";
                      listItem?: "bullet" | "number";
                      markDefs?: Array<{
                        customLink?: CustomUrl;
                        _type: "customLink";
                        _key: string;
                      }>;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }
                  | {
                      asset?: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      };
                      media?: unknown;
                      hotspot?: SanityImageHotspot;
                      crop?: SanityImageCrop;
                      caption?: string;
                      _type: "image";
                      _key: string;
                    }
                >;
                videoType?: "mp4" | "youtube";
                mp4File?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
                  };
                  media?: unknown;
                  _type: "file";
                };
                youtubeUrl?: string;
                posterImage?: {
                  asset?: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  };
                  media?: unknown;
                  hotspot?: SanityImageHotspot;
                  crop?: SanityImageCrop;
                  _type: "image";
                };
                showControls?: "no" | "yes";
                autoplay?: "no" | "yes";
                loop?: "no" | "yes";
                buttons?: Array<
                  {
                    _key: string;
                  } & Button
                >;
                _type: "videoHero";
                _key: string;
              }
          >;
          _type: "tab";
          _key: string;
        }>;
      }
    | {
        _key: string;
        _type: "textBlock";
        richText?: Array<
          | ({
              _key: string;
            } & Button)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        >;
      }
    | {
        _key: string;
        _type: "videoBlock";
        title?: string;
        videoType?: "mp4" | "youtube";
        mp4File?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
          };
          media?: unknown;
          _type: "file";
        };
        youtubeUrl?: string;
        posterImage?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        showControls?: "no" | "yes";
        autoplay?: "no" | "yes";
        loop?: "no" | "yes";
        allowFullscreen?: "no" | "yes";
      }
    | {
        _key: string;
        _type: "videoHero";
        variant?: "accent1" | "accent2" | "alt" | "brand" | "default";
        badge?: string;
        title?: string;
        titleFont?: "default" | "statement";
        richText?: Array<
          | ({
              _key: string;
            } & Button)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "h2" | "h3" | "h4" | "h5" | "h6" | "inline" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                customLink?: CustomUrl;
                _type: "customLink";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              media?: unknown;
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              caption?: string;
              _type: "image";
              _key: string;
            }
        >;
        videoType?: "mp4" | "youtube";
        mp4File?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
          };
          media?: unknown;
          _type: "file";
        };
        youtubeUrl?: string;
        posterImage?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        showControls?: "no" | "yes";
        autoplay?: "no" | "yes";
        loop?: "no" | "yes";
        buttons: Array<{
          text: string | null;
          variant:
            | "default"
            | "link"
            | "outline"
            | "primary"
            | "secondary"
            | null;
          icon: "volvo-chevron-right" | "volvo-file-down" | null;
          _key: string;
          _type: "button";
          href: string | "#" | null;
          openInNewTab: boolean | false;
        }> | null;
      }
  > | null;
  taxonomias: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "skosConcept";
  } | null;
  slug: Slug | null;
} | null;
// Variable: CONTACT_INFO_QUERY
// Query: *[_type == "settings"][0]{  customerServicePhone,  roadEmergencyPhone,  roadEmergencyPhone2,  "contactPageUrl": select(    contactPageUrl.type == "internal" => contactPageUrl.internal->slug.current,    contactPageUrl.type == "external" => contactPageUrl.external,    null  )}
export type CONTACT_INFO_QUERYResult = {
  customerServicePhone: string | null;
  roadEmergencyPhone: string | null;
  roadEmergencyPhone2: string | null;
  contactPageUrl: string | null;
} | null;
// Variable: querySucursalesData
// Query: *[_type == "sucursales"]{  _id,  _type,  title,  region,  telefono,  email,  direccion,  latitud,  longitud,  "slug": slug.current,  "personas": personas[]{    nombre,    cargo,    telefono,    email  }} | order(region asc, title asc)
export type QuerySucursalesDataResult = Array<{
  _id: string;
  _type: "sucursales";
  title: string | null;
  region: string | null;
  telefono: string | null;
  email: string | null;
  direccion: string | null;
  latitud: number | null;
  longitud: number | null;
  slug: string | null;
  personas: Array<{
    nombre: string | null;
    cargo: string | null;
    telefono: string | null;
    email: string | null;
  }> | null;
}>;
// Variable: querySucursalBySlug
// Query: *[  _type == "sucursales"   && slug.current == $slug][0]{  _id,  _type,  title,  region,  telefono,  email,  direccion,  latitud,  longitud,  "slug": slug.current,  "personas": personas[]{    nombre,    cargo,    telefono,    email  }}
export type QuerySucursalBySlugResult = {
  _id: string;
  _type: "sucursales";
  title: string | null;
  region: string | null;
  telefono: string | null;
  email: string | null;
  direccion: string | null;
  latitud: number | null;
  longitud: number | null;
  slug: string | null;
  personas: Array<{
    nombre: string | null;
    cargo: string | null;
    telefono: string | null;
    email: string | null;
  }> | null;
} | null;
// Variable: querySucursalesByRegion
// Query: *[  _type == "sucursales"   && region == $region]{  _id,  _type,  title,  region,  telefono,  email,  direccion,  latitud,  longitud,  "slug": slug.current,  "personas": personas[]{    nombre,    cargo,    telefono,    email  }} | order(title asc)
export type QuerySucursalesByRegionResult = Array<{
  _id: string;
  _type: "sucursales";
  title: string | null;
  region: string | null;
  telefono: string | null;
  email: string | null;
  direccion: string | null;
  latitud: number | null;
  longitud: number | null;
  slug: string | null;
  personas: Array<{
    nombre: string | null;
    cargo: string | null;
    telefono: string | null;
    email: string | null;
  }> | null;
}>;
// Variable: querySucursalesPaths
// Query: *[_type == "sucursales" && defined(slug.current)].slug.current
export type QuerySucursalesPathsResult = Array<string | null>;
// Variable: queryAllRegiones
// Query: *[_type == "sucursales" && defined(region)].region | order(region asc) | unique
export type QueryAllRegionesResult = Array<string | null>;
// Variable: SEARCH_QUERY_WITH_SUCURSALES
// Query: {  "results": *[    _type in ["page", "blog", "camiones", "buses", "motoresPenta", "sucursales", "cursos"]    && (      title match $searchTerm ||       description match $searchTerm ||      region match $searchTerm    )  ] | order(_createdAt desc) [0...20] {    _id,    _type,    title,    description,    "slug": slug.current,    "image": image{      "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background    },    "taxonomy": coalesce(taxonomias->{      prefLabel,      conceptId    }, null),    _type == "sucursales" => {      region,      direccion    },    _type == "cursos" => {      "fechasProximas": *[_type == "cursos" && _id == ^._id][0].fechasCapacitacion[fecha > now()][0..1]    },    _createdAt  }}
export type SEARCH_QUERY_WITH_SUCURSALESResult = {
  results: Array<
    | {
        _id: string;
        _type: "blog";
        title: string | null;
        description: string | null;
        slug: string | null;
        image: {
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        taxonomy: null;
        _createdAt: string;
      }
    | {
        _id: string;
        _type: "buses";
        title: string | null;
        description: string | null;
        slug: string | null;
        image: {
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        taxonomy: {
          prefLabel: string | null;
          conceptId: string | null;
        } | null;
        _createdAt: string;
      }
    | {
        _id: string;
        _type: "camiones";
        title: string | null;
        description: string | null;
        slug: string | null;
        image: {
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        taxonomy: {
          prefLabel: string | null;
          conceptId: string | null;
        } | null;
        _createdAt: string;
      }
    | {
        _id: string;
        _type: "cursos";
        title: string | null;
        description: RichText | null;
        slug: string | null;
        image: {
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        taxonomy: null;
        fechasProximas: Array<{
          nombre?: string;
          profesor?: "Abraham Medina" | "Patricio Barahona";
          fecha?: string;
          hora?: string;
          _type: "fechaCapacitacion";
          _key: string;
        }> | null;
        _createdAt: string;
      }
    | {
        _id: string;
        _type: "motoresPenta";
        title: string | null;
        description: string | null;
        slug: string | null;
        image: {
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        taxonomy: {
          prefLabel: string | null;
          conceptId: string | null;
        } | null;
        _createdAt: string;
      }
    | {
        _id: string;
        _type: "page";
        title: string | null;
        description: string | null;
        slug: string | null;
        image: {
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        taxonomy: null;
        _createdAt: string;
      }
    | {
        _id: string;
        _type: "sucursales";
        title: string | null;
        description: null;
        slug: string | null;
        image: null;
        taxonomy: null;
        region: string | null;
        direccion: string | null;
        _createdAt: string;
      }
  >;
};
// Variable: queryCursosData
// Query: *[_type == "cursos"]{  _id,  _type,  title,  description,  "slug": slug.current,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  "fechasCapacitacion": fechasCapacitacion[]{    nombre,    profesor,    fecha,    hora  }} | order(title asc)
export type QueryCursosDataResult = Array<{
  _id: string;
  _type: "cursos";
  title: string | null;
  description: RichText | null;
  slug: string | null;
  image: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt: string | "Image-Broken";
    _type: "image";
    blurData: string | null;
    dominantColor: string | null;
  } | null;
  fechasCapacitacion: Array<{
    nombre: string | null;
    profesor: "Abraham Medina" | "Patricio Barahona" | null;
    fecha: string | null;
    hora: string | null;
  }> | null;
}>;
// Variable: queryCursoBySlug
// Query: *[  _type == "cursos"   && slug.current == $slug][0]{  _id,  _type,  title,  description,  "slug": slug.current,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },  "fechasCapacitacion": fechasCapacitacion[]{    nombre,    profesor,    fecha,    hora  }}
export type QueryCursoBySlugResult = {
  _id: string;
  _type: "cursos";
  title: string | null;
  description: RichText | null;
  slug: string | null;
  image: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt: string | "Image-Broken";
    _type: "image";
    blurData: string | null;
    dominantColor: string | null;
  } | null;
  fechasCapacitacion: Array<{
    nombre: string | null;
    profesor: "Abraham Medina" | "Patricio Barahona" | null;
    fecha: string | null;
    hora: string | null;
  }> | null;
} | null;
// Variable: queryCursosPaths
// Query: *[_type == "cursos" && defined(slug.current)].slug.current
export type QueryCursosPathsResult = Array<string | null>;
// Variable: queryRepuestosData
// Query: *[_type == "repuestos"]{  _id,  _type,  title,  "slug": slug.current,  content,  category,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }} | order(title asc)
export type QueryRepuestosDataResult = Array<never>;
// Variable: queryRepuestoBySlug
// Query: *[  _type == "repuestos"   && slug.current == $slug][0]{  _id,  _type,  title,  "slug": slug.current,  category,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  },    richText[]{    ...,    _type == "button" => {      ...,      text,      variant,      icon,      "openInNewTab": url.openInNewTab,      "href": select(        url.type == "internal" => url.internal->slug.current,        url.type == "external" => url.external,        url.href      )    },    _type == "block" => {      ...,        markDefs[]{    ...,      ...customLink{    openInNewTab,    "href": select(      type == "internal" => internal->slug.current,      type == "external" => external,      type == "file" => file.asset->url,      "#"    ),  }  }    }  }}
export type QueryRepuestoBySlugResult = null;
// Variable: queryRepuestosByCategory
// Query: *[  _type == "repuestos"   && category == $category]{  _id,  _type,  title,  "slug": slug.current,  content,  category,    image{    ...,    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),    "blurData": asset->metadata.lqip,    "dominantColor": asset->metadata.palette.dominant.background,  }} | order(title asc)
export type QueryRepuestosByCategoryResult = Array<never>;
// Variable: queryRepuestosPaths
// Query: *[_type == "repuestos" && defined(slug.current)].slug.current
export type QueryRepuestosPathsResult = Array<never>;
// Variable: SEARCH_QUERY_WITH_REPUESTOS
// Query: {  "results": *[    _type in ["page", "blog", "camiones", "buses", "motoresPenta", "sucursales", "cursos", "repuestos"]    && (      title match $searchTerm ||       description match $searchTerm ||      region match $searchTerm ||      category match $searchTerm    )  ] | order(_createdAt desc) [0...20] {    _id,    _type,    title,    description,    "slug": slug.current,    "image": image{      "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),      "blurData": asset->metadata.lqip,      "dominantColor": asset->metadata.palette.dominant.background    },    "taxonomy": coalesce(taxonomias->{      prefLabel,      conceptId    }, null),    _type == "sucursales" => {      region,      direccion    },    _type == "cursos" => {      "fechasProximas": *[_type == "cursos" && _id == ^._id][0].fechasCapacitacion[fecha > now()][0..1]    },    _type == "repuestos" => {      category    },    _createdAt  }}
export type SEARCH_QUERY_WITH_REPUESTOSResult = {
  results: Array<
    | {
        _id: string;
        _type: "blog";
        title: string | null;
        description: string | null;
        slug: string | null;
        image: {
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        taxonomy: null;
        _createdAt: string;
      }
    | {
        _id: string;
        _type: "buses";
        title: string | null;
        description: string | null;
        slug: string | null;
        image: {
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        taxonomy: {
          prefLabel: string | null;
          conceptId: string | null;
        } | null;
        _createdAt: string;
      }
    | {
        _id: string;
        _type: "camiones";
        title: string | null;
        description: string | null;
        slug: string | null;
        image: {
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        taxonomy: {
          prefLabel: string | null;
          conceptId: string | null;
        } | null;
        _createdAt: string;
      }
    | {
        _id: string;
        _type: "cursos";
        title: string | null;
        description: RichText | null;
        slug: string | null;
        image: {
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        taxonomy: null;
        fechasProximas: Array<{
          nombre?: string;
          profesor?: "Abraham Medina" | "Patricio Barahona";
          fecha?: string;
          hora?: string;
          _type: "fechaCapacitacion";
          _key: string;
        }> | null;
        _createdAt: string;
      }
    | {
        _id: string;
        _type: "motoresPenta";
        title: string | null;
        description: string | null;
        slug: string | null;
        image: {
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        taxonomy: {
          prefLabel: string | null;
          conceptId: string | null;
        } | null;
        _createdAt: string;
      }
    | {
        _id: string;
        _type: "page";
        title: string | null;
        description: string | null;
        slug: string | null;
        image: {
          alt: string | "Image-Broken";
          blurData: string | null;
          dominantColor: string | null;
        } | null;
        taxonomy: null;
        _createdAt: string;
      }
    | {
        _id: string;
        _type: "sucursales";
        title: string | null;
        description: null;
        slug: string | null;
        image: null;
        taxonomy: null;
        region: string | null;
        direccion: string | null;
        _createdAt: string;
      }
  >;
};
// Variable: queryRepuestosCategories
// Query: *[_type == "repuestos" && defined(category)].category | order(category asc) | unique
export type QueryRepuestosCategoriesResult = Array<never>;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    '*[_type == "homePage" && _id == "homePage"][0]{\n    ...,\n    _id,\n    _type,\n    "slug": slug.current,\n    title,\n    description,\n    \n  pageBuilder[]{\n    ...,\n    _type,\n    \n  _type == "cta" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n  }\n,\n    \n  _type == "mainHero" => {\n    ...,\n    titleFont,\n    layout,\n    "backgroundImage": backgroundImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    "backgroundVideo": backgroundVideo.asset->url,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "hero" => {\n    ...,\n    variant,\n    titleFont,\n    imageAlignment,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "doubleHero" => {\n    ...,\n    variant,\n    primaryBadge,\n    primaryTitle,\n    "primaryRichText": primaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "primaryImage": primaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    primaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    secondaryBadge,\n    secondaryTitle,\n    "secondaryRichText": secondaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "secondaryImage": secondaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    secondaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n    \n  _type == "faqAccordion" => {\n    ...,\n    \n  "faqs": array::compact(faqs[]->{\n    title,\n    _id,\n    _type,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  })\n,\n    link{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n    \n  _type == "subscribeNewsletter" => {\n    ...,\n    "subTitle": subTitle[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "helperText": helperText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  _type == "imageLinkCards" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    "cards": array::compact(cards[]{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      ),\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    })\n  }\n,\n    \n  _type == "formBlock" => {\n    ...,\n    title,\n    description,\n    variant,\n    displayMode,\n    triggerText,\n    buttonPosition,\n    "form": form->{\n      _id,\n      title,\n      description,\n      \n  fields[]{\n    label,\n    name,\n    type,\n    required,\n    options,\n    placeholder,\n    type == "curso" => {\n      courseReference->{\n        _id,\n        title,\n        "fechasCapacitacion": fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        }\n      },\n      selectedTrainingDate\n    }\n  },\n  emailRecipients,\n  submitButtonText,\n  successMessage,\n  errorMessage\n,\n      submitButtonText,\n      successMessage,\n      errorMessage\n    }\n  }\n,\n    \n  _type == "tabs" => {\n    ...,\n    title,\n    description,\n    tabs[]{\n      _key,\n      label,\n      content[]{\n        ...,\n        _type,\n        _key,\n        \n  _type == "cta" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n  }\n,\n        \n  _type == "mainHero" => {\n    ...,\n    titleFont,\n    layout,\n    "backgroundImage": backgroundImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    "backgroundVideo": backgroundVideo.asset->url,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n        \n  _type == "hero" => {\n    ...,\n    variant,\n    titleFont,\n    imageAlignment,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n        \n  _type == "doubleHero" => {\n    ...,\n    variant,\n    primaryBadge,\n    primaryTitle,\n    "primaryRichText": primaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "primaryImage": primaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    primaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    secondaryBadge,\n    secondaryTitle,\n    "secondaryRichText": secondaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "secondaryImage": secondaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    secondaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n        \n  _type == "faqAccordion" => {\n    ...,\n    \n  "faqs": array::compact(faqs[]->{\n    title,\n    _id,\n    _type,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  })\n,\n    link{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n        \n  _type == "subscribeNewsletter" => {\n    ...,\n    "subTitle": subTitle[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "helperText": helperText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n        \n  _type == "imageLinkCards" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    "cards": array::compact(cards[]{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      ),\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    })\n  }\n,\n        \n  _type == "formBlock" => {\n    ...,\n    title,\n    description,\n    variant,\n    displayMode,\n    triggerText,\n    buttonPosition,\n    "form": form->{\n      _id,\n      title,\n      description,\n      \n  fields[]{\n    label,\n    name,\n    type,\n    required,\n    options,\n    placeholder,\n    type == "curso" => {\n      courseReference->{\n        _id,\n        title,\n        "fechasCapacitacion": fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        }\n      },\n      selectedTrainingDate\n    }\n  },\n  emailRecipients,\n  submitButtonText,\n  successMessage,\n  errorMessage\n,\n      submitButtonText,\n      successMessage,\n      errorMessage\n    }\n  }\n,\n        \n  _type == "imageGallery" => {\n    ...,\n    title,\n    description,\n    layout,\n    columns,\n    slidesPerRow,\n    "images": images[]{\n      ...,\n      "image": image{\n        ...,\n        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background,\n      },\n      caption\n    }\n  }\n,\n        \n  _type == "featuredBlogs" => {\n    ...,\n    title,\n    subtitle,\n    displayMode,\n    blogCount,\n    buttonText,\n    "showViewAllButton": showViewAllButton == "yes",\n    "blogs": select(\n      displayMode == "curated" => blogs[]-> {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      },\n      displayMode == "latest" => *[\n        _type == "blog" \n        && (seoHideFromLists != true)\n      ] | order(publishedAt desc, _createdAt desc)[0...3] {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      }\n    )\n  }\n,\n        _type == "tabs" => {\n          ...,\n          title,\n          description,\n          tabs[]{\n            _key,\n            label,\n            content[]{ \n              ...,\n              _type,\n              _key\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == "infoSection" => {\n    ...,\n    title,\n    headingLevel,\n    content[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  _type == "imageGallery" => {\n    ...,\n    title,\n    description,\n    layout,\n    columns,\n    slidesPerRow,\n    "images": images[]{\n      ...,\n      "image": image{\n        ...,\n        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background,\n      },\n      caption\n    }\n  }\n,\n    \n  _type == "specificationsTable" => {\n    ...,\n    title,\n    description,\n    variant,\n    "specifications": specifications[]{\n      _key,\n      label,\n      "content": content[]{\n        ...,\n        \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n      }\n    }\n  }\n,\n    \n  _type == "genericTable" => {\n    ...,\n    title,\n    description,\n    columnCount,\n    columnHeaders,\n    rows[]{\n      _key,\n      cells[]{\n        _key,\n        content,\n        isLastColumn,\n        _type == "richCell" => {\n          content[]{\n            ...,\n            \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n          }\n        }\n      }\n    },\n    variant\n  }\n,\n    \n  _type == "featuredBlogs" => {\n    ...,\n    title,\n    subtitle,\n    displayMode,\n    blogCount,\n    buttonText,\n    "showViewAllButton": showViewAllButton == "yes",\n    "blogs": select(\n      displayMode == "curated" => blogs[]-> {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      },\n      displayMode == "latest" => *[\n        _type == "blog" \n        && (seoHideFromLists != true)\n      ] | order(publishedAt desc, _createdAt desc)[0...3] {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      }\n    )\n  }\n,\n    \n  _type == "highlightedAspects" => {\n    title,\n    description,\n    columns,\n    aspects[]{\n      _key,\n      title,\n      variant,\n      icon,\n      image{\n        ...,\n        "alt": coalesce(asset->altText, asset->originalFilename, "Aspect Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background\n      },\n      content[]{\n        ...,\n        _type == "button" => {\n          ...,\n          text,\n          variant,\n          icon,\n          \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n        },\n        _type == "block" => {\n          ...,\n          \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n        }\n      }\n    }\n  }\n,\n    \n  _type == "videoBlock" => {\n    ...,\n    _key,\n    _type,\n    title,\n    videoType,\n    "mp4File": coalesce(\n      mp4File.asset->url,\n      mp4File.asset->sources[0].url,\n      null\n    ),\n    youtubeUrl,\n    showControls,\n    autoplay,\n    loop,\n    allowFullscreen,\n    "posterImage": posterImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Video Poster"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    }\n  }\n,\n    \n  _type == "videoHero" => {\n    ...,\n    variant,\n    titleFont,\n    videoType,\n    "mp4File": coalesce(\n      mp4File.asset->url,\n      mp4File.asset->sources[0].url,\n      null\n    ),\n    youtubeUrl,\n    showControls,\n    autoplay,\n    loop,\n    "posterImage": posterImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Video Hero Poster"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "textBlock" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "sucursalesSelector" => {\n    ...,\n    title,\n    description,\n    showMap,\n    showAllRegions,\n    selectedRegions,\n    variant\n  }\n,\n    \n  _type == "cursosBlock" => {\n    ...,\n    title,\n    description,\n    displayMode,\n    "showAllDates": showAllDates == "yes",\n    "cursos": cursos[]-> {\n      _id,\n      _type,\n      title,\n      description,\n      "slug": slug.current,\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n      "fechasCapacitacion": select(\n        ^.showAllDates == "yes" => fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        } | order(fecha asc),\n        fechasCapacitacion[fecha > now()]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        } | order(fecha asc)\n      )\n    }\n  }\n\n  }\n,\n    \n  "categoryData": {\n    "label": category,\n    "slug": category,\n    "iri": "/camiones/" + category,\n    "parent": null\n  }\n\n  }': QueryHomePageDataResult;
    '\n  *[_type == "page" && slug.current == $slug][0]{\n    ...,\n    "slug": slug.current,\n    \n  pageBuilder[]{\n    ...,\n    _type,\n    \n  _type == "cta" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n  }\n,\n    \n  _type == "mainHero" => {\n    ...,\n    titleFont,\n    layout,\n    "backgroundImage": backgroundImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    "backgroundVideo": backgroundVideo.asset->url,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "hero" => {\n    ...,\n    variant,\n    titleFont,\n    imageAlignment,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "doubleHero" => {\n    ...,\n    variant,\n    primaryBadge,\n    primaryTitle,\n    "primaryRichText": primaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "primaryImage": primaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    primaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    secondaryBadge,\n    secondaryTitle,\n    "secondaryRichText": secondaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "secondaryImage": secondaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    secondaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n    \n  _type == "faqAccordion" => {\n    ...,\n    \n  "faqs": array::compact(faqs[]->{\n    title,\n    _id,\n    _type,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  })\n,\n    link{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n    \n  _type == "subscribeNewsletter" => {\n    ...,\n    "subTitle": subTitle[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "helperText": helperText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  _type == "imageLinkCards" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    "cards": array::compact(cards[]{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      ),\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    })\n  }\n,\n    \n  _type == "formBlock" => {\n    ...,\n    title,\n    description,\n    variant,\n    displayMode,\n    triggerText,\n    buttonPosition,\n    "form": form->{\n      _id,\n      title,\n      description,\n      \n  fields[]{\n    label,\n    name,\n    type,\n    required,\n    options,\n    placeholder,\n    type == "curso" => {\n      courseReference->{\n        _id,\n        title,\n        "fechasCapacitacion": fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        }\n      },\n      selectedTrainingDate\n    }\n  },\n  emailRecipients,\n  submitButtonText,\n  successMessage,\n  errorMessage\n,\n      submitButtonText,\n      successMessage,\n      errorMessage\n    }\n  }\n,\n    \n  _type == "tabs" => {\n    ...,\n    title,\n    description,\n    tabs[]{\n      _key,\n      label,\n      content[]{\n        ...,\n        _type,\n        _key,\n        \n  _type == "cta" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n  }\n,\n        \n  _type == "mainHero" => {\n    ...,\n    titleFont,\n    layout,\n    "backgroundImage": backgroundImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    "backgroundVideo": backgroundVideo.asset->url,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n        \n  _type == "hero" => {\n    ...,\n    variant,\n    titleFont,\n    imageAlignment,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n        \n  _type == "doubleHero" => {\n    ...,\n    variant,\n    primaryBadge,\n    primaryTitle,\n    "primaryRichText": primaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "primaryImage": primaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    primaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    secondaryBadge,\n    secondaryTitle,\n    "secondaryRichText": secondaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "secondaryImage": secondaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    secondaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n        \n  _type == "faqAccordion" => {\n    ...,\n    \n  "faqs": array::compact(faqs[]->{\n    title,\n    _id,\n    _type,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  })\n,\n    link{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n        \n  _type == "subscribeNewsletter" => {\n    ...,\n    "subTitle": subTitle[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "helperText": helperText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n        \n  _type == "imageLinkCards" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    "cards": array::compact(cards[]{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      ),\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    })\n  }\n,\n        \n  _type == "formBlock" => {\n    ...,\n    title,\n    description,\n    variant,\n    displayMode,\n    triggerText,\n    buttonPosition,\n    "form": form->{\n      _id,\n      title,\n      description,\n      \n  fields[]{\n    label,\n    name,\n    type,\n    required,\n    options,\n    placeholder,\n    type == "curso" => {\n      courseReference->{\n        _id,\n        title,\n        "fechasCapacitacion": fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        }\n      },\n      selectedTrainingDate\n    }\n  },\n  emailRecipients,\n  submitButtonText,\n  successMessage,\n  errorMessage\n,\n      submitButtonText,\n      successMessage,\n      errorMessage\n    }\n  }\n,\n        \n  _type == "imageGallery" => {\n    ...,\n    title,\n    description,\n    layout,\n    columns,\n    slidesPerRow,\n    "images": images[]{\n      ...,\n      "image": image{\n        ...,\n        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background,\n      },\n      caption\n    }\n  }\n,\n        \n  _type == "featuredBlogs" => {\n    ...,\n    title,\n    subtitle,\n    displayMode,\n    blogCount,\n    buttonText,\n    "showViewAllButton": showViewAllButton == "yes",\n    "blogs": select(\n      displayMode == "curated" => blogs[]-> {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      },\n      displayMode == "latest" => *[\n        _type == "blog" \n        && (seoHideFromLists != true)\n      ] | order(publishedAt desc, _createdAt desc)[0...3] {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      }\n    )\n  }\n,\n        _type == "tabs" => {\n          ...,\n          title,\n          description,\n          tabs[]{\n            _key,\n            label,\n            content[]{ \n              ...,\n              _type,\n              _key\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == "infoSection" => {\n    ...,\n    title,\n    headingLevel,\n    content[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  _type == "imageGallery" => {\n    ...,\n    title,\n    description,\n    layout,\n    columns,\n    slidesPerRow,\n    "images": images[]{\n      ...,\n      "image": image{\n        ...,\n        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background,\n      },\n      caption\n    }\n  }\n,\n    \n  _type == "specificationsTable" => {\n    ...,\n    title,\n    description,\n    variant,\n    "specifications": specifications[]{\n      _key,\n      label,\n      "content": content[]{\n        ...,\n        \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n      }\n    }\n  }\n,\n    \n  _type == "genericTable" => {\n    ...,\n    title,\n    description,\n    columnCount,\n    columnHeaders,\n    rows[]{\n      _key,\n      cells[]{\n        _key,\n        content,\n        isLastColumn,\n        _type == "richCell" => {\n          content[]{\n            ...,\n            \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n          }\n        }\n      }\n    },\n    variant\n  }\n,\n    \n  _type == "featuredBlogs" => {\n    ...,\n    title,\n    subtitle,\n    displayMode,\n    blogCount,\n    buttonText,\n    "showViewAllButton": showViewAllButton == "yes",\n    "blogs": select(\n      displayMode == "curated" => blogs[]-> {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      },\n      displayMode == "latest" => *[\n        _type == "blog" \n        && (seoHideFromLists != true)\n      ] | order(publishedAt desc, _createdAt desc)[0...3] {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      }\n    )\n  }\n,\n    \n  _type == "highlightedAspects" => {\n    title,\n    description,\n    columns,\n    aspects[]{\n      _key,\n      title,\n      variant,\n      icon,\n      image{\n        ...,\n        "alt": coalesce(asset->altText, asset->originalFilename, "Aspect Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background\n      },\n      content[]{\n        ...,\n        _type == "button" => {\n          ...,\n          text,\n          variant,\n          icon,\n          \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n        },\n        _type == "block" => {\n          ...,\n          \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n        }\n      }\n    }\n  }\n,\n    \n  _type == "videoBlock" => {\n    ...,\n    _key,\n    _type,\n    title,\n    videoType,\n    "mp4File": coalesce(\n      mp4File.asset->url,\n      mp4File.asset->sources[0].url,\n      null\n    ),\n    youtubeUrl,\n    showControls,\n    autoplay,\n    loop,\n    allowFullscreen,\n    "posterImage": posterImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Video Poster"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    }\n  }\n,\n    \n  _type == "videoHero" => {\n    ...,\n    variant,\n    titleFont,\n    videoType,\n    "mp4File": coalesce(\n      mp4File.asset->url,\n      mp4File.asset->sources[0].url,\n      null\n    ),\n    youtubeUrl,\n    showControls,\n    autoplay,\n    loop,\n    "posterImage": posterImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Video Hero Poster"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "textBlock" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "sucursalesSelector" => {\n    ...,\n    title,\n    description,\n    showMap,\n    showAllRegions,\n    selectedRegions,\n    variant\n  }\n,\n    \n  _type == "cursosBlock" => {\n    ...,\n    title,\n    description,\n    displayMode,\n    "showAllDates": showAllDates == "yes",\n    "cursos": cursos[]-> {\n      _id,\n      _type,\n      title,\n      description,\n      "slug": slug.current,\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n      "fechasCapacitacion": select(\n        ^.showAllDates == "yes" => fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        } | order(fecha asc),\n        fechasCapacitacion[fecha > now()]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        } | order(fecha asc)\n      )\n    }\n  }\n\n  }\n\n  }\n  ': QuerySlugPageDataResult;
    '\n  *[_type == "page" && defined(slug.current)].slug.current\n': QuerySlugPagePathsResult;
    '\n  *[_type == "blogIndex"][0]{\n    ...,\n    _id,\n    _type,\n    title,\n    description,\n    "displayFeaturedBlogs" : displayFeaturedBlogs == "yes",\n    "featuredBlogsCount" : featuredBlogsCount,\n    \n  pageBuilder[]{\n    ...,\n    _type,\n    \n  _type == "cta" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n  }\n,\n    \n  _type == "mainHero" => {\n    ...,\n    titleFont,\n    layout,\n    "backgroundImage": backgroundImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    "backgroundVideo": backgroundVideo.asset->url,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "hero" => {\n    ...,\n    variant,\n    titleFont,\n    imageAlignment,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "doubleHero" => {\n    ...,\n    variant,\n    primaryBadge,\n    primaryTitle,\n    "primaryRichText": primaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "primaryImage": primaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    primaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    secondaryBadge,\n    secondaryTitle,\n    "secondaryRichText": secondaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "secondaryImage": secondaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    secondaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n    \n  _type == "faqAccordion" => {\n    ...,\n    \n  "faqs": array::compact(faqs[]->{\n    title,\n    _id,\n    _type,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  })\n,\n    link{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n    \n  _type == "subscribeNewsletter" => {\n    ...,\n    "subTitle": subTitle[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "helperText": helperText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  _type == "imageLinkCards" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    "cards": array::compact(cards[]{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      ),\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    })\n  }\n,\n    \n  _type == "formBlock" => {\n    ...,\n    title,\n    description,\n    variant,\n    displayMode,\n    triggerText,\n    buttonPosition,\n    "form": form->{\n      _id,\n      title,\n      description,\n      \n  fields[]{\n    label,\n    name,\n    type,\n    required,\n    options,\n    placeholder,\n    type == "curso" => {\n      courseReference->{\n        _id,\n        title,\n        "fechasCapacitacion": fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        }\n      },\n      selectedTrainingDate\n    }\n  },\n  emailRecipients,\n  submitButtonText,\n  successMessage,\n  errorMessage\n,\n      submitButtonText,\n      successMessage,\n      errorMessage\n    }\n  }\n,\n    \n  _type == "tabs" => {\n    ...,\n    title,\n    description,\n    tabs[]{\n      _key,\n      label,\n      content[]{\n        ...,\n        _type,\n        _key,\n        \n  _type == "cta" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n  }\n,\n        \n  _type == "mainHero" => {\n    ...,\n    titleFont,\n    layout,\n    "backgroundImage": backgroundImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    "backgroundVideo": backgroundVideo.asset->url,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n        \n  _type == "hero" => {\n    ...,\n    variant,\n    titleFont,\n    imageAlignment,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n        \n  _type == "doubleHero" => {\n    ...,\n    variant,\n    primaryBadge,\n    primaryTitle,\n    "primaryRichText": primaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "primaryImage": primaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    primaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    secondaryBadge,\n    secondaryTitle,\n    "secondaryRichText": secondaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "secondaryImage": secondaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    secondaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n        \n  _type == "faqAccordion" => {\n    ...,\n    \n  "faqs": array::compact(faqs[]->{\n    title,\n    _id,\n    _type,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  })\n,\n    link{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n        \n  _type == "subscribeNewsletter" => {\n    ...,\n    "subTitle": subTitle[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "helperText": helperText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n        \n  _type == "imageLinkCards" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    "cards": array::compact(cards[]{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      ),\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    })\n  }\n,\n        \n  _type == "formBlock" => {\n    ...,\n    title,\n    description,\n    variant,\n    displayMode,\n    triggerText,\n    buttonPosition,\n    "form": form->{\n      _id,\n      title,\n      description,\n      \n  fields[]{\n    label,\n    name,\n    type,\n    required,\n    options,\n    placeholder,\n    type == "curso" => {\n      courseReference->{\n        _id,\n        title,\n        "fechasCapacitacion": fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        }\n      },\n      selectedTrainingDate\n    }\n  },\n  emailRecipients,\n  submitButtonText,\n  successMessage,\n  errorMessage\n,\n      submitButtonText,\n      successMessage,\n      errorMessage\n    }\n  }\n,\n        \n  _type == "imageGallery" => {\n    ...,\n    title,\n    description,\n    layout,\n    columns,\n    slidesPerRow,\n    "images": images[]{\n      ...,\n      "image": image{\n        ...,\n        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background,\n      },\n      caption\n    }\n  }\n,\n        \n  _type == "featuredBlogs" => {\n    ...,\n    title,\n    subtitle,\n    displayMode,\n    blogCount,\n    buttonText,\n    "showViewAllButton": showViewAllButton == "yes",\n    "blogs": select(\n      displayMode == "curated" => blogs[]-> {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      },\n      displayMode == "latest" => *[\n        _type == "blog" \n        && (seoHideFromLists != true)\n      ] | order(publishedAt desc, _createdAt desc)[0...3] {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      }\n    )\n  }\n,\n        _type == "tabs" => {\n          ...,\n          title,\n          description,\n          tabs[]{\n            _key,\n            label,\n            content[]{ \n              ...,\n              _type,\n              _key\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == "infoSection" => {\n    ...,\n    title,\n    headingLevel,\n    content[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  _type == "imageGallery" => {\n    ...,\n    title,\n    description,\n    layout,\n    columns,\n    slidesPerRow,\n    "images": images[]{\n      ...,\n      "image": image{\n        ...,\n        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background,\n      },\n      caption\n    }\n  }\n,\n    \n  _type == "specificationsTable" => {\n    ...,\n    title,\n    description,\n    variant,\n    "specifications": specifications[]{\n      _key,\n      label,\n      "content": content[]{\n        ...,\n        \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n      }\n    }\n  }\n,\n    \n  _type == "genericTable" => {\n    ...,\n    title,\n    description,\n    columnCount,\n    columnHeaders,\n    rows[]{\n      _key,\n      cells[]{\n        _key,\n        content,\n        isLastColumn,\n        _type == "richCell" => {\n          content[]{\n            ...,\n            \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n          }\n        }\n      }\n    },\n    variant\n  }\n,\n    \n  _type == "featuredBlogs" => {\n    ...,\n    title,\n    subtitle,\n    displayMode,\n    blogCount,\n    buttonText,\n    "showViewAllButton": showViewAllButton == "yes",\n    "blogs": select(\n      displayMode == "curated" => blogs[]-> {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      },\n      displayMode == "latest" => *[\n        _type == "blog" \n        && (seoHideFromLists != true)\n      ] | order(publishedAt desc, _createdAt desc)[0...3] {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      }\n    )\n  }\n,\n    \n  _type == "highlightedAspects" => {\n    title,\n    description,\n    columns,\n    aspects[]{\n      _key,\n      title,\n      variant,\n      icon,\n      image{\n        ...,\n        "alt": coalesce(asset->altText, asset->originalFilename, "Aspect Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background\n      },\n      content[]{\n        ...,\n        _type == "button" => {\n          ...,\n          text,\n          variant,\n          icon,\n          \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n        },\n        _type == "block" => {\n          ...,\n          \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n        }\n      }\n    }\n  }\n,\n    \n  _type == "videoBlock" => {\n    ...,\n    _key,\n    _type,\n    title,\n    videoType,\n    "mp4File": coalesce(\n      mp4File.asset->url,\n      mp4File.asset->sources[0].url,\n      null\n    ),\n    youtubeUrl,\n    showControls,\n    autoplay,\n    loop,\n    allowFullscreen,\n    "posterImage": posterImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Video Poster"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    }\n  }\n,\n    \n  _type == "videoHero" => {\n    ...,\n    variant,\n    titleFont,\n    videoType,\n    "mp4File": coalesce(\n      mp4File.asset->url,\n      mp4File.asset->sources[0].url,\n      null\n    ),\n    youtubeUrl,\n    showControls,\n    autoplay,\n    loop,\n    "posterImage": posterImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Video Hero Poster"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "textBlock" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "sucursalesSelector" => {\n    ...,\n    title,\n    description,\n    showMap,\n    showAllRegions,\n    selectedRegions,\n    variant\n  }\n,\n    \n  _type == "cursosBlock" => {\n    ...,\n    title,\n    description,\n    displayMode,\n    "showAllDates": showAllDates == "yes",\n    "cursos": cursos[]-> {\n      _id,\n      _type,\n      title,\n      description,\n      "slug": slug.current,\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n      "fechasCapacitacion": select(\n        ^.showAllDates == "yes" => fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        } | order(fecha asc),\n        fechasCapacitacion[fecha > now()]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        } | order(fecha asc)\n      )\n    }\n  }\n\n  }\n,\n    "slug": slug.current,\n    "blogs": *[_type == "blog" && (seoHideFromLists != true)] | order(orderRank asc){\n      \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n    }\n  }\n': QueryBlogIndexPageDataResult;
    '\n  *[_type == "blog" && slug.current == $slug][0]{\n    ...,\n    "slug": slug.current,\n    \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  pageBuilder[]{\n    ...,\n    _type,\n    \n  _type == "cta" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n  }\n,\n    \n  _type == "mainHero" => {\n    ...,\n    titleFont,\n    layout,\n    "backgroundImage": backgroundImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    "backgroundVideo": backgroundVideo.asset->url,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "hero" => {\n    ...,\n    variant,\n    titleFont,\n    imageAlignment,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "doubleHero" => {\n    ...,\n    variant,\n    primaryBadge,\n    primaryTitle,\n    "primaryRichText": primaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "primaryImage": primaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    primaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    secondaryBadge,\n    secondaryTitle,\n    "secondaryRichText": secondaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "secondaryImage": secondaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    secondaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n    \n  _type == "faqAccordion" => {\n    ...,\n    \n  "faqs": array::compact(faqs[]->{\n    title,\n    _id,\n    _type,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  })\n,\n    link{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n    \n  _type == "subscribeNewsletter" => {\n    ...,\n    "subTitle": subTitle[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "helperText": helperText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  _type == "imageLinkCards" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    "cards": array::compact(cards[]{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      ),\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    })\n  }\n,\n    \n  _type == "formBlock" => {\n    ...,\n    title,\n    description,\n    variant,\n    displayMode,\n    triggerText,\n    buttonPosition,\n    "form": form->{\n      _id,\n      title,\n      description,\n      \n  fields[]{\n    label,\n    name,\n    type,\n    required,\n    options,\n    placeholder,\n    type == "curso" => {\n      courseReference->{\n        _id,\n        title,\n        "fechasCapacitacion": fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        }\n      },\n      selectedTrainingDate\n    }\n  },\n  emailRecipients,\n  submitButtonText,\n  successMessage,\n  errorMessage\n,\n      submitButtonText,\n      successMessage,\n      errorMessage\n    }\n  }\n,\n    \n  _type == "tabs" => {\n    ...,\n    title,\n    description,\n    tabs[]{\n      _key,\n      label,\n      content[]{\n        ...,\n        _type,\n        _key,\n        \n  _type == "cta" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n  }\n,\n        \n  _type == "mainHero" => {\n    ...,\n    titleFont,\n    layout,\n    "backgroundImage": backgroundImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    "backgroundVideo": backgroundVideo.asset->url,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n        \n  _type == "hero" => {\n    ...,\n    variant,\n    titleFont,\n    imageAlignment,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n        \n  _type == "doubleHero" => {\n    ...,\n    variant,\n    primaryBadge,\n    primaryTitle,\n    "primaryRichText": primaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "primaryImage": primaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    primaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    secondaryBadge,\n    secondaryTitle,\n    "secondaryRichText": secondaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "secondaryImage": secondaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    secondaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n        \n  _type == "faqAccordion" => {\n    ...,\n    \n  "faqs": array::compact(faqs[]->{\n    title,\n    _id,\n    _type,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  })\n,\n    link{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n        \n  _type == "subscribeNewsletter" => {\n    ...,\n    "subTitle": subTitle[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "helperText": helperText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n        \n  _type == "imageLinkCards" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    "cards": array::compact(cards[]{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      ),\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    })\n  }\n,\n        \n  _type == "formBlock" => {\n    ...,\n    title,\n    description,\n    variant,\n    displayMode,\n    triggerText,\n    buttonPosition,\n    "form": form->{\n      _id,\n      title,\n      description,\n      \n  fields[]{\n    label,\n    name,\n    type,\n    required,\n    options,\n    placeholder,\n    type == "curso" => {\n      courseReference->{\n        _id,\n        title,\n        "fechasCapacitacion": fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        }\n      },\n      selectedTrainingDate\n    }\n  },\n  emailRecipients,\n  submitButtonText,\n  successMessage,\n  errorMessage\n,\n      submitButtonText,\n      successMessage,\n      errorMessage\n    }\n  }\n,\n        \n  _type == "imageGallery" => {\n    ...,\n    title,\n    description,\n    layout,\n    columns,\n    slidesPerRow,\n    "images": images[]{\n      ...,\n      "image": image{\n        ...,\n        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background,\n      },\n      caption\n    }\n  }\n,\n        \n  _type == "featuredBlogs" => {\n    ...,\n    title,\n    subtitle,\n    displayMode,\n    blogCount,\n    buttonText,\n    "showViewAllButton": showViewAllButton == "yes",\n    "blogs": select(\n      displayMode == "curated" => blogs[]-> {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      },\n      displayMode == "latest" => *[\n        _type == "blog" \n        && (seoHideFromLists != true)\n      ] | order(publishedAt desc, _createdAt desc)[0...3] {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      }\n    )\n  }\n,\n        _type == "tabs" => {\n          ...,\n          title,\n          description,\n          tabs[]{\n            _key,\n            label,\n            content[]{ \n              ...,\n              _type,\n              _key\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == "infoSection" => {\n    ...,\n    title,\n    headingLevel,\n    content[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  _type == "imageGallery" => {\n    ...,\n    title,\n    description,\n    layout,\n    columns,\n    slidesPerRow,\n    "images": images[]{\n      ...,\n      "image": image{\n        ...,\n        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background,\n      },\n      caption\n    }\n  }\n,\n    \n  _type == "specificationsTable" => {\n    ...,\n    title,\n    description,\n    variant,\n    "specifications": specifications[]{\n      _key,\n      label,\n      "content": content[]{\n        ...,\n        \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n      }\n    }\n  }\n,\n    \n  _type == "genericTable" => {\n    ...,\n    title,\n    description,\n    columnCount,\n    columnHeaders,\n    rows[]{\n      _key,\n      cells[]{\n        _key,\n        content,\n        isLastColumn,\n        _type == "richCell" => {\n          content[]{\n            ...,\n            \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n          }\n        }\n      }\n    },\n    variant\n  }\n,\n    \n  _type == "featuredBlogs" => {\n    ...,\n    title,\n    subtitle,\n    displayMode,\n    blogCount,\n    buttonText,\n    "showViewAllButton": showViewAllButton == "yes",\n    "blogs": select(\n      displayMode == "curated" => blogs[]-> {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      },\n      displayMode == "latest" => *[\n        _type == "blog" \n        && (seoHideFromLists != true)\n      ] | order(publishedAt desc, _createdAt desc)[0...3] {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      }\n    )\n  }\n,\n    \n  _type == "highlightedAspects" => {\n    title,\n    description,\n    columns,\n    aspects[]{\n      _key,\n      title,\n      variant,\n      icon,\n      image{\n        ...,\n        "alt": coalesce(asset->altText, asset->originalFilename, "Aspect Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background\n      },\n      content[]{\n        ...,\n        _type == "button" => {\n          ...,\n          text,\n          variant,\n          icon,\n          \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n        },\n        _type == "block" => {\n          ...,\n          \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n        }\n      }\n    }\n  }\n,\n    \n  _type == "videoBlock" => {\n    ...,\n    _key,\n    _type,\n    title,\n    videoType,\n    "mp4File": coalesce(\n      mp4File.asset->url,\n      mp4File.asset->sources[0].url,\n      null\n    ),\n    youtubeUrl,\n    showControls,\n    autoplay,\n    loop,\n    allowFullscreen,\n    "posterImage": posterImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Video Poster"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    }\n  }\n,\n    \n  _type == "videoHero" => {\n    ...,\n    variant,\n    titleFont,\n    videoType,\n    "mp4File": coalesce(\n      mp4File.asset->url,\n      mp4File.asset->sources[0].url,\n      null\n    ),\n    youtubeUrl,\n    showControls,\n    autoplay,\n    loop,\n    "posterImage": posterImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Video Hero Poster"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "textBlock" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "sucursalesSelector" => {\n    ...,\n    title,\n    description,\n    showMap,\n    showAllRegions,\n    selectedRegions,\n    variant\n  }\n,\n    \n  _type == "cursosBlock" => {\n    ...,\n    title,\n    description,\n    displayMode,\n    "showAllDates": showAllDates == "yes",\n    "cursos": cursos[]-> {\n      _id,\n      _type,\n      title,\n      description,\n      "slug": slug.current,\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n      "fechasCapacitacion": select(\n        ^.showAllDates == "yes" => fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        } | order(fecha asc),\n        fechasCapacitacion[fecha > now()]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        } | order(fecha asc)\n      )\n    }\n  }\n\n  }\n,\n    \n  "categoryData": {\n    "label": category,\n    "slug": category,\n    "iri": "/camiones/" + category,\n    "parent": null\n  }\n\n  }\n': QueryBlogSlugPageDataResult;
    '\n  *[_type == "blog" && defined(slug.current)].slug.current\n': QueryBlogPathsResult;
    '\n  *[_type == "homePage" && _id == $id][0]{\n    \n  _id,\n  _type,\n  "title": select(\n    defined(ogTitle) => ogTitle,\n    defined(seoTitle) => seoTitle,\n    title\n  ),\n  "description": select(\n    defined(ogDescription) => ogDescription,\n    defined(seoDescription) => seoDescription,\n    description\n  ),\n  "image": image.asset->url + "?w=566&h=566&dpr=2&fit=max",\n  "dominantColor": image.asset->metadata.palette.dominant.background,\n  "seoImage": seoImage.asset->url + "?w=1200&h=630&dpr=2&fit=max", \n  "logo": *[_type == "settings"][0].logo.asset->url + "?w=80&h=40&dpr=3&fit=max&q=100",\n  "date": coalesce(date, _createdAt)\n\n  }\n  ': QueryHomePageOGDataResult;
    '\n  *[_type == "page" && _id == $id][0]{\n    \n  _id,\n  _type,\n  "title": select(\n    defined(ogTitle) => ogTitle,\n    defined(seoTitle) => seoTitle,\n    title\n  ),\n  "description": select(\n    defined(ogDescription) => ogDescription,\n    defined(seoDescription) => seoDescription,\n    description\n  ),\n  "image": image.asset->url + "?w=566&h=566&dpr=2&fit=max",\n  "dominantColor": image.asset->metadata.palette.dominant.background,\n  "seoImage": seoImage.asset->url + "?w=1200&h=630&dpr=2&fit=max", \n  "logo": *[_type == "settings"][0].logo.asset->url + "?w=80&h=40&dpr=3&fit=max&q=100",\n  "date": coalesce(date, _createdAt)\n\n  }\n': QuerySlugPageOGDataResult;
    '\n  *[_type == "blog" && _id == $id][0]{\n    \n  _id,\n  _type,\n  "title": select(\n    defined(ogTitle) => ogTitle,\n    defined(seoTitle) => seoTitle,\n    title\n  ),\n  "description": select(\n    defined(ogDescription) => ogDescription,\n    defined(seoDescription) => seoDescription,\n    description\n  ),\n  "image": image.asset->url + "?w=566&h=566&dpr=2&fit=max",\n  "dominantColor": image.asset->metadata.palette.dominant.background,\n  "seoImage": seoImage.asset->url + "?w=1200&h=630&dpr=2&fit=max", \n  "logo": *[_type == "settings"][0].logo.asset->url + "?w=80&h=40&dpr=3&fit=max&q=100",\n  "date": coalesce(date, _createdAt)\n\n  }\n': QueryBlogPageOGDataResult;
    '\n  *[ defined(slug.current) && _id == $id][0]{\n    \n  _id,\n  _type,\n  "title": select(\n    defined(ogTitle) => ogTitle,\n    defined(seoTitle) => seoTitle,\n    title\n  ),\n  "description": select(\n    defined(ogDescription) => ogDescription,\n    defined(seoDescription) => seoDescription,\n    description\n  ),\n  "image": image.asset->url + "?w=566&h=566&dpr=2&fit=max",\n  "dominantColor": image.asset->metadata.palette.dominant.background,\n  "seoImage": seoImage.asset->url + "?w=1200&h=630&dpr=2&fit=max", \n  "logo": *[_type == "settings"][0].logo.asset->url + "?w=80&h=40&dpr=3&fit=max&q=100",\n  "date": coalesce(date, _createdAt)\n\n  }\n': QueryGenericPageOGDataResult;
    '*[_type == "footer" && _id == "footer"][0]{\n  _id,\n  subtitle,\n  columns[]{\n    _key,\n    title,\n    links[]{\n      _key,\n      name,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      ),\n    }\n  },\n  "logo": *[_type == "settings"][0].logo.asset->url + "?w=80&h=40&dpr=3&fit=max",\n  "siteTitle": *[_type == "settings"][0].siteTitle,\n  "socialLinks": *[_type == "settings"][0].socialLinks,\n  "customerServicePhone": *[_type == "settings"][0].customerServicePhone,\n  "roadEmergencyPhone": *[_type == "settings"][0].roadEmergencyPhone,\n  "roadEmergencyPhone2": *[_type == "settings"][0].roadEmergencyPhone2,\n  "contactPageUrl": select(\n    *[_type == "settings"][0].contactPageUrl.type == "internal" => *[_type == "settings"][0].contactPageUrl.internal->slug.current,\n    *[_type == "settings"][0].contactPageUrl.type == "external" => *[_type == "settings"][0].contactPageUrl.external,\n    null\n  )\n}': QueryFooterDataResult;
    '*[\n  _type == "navbar" \n  && _id == "navbar"\n][0]{\n  _id,\n  columns[]{\n    _key,\n    _type == "navbarColumn" => {\n      "type": "column",\n      title,\n      links[]{\n        _key,\n        _type == "navbarColumnLink" => {\n          "type": "link",\n          name,\n          icon,\n          description,\n          "openInNewTab": url.openInNewTab,\n          "href": select(\n            url.type == "internal" => url.internal->slug.current,\n            url.type == "external" => url.external,\n            url.href\n          )\n        },\n        _type == "navbarLinkGroup" => {\n          "type": "group",\n          title,\n          links[]{\n            _key,\n            name,\n            icon,\n            description,\n            "openInNewTab": url.openInNewTab,\n            "href": select(\n              url.type == "internal" => url.internal->slug.current,\n              url.type == "external" => url.external,\n              url.href\n            )\n          }\n        }\n      }\n    },\n    _type == "navbarLink" => {\n      "type": "link",\n      name,\n      description,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  },\n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    "openInNewTab": url.openInNewTab,\n    "href": select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.href\n    ),\n  },\n  "logo": *[_type == "settings"][0].logo.asset->url + "?w=80&h=40&dpr=3&fit=max",\n  "siteTitle": *[_type == "settings"][0].siteTitle,\n  "customerServicePhone": *[_type == "settings"][0].customerServicePhone,\n  "roadEmergencyPhone": *[_type == "settings"][0].roadEmergencyPhone,\n  "roadEmergencyPhone2": *[_type == "settings"][0].roadEmergencyPhone2,\n  "contactPageUrl": select(\n    *[_type == "settings"][0].contactPageUrl.type == "internal" => *[_type == "settings"][0].contactPageUrl.internal->slug.current,\n    *[_type == "settings"][0].contactPageUrl.type == "external" => *[_type == "settings"][0].contactPageUrl.external,\n    null\n  )\n}': NAVBAR_QUERYResult;
    '{\n  "slugPages": *[_type == "page" && defined(slug.current)]{\n    "slug": slug.current,\n    "lastModified": _updatedAt\n  },\n  "blogPages": *[_type == "blog" && defined(slug.current)]{\n    "slug": slug.current,\n    "lastModified": _updatedAt\n  },\n  "sucursalesPages": *[_type == "sucursales" && defined(slug.current)]{\n    "slug": slug.current,\n    "lastModified": _updatedAt\n  }\n}': QuerySitemapDataResult;
    '\n  *[_type == "settings"][0]{\n    _id,\n    _type,\n    siteTitle,\n    siteDescription,\n    socialLinks{\n      linkedin,\n      facebook,\n      twitter,\n      instagram,\n      youtube\n    },\n    customerServicePhone,\n    roadEmergencyPhone,\n    roadEmergencyPhone2,\n    "contactPageUrl": select(\n      contactPageUrl.type == "internal" => contactPageUrl.internal->slug.current,\n      contactPageUrl.type == "external" => contactPageUrl.external,\n      null\n    ),\n    \n  cotizadorFormTitle,\n  cotizadorFormDescription,\n  "cotizadorForm": coalesce(cotizadorForm->{\n    _id,\n    _type,\n    title,\n    description,\n    "slug": slug.current,\n    \n  fields[]{\n    label,\n    name,\n    type,\n    required,\n    options,\n    placeholder,\n    type == "curso" => {\n      courseReference->{\n        _id,\n        title,\n        "fechasCapacitacion": fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        }\n      },\n      selectedTrainingDate\n    }\n  },\n  emailRecipients,\n  submitButtonText,\n  successMessage,\n  errorMessage\n\n  }, null)\n\n  }\n': QueryGlobalSeoSettingsResult;
    '*[_type == "formularios"]{\n  _id,\n  title,\n  "slug": slug.current,\n  description\n}': QueryAllFormsResult;
    '*[\n  _type == "formularios" \n  && slug.current == $slug\n][0]{\n  _id,\n  title,\n  description,\n  \n  fields[]{\n    label,\n    name,\n    type,\n    required,\n    options,\n    placeholder,\n    type == "curso" => {\n      courseReference->{\n        _id,\n        title,\n        "fechasCapacitacion": fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        }\n      },\n      selectedTrainingDate\n    }\n  },\n  emailRecipients,\n  submitButtonText,\n  successMessage,\n  errorMessage\n,\n  submitButtonText,\n  successMessage,\n  errorMessage\n}': QueryFormBySlugResult;
    '*[_type == "camiones"]{\n  _id,\n  _type,\n  title,\n  subtitle,\n  description,\n  "slug": slug.current,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n  "taxonomy": taxonomias->{\n    prefLabel,\n    conceptId,\n    "slug": lower(prefLabel)\n  }\n}': QueryCamionesDataResult;
    '*[\n  (_type == "camiones" || _type == "page")\n  && slug.current == $slug \n][0]{\n  _id,\n  _type,\n  title,\n  subtitle,\n  description,\n  "slug": slug.current,\n  _type == "camiones" => { \n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n, \n    taxonomias->{\n      "label": prefLabel,\n      "slug": prefLabel,\n      "iri": "/camiones/" + lower(prefLabel)\n    }\n  },\n  \n  pageBuilder[]{\n    ...,\n    _type,\n    \n  _type == "cta" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n  }\n,\n    \n  _type == "mainHero" => {\n    ...,\n    titleFont,\n    layout,\n    "backgroundImage": backgroundImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    "backgroundVideo": backgroundVideo.asset->url,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "hero" => {\n    ...,\n    variant,\n    titleFont,\n    imageAlignment,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "doubleHero" => {\n    ...,\n    variant,\n    primaryBadge,\n    primaryTitle,\n    "primaryRichText": primaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "primaryImage": primaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    primaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    secondaryBadge,\n    secondaryTitle,\n    "secondaryRichText": secondaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "secondaryImage": secondaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    secondaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n    \n  _type == "faqAccordion" => {\n    ...,\n    \n  "faqs": array::compact(faqs[]->{\n    title,\n    _id,\n    _type,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  })\n,\n    link{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n    \n  _type == "subscribeNewsletter" => {\n    ...,\n    "subTitle": subTitle[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "helperText": helperText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  _type == "imageLinkCards" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    "cards": array::compact(cards[]{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      ),\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    })\n  }\n,\n    \n  _type == "formBlock" => {\n    ...,\n    title,\n    description,\n    variant,\n    displayMode,\n    triggerText,\n    buttonPosition,\n    "form": form->{\n      _id,\n      title,\n      description,\n      \n  fields[]{\n    label,\n    name,\n    type,\n    required,\n    options,\n    placeholder,\n    type == "curso" => {\n      courseReference->{\n        _id,\n        title,\n        "fechasCapacitacion": fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        }\n      },\n      selectedTrainingDate\n    }\n  },\n  emailRecipients,\n  submitButtonText,\n  successMessage,\n  errorMessage\n,\n      submitButtonText,\n      successMessage,\n      errorMessage\n    }\n  }\n,\n    \n  _type == "tabs" => {\n    ...,\n    title,\n    description,\n    tabs[]{\n      _key,\n      label,\n      content[]{\n        ...,\n        _type,\n        _key,\n        \n  _type == "cta" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n  }\n,\n        \n  _type == "mainHero" => {\n    ...,\n    titleFont,\n    layout,\n    "backgroundImage": backgroundImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    "backgroundVideo": backgroundVideo.asset->url,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n        \n  _type == "hero" => {\n    ...,\n    variant,\n    titleFont,\n    imageAlignment,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n        \n  _type == "doubleHero" => {\n    ...,\n    variant,\n    primaryBadge,\n    primaryTitle,\n    "primaryRichText": primaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "primaryImage": primaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    primaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    secondaryBadge,\n    secondaryTitle,\n    "secondaryRichText": secondaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "secondaryImage": secondaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    secondaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n        \n  _type == "faqAccordion" => {\n    ...,\n    \n  "faqs": array::compact(faqs[]->{\n    title,\n    _id,\n    _type,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  })\n,\n    link{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n        \n  _type == "subscribeNewsletter" => {\n    ...,\n    "subTitle": subTitle[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "helperText": helperText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n        \n  _type == "imageLinkCards" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    "cards": array::compact(cards[]{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      ),\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    })\n  }\n,\n        \n  _type == "formBlock" => {\n    ...,\n    title,\n    description,\n    variant,\n    displayMode,\n    triggerText,\n    buttonPosition,\n    "form": form->{\n      _id,\n      title,\n      description,\n      \n  fields[]{\n    label,\n    name,\n    type,\n    required,\n    options,\n    placeholder,\n    type == "curso" => {\n      courseReference->{\n        _id,\n        title,\n        "fechasCapacitacion": fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        }\n      },\n      selectedTrainingDate\n    }\n  },\n  emailRecipients,\n  submitButtonText,\n  successMessage,\n  errorMessage\n,\n      submitButtonText,\n      successMessage,\n      errorMessage\n    }\n  }\n,\n        \n  _type == "imageGallery" => {\n    ...,\n    title,\n    description,\n    layout,\n    columns,\n    slidesPerRow,\n    "images": images[]{\n      ...,\n      "image": image{\n        ...,\n        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background,\n      },\n      caption\n    }\n  }\n,\n        \n  _type == "featuredBlogs" => {\n    ...,\n    title,\n    subtitle,\n    displayMode,\n    blogCount,\n    buttonText,\n    "showViewAllButton": showViewAllButton == "yes",\n    "blogs": select(\n      displayMode == "curated" => blogs[]-> {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      },\n      displayMode == "latest" => *[\n        _type == "blog" \n        && (seoHideFromLists != true)\n      ] | order(publishedAt desc, _createdAt desc)[0...3] {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      }\n    )\n  }\n,\n        _type == "tabs" => {\n          ...,\n          title,\n          description,\n          tabs[]{\n            _key,\n            label,\n            content[]{ \n              ...,\n              _type,\n              _key\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == "infoSection" => {\n    ...,\n    title,\n    headingLevel,\n    content[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  _type == "imageGallery" => {\n    ...,\n    title,\n    description,\n    layout,\n    columns,\n    slidesPerRow,\n    "images": images[]{\n      ...,\n      "image": image{\n        ...,\n        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background,\n      },\n      caption\n    }\n  }\n,\n    \n  _type == "specificationsTable" => {\n    ...,\n    title,\n    description,\n    variant,\n    "specifications": specifications[]{\n      _key,\n      label,\n      "content": content[]{\n        ...,\n        \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n      }\n    }\n  }\n,\n    \n  _type == "genericTable" => {\n    ...,\n    title,\n    description,\n    columnCount,\n    columnHeaders,\n    rows[]{\n      _key,\n      cells[]{\n        _key,\n        content,\n        isLastColumn,\n        _type == "richCell" => {\n          content[]{\n            ...,\n            \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n          }\n        }\n      }\n    },\n    variant\n  }\n,\n    \n  _type == "featuredBlogs" => {\n    ...,\n    title,\n    subtitle,\n    displayMode,\n    blogCount,\n    buttonText,\n    "showViewAllButton": showViewAllButton == "yes",\n    "blogs": select(\n      displayMode == "curated" => blogs[]-> {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      },\n      displayMode == "latest" => *[\n        _type == "blog" \n        && (seoHideFromLists != true)\n      ] | order(publishedAt desc, _createdAt desc)[0...3] {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      }\n    )\n  }\n,\n    \n  _type == "highlightedAspects" => {\n    title,\n    description,\n    columns,\n    aspects[]{\n      _key,\n      title,\n      variant,\n      icon,\n      image{\n        ...,\n        "alt": coalesce(asset->altText, asset->originalFilename, "Aspect Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background\n      },\n      content[]{\n        ...,\n        _type == "button" => {\n          ...,\n          text,\n          variant,\n          icon,\n          \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n        },\n        _type == "block" => {\n          ...,\n          \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n        }\n      }\n    }\n  }\n,\n    \n  _type == "videoBlock" => {\n    ...,\n    _key,\n    _type,\n    title,\n    videoType,\n    "mp4File": coalesce(\n      mp4File.asset->url,\n      mp4File.asset->sources[0].url,\n      null\n    ),\n    youtubeUrl,\n    showControls,\n    autoplay,\n    loop,\n    allowFullscreen,\n    "posterImage": posterImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Video Poster"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    }\n  }\n,\n    \n  _type == "videoHero" => {\n    ...,\n    variant,\n    titleFont,\n    videoType,\n    "mp4File": coalesce(\n      mp4File.asset->url,\n      mp4File.asset->sources[0].url,\n      null\n    ),\n    youtubeUrl,\n    showControls,\n    autoplay,\n    loop,\n    "posterImage": posterImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Video Hero Poster"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "textBlock" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "sucursalesSelector" => {\n    ...,\n    title,\n    description,\n    showMap,\n    showAllRegions,\n    selectedRegions,\n    variant\n  }\n,\n    \n  _type == "cursosBlock" => {\n    ...,\n    title,\n    description,\n    displayMode,\n    "showAllDates": showAllDates == "yes",\n    "cursos": cursos[]-> {\n      _id,\n      _type,\n      title,\n      description,\n      "slug": slug.current,\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n      "fechasCapacitacion": select(\n        ^.showAllDates == "yes" => fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        } | order(fecha asc),\n        fechasCapacitacion[fecha > now()]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        } | order(fecha asc)\n      )\n    }\n  }\n\n  }\n \n}': QueryCamionOrPageBySlugResult;
    '\n  *[_type == "camiones" && defined(slug.current)].slug.current\n': QueryCamionesPathsResult;
    '*[_type == "buses"]{\n  _id,\n  _type,\n  title,\n  subtitle,\n  description,\n  "slug": slug.current,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n  "taxonomy": taxonomias->{\n    prefLabel,\n    conceptId,\n    "slug": lower(prefLabel)\n  }\n}': QueryBusesDataResult;
    '*[\n  (_type == "buses" || _type == "page")\n  && slug.current == $slug \n][0]{\n  _id,\n  _type,\n  title,\n  description,\n  "slug": slug.current,\n  _type == "buses" => { \n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n, \n    taxonomias->{\n      "label": prefLabel,\n      "slug": prefLabel,\n      "iri": "/buses/" + lower(prefLabel)\n    }\n  },\n  \n  pageBuilder[]{\n    ...,\n    _type,\n    \n  _type == "cta" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n  }\n,\n    \n  _type == "mainHero" => {\n    ...,\n    titleFont,\n    layout,\n    "backgroundImage": backgroundImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    "backgroundVideo": backgroundVideo.asset->url,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "hero" => {\n    ...,\n    variant,\n    titleFont,\n    imageAlignment,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "doubleHero" => {\n    ...,\n    variant,\n    primaryBadge,\n    primaryTitle,\n    "primaryRichText": primaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "primaryImage": primaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    primaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    secondaryBadge,\n    secondaryTitle,\n    "secondaryRichText": secondaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "secondaryImage": secondaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    secondaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n    \n  _type == "faqAccordion" => {\n    ...,\n    \n  "faqs": array::compact(faqs[]->{\n    title,\n    _id,\n    _type,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  })\n,\n    link{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n    \n  _type == "subscribeNewsletter" => {\n    ...,\n    "subTitle": subTitle[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "helperText": helperText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  _type == "imageLinkCards" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    "cards": array::compact(cards[]{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      ),\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    })\n  }\n,\n    \n  _type == "formBlock" => {\n    ...,\n    title,\n    description,\n    variant,\n    displayMode,\n    triggerText,\n    buttonPosition,\n    "form": form->{\n      _id,\n      title,\n      description,\n      \n  fields[]{\n    label,\n    name,\n    type,\n    required,\n    options,\n    placeholder,\n    type == "curso" => {\n      courseReference->{\n        _id,\n        title,\n        "fechasCapacitacion": fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        }\n      },\n      selectedTrainingDate\n    }\n  },\n  emailRecipients,\n  submitButtonText,\n  successMessage,\n  errorMessage\n,\n      submitButtonText,\n      successMessage,\n      errorMessage\n    }\n  }\n,\n    \n  _type == "tabs" => {\n    ...,\n    title,\n    description,\n    tabs[]{\n      _key,\n      label,\n      content[]{\n        ...,\n        _type,\n        _key,\n        \n  _type == "cta" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n  }\n,\n        \n  _type == "mainHero" => {\n    ...,\n    titleFont,\n    layout,\n    "backgroundImage": backgroundImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    "backgroundVideo": backgroundVideo.asset->url,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n        \n  _type == "hero" => {\n    ...,\n    variant,\n    titleFont,\n    imageAlignment,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n        \n  _type == "doubleHero" => {\n    ...,\n    variant,\n    primaryBadge,\n    primaryTitle,\n    "primaryRichText": primaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "primaryImage": primaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    primaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    secondaryBadge,\n    secondaryTitle,\n    "secondaryRichText": secondaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "secondaryImage": secondaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    secondaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n        \n  _type == "faqAccordion" => {\n    ...,\n    \n  "faqs": array::compact(faqs[]->{\n    title,\n    _id,\n    _type,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  })\n,\n    link{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n        \n  _type == "subscribeNewsletter" => {\n    ...,\n    "subTitle": subTitle[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "helperText": helperText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n        \n  _type == "imageLinkCards" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    "cards": array::compact(cards[]{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      ),\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    })\n  }\n,\n        \n  _type == "formBlock" => {\n    ...,\n    title,\n    description,\n    variant,\n    displayMode,\n    triggerText,\n    buttonPosition,\n    "form": form->{\n      _id,\n      title,\n      description,\n      \n  fields[]{\n    label,\n    name,\n    type,\n    required,\n    options,\n    placeholder,\n    type == "curso" => {\n      courseReference->{\n        _id,\n        title,\n        "fechasCapacitacion": fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        }\n      },\n      selectedTrainingDate\n    }\n  },\n  emailRecipients,\n  submitButtonText,\n  successMessage,\n  errorMessage\n,\n      submitButtonText,\n      successMessage,\n      errorMessage\n    }\n  }\n,\n        \n  _type == "imageGallery" => {\n    ...,\n    title,\n    description,\n    layout,\n    columns,\n    slidesPerRow,\n    "images": images[]{\n      ...,\n      "image": image{\n        ...,\n        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background,\n      },\n      caption\n    }\n  }\n,\n        \n  _type == "featuredBlogs" => {\n    ...,\n    title,\n    subtitle,\n    displayMode,\n    blogCount,\n    buttonText,\n    "showViewAllButton": showViewAllButton == "yes",\n    "blogs": select(\n      displayMode == "curated" => blogs[]-> {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      },\n      displayMode == "latest" => *[\n        _type == "blog" \n        && (seoHideFromLists != true)\n      ] | order(publishedAt desc, _createdAt desc)[0...3] {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      }\n    )\n  }\n,\n        _type == "tabs" => {\n          ...,\n          title,\n          description,\n          tabs[]{\n            _key,\n            label,\n            content[]{ \n              ...,\n              _type,\n              _key\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == "infoSection" => {\n    ...,\n    title,\n    headingLevel,\n    content[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  _type == "imageGallery" => {\n    ...,\n    title,\n    description,\n    layout,\n    columns,\n    slidesPerRow,\n    "images": images[]{\n      ...,\n      "image": image{\n        ...,\n        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background,\n      },\n      caption\n    }\n  }\n,\n    \n  _type == "specificationsTable" => {\n    ...,\n    title,\n    description,\n    variant,\n    "specifications": specifications[]{\n      _key,\n      label,\n      "content": content[]{\n        ...,\n        \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n      }\n    }\n  }\n,\n    \n  _type == "genericTable" => {\n    ...,\n    title,\n    description,\n    columnCount,\n    columnHeaders,\n    rows[]{\n      _key,\n      cells[]{\n        _key,\n        content,\n        isLastColumn,\n        _type == "richCell" => {\n          content[]{\n            ...,\n            \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n          }\n        }\n      }\n    },\n    variant\n  }\n,\n    \n  _type == "featuredBlogs" => {\n    ...,\n    title,\n    subtitle,\n    displayMode,\n    blogCount,\n    buttonText,\n    "showViewAllButton": showViewAllButton == "yes",\n    "blogs": select(\n      displayMode == "curated" => blogs[]-> {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      },\n      displayMode == "latest" => *[\n        _type == "blog" \n        && (seoHideFromLists != true)\n      ] | order(publishedAt desc, _createdAt desc)[0...3] {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      }\n    )\n  }\n,\n    \n  _type == "highlightedAspects" => {\n    title,\n    description,\n    columns,\n    aspects[]{\n      _key,\n      title,\n      variant,\n      icon,\n      image{\n        ...,\n        "alt": coalesce(asset->altText, asset->originalFilename, "Aspect Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background\n      },\n      content[]{\n        ...,\n        _type == "button" => {\n          ...,\n          text,\n          variant,\n          icon,\n          \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n        },\n        _type == "block" => {\n          ...,\n          \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n        }\n      }\n    }\n  }\n,\n    \n  _type == "videoBlock" => {\n    ...,\n    _key,\n    _type,\n    title,\n    videoType,\n    "mp4File": coalesce(\n      mp4File.asset->url,\n      mp4File.asset->sources[0].url,\n      null\n    ),\n    youtubeUrl,\n    showControls,\n    autoplay,\n    loop,\n    allowFullscreen,\n    "posterImage": posterImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Video Poster"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    }\n  }\n,\n    \n  _type == "videoHero" => {\n    ...,\n    variant,\n    titleFont,\n    videoType,\n    "mp4File": coalesce(\n      mp4File.asset->url,\n      mp4File.asset->sources[0].url,\n      null\n    ),\n    youtubeUrl,\n    showControls,\n    autoplay,\n    loop,\n    "posterImage": posterImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Video Hero Poster"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "textBlock" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "sucursalesSelector" => {\n    ...,\n    title,\n    description,\n    showMap,\n    showAllRegions,\n    selectedRegions,\n    variant\n  }\n,\n    \n  _type == "cursosBlock" => {\n    ...,\n    title,\n    description,\n    displayMode,\n    "showAllDates": showAllDates == "yes",\n    "cursos": cursos[]-> {\n      _id,\n      _type,\n      title,\n      description,\n      "slug": slug.current,\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n      "fechasCapacitacion": select(\n        ^.showAllDates == "yes" => fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        } | order(fecha asc),\n        fechasCapacitacion[fecha > now()]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        } | order(fecha asc)\n      )\n    }\n  }\n\n  }\n \n}': QueryBusOrPageBySlugResult;
    '\n  *[_type == "buses" && defined(slug.current)].slug.current\n': QueryBusesPathsResult;
    '*[_type == "motoresPenta"]{\n  _id,\n  _type,\n  title,\n  subtitle,\n  description,\n  "slug": slug.current,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n  "taxonomy": taxonomias->{\n    prefLabel,\n    conceptId,\n    "slug": lower(prefLabel)\n  }\n}': QueryMotoresPentaDataResult;
    '*[\n  (_type == "motoresPenta" || _type == "page")\n  && slug.current == $slug \n][0]{\n  _id,\n  _type,\n  title,\n  subtitle,\n  description,\n  "slug": slug.current,\n  _type == "motoresPenta" => { \n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n, \n    taxonomias->{\n      "label": prefLabel,\n      "slug": prefLabel,\n      "iri": "/motores-penta/" + lower(prefLabel)\n    }\n  },\n  \n  pageBuilder[]{\n    ...,\n    _type,\n    \n  _type == "cta" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n  }\n,\n    \n  _type == "mainHero" => {\n    ...,\n    titleFont,\n    layout,\n    "backgroundImage": backgroundImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    "backgroundVideo": backgroundVideo.asset->url,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "hero" => {\n    ...,\n    variant,\n    titleFont,\n    imageAlignment,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "doubleHero" => {\n    ...,\n    variant,\n    primaryBadge,\n    primaryTitle,\n    "primaryRichText": primaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "primaryImage": primaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    primaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    secondaryBadge,\n    secondaryTitle,\n    "secondaryRichText": secondaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "secondaryImage": secondaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    secondaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n    \n  _type == "faqAccordion" => {\n    ...,\n    \n  "faqs": array::compact(faqs[]->{\n    title,\n    _id,\n    _type,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  })\n,\n    link{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n    \n  _type == "subscribeNewsletter" => {\n    ...,\n    "subTitle": subTitle[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "helperText": helperText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  _type == "imageLinkCards" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    "cards": array::compact(cards[]{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      ),\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    })\n  }\n,\n    \n  _type == "formBlock" => {\n    ...,\n    title,\n    description,\n    variant,\n    displayMode,\n    triggerText,\n    buttonPosition,\n    "form": form->{\n      _id,\n      title,\n      description,\n      \n  fields[]{\n    label,\n    name,\n    type,\n    required,\n    options,\n    placeholder,\n    type == "curso" => {\n      courseReference->{\n        _id,\n        title,\n        "fechasCapacitacion": fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        }\n      },\n      selectedTrainingDate\n    }\n  },\n  emailRecipients,\n  submitButtonText,\n  successMessage,\n  errorMessage\n,\n      submitButtonText,\n      successMessage,\n      errorMessage\n    }\n  }\n,\n    \n  _type == "tabs" => {\n    ...,\n    title,\n    description,\n    tabs[]{\n      _key,\n      label,\n      content[]{\n        ...,\n        _type,\n        _key,\n        \n  _type == "cta" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n  }\n,\n        \n  _type == "mainHero" => {\n    ...,\n    titleFont,\n    layout,\n    "backgroundImage": backgroundImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Background Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    "backgroundVideo": backgroundVideo.asset->url,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n        \n  _type == "hero" => {\n    ...,\n    variant,\n    titleFont,\n    imageAlignment,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n        \n  _type == "doubleHero" => {\n    ...,\n    variant,\n    primaryBadge,\n    primaryTitle,\n    "primaryRichText": primaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "primaryImage": primaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Primary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    primaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    secondaryBadge,\n    secondaryTitle,\n    "secondaryRichText": secondaryRichText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "secondaryImage": secondaryImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Secondary Image"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    secondaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n        \n  _type == "faqAccordion" => {\n    ...,\n    \n  "faqs": array::compact(faqs[]->{\n    title,\n    _id,\n    _type,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  })\n,\n    link{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n,\n        \n  _type == "subscribeNewsletter" => {\n    ...,\n    "subTitle": subTitle[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    },\n    "helperText": helperText[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n        \n  _type == "imageLinkCards" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    "cards": array::compact(cards[]{\n      ...,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      ),\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n    })\n  }\n,\n        \n  _type == "formBlock" => {\n    ...,\n    title,\n    description,\n    variant,\n    displayMode,\n    triggerText,\n    buttonPosition,\n    "form": form->{\n      _id,\n      title,\n      description,\n      \n  fields[]{\n    label,\n    name,\n    type,\n    required,\n    options,\n    placeholder,\n    type == "curso" => {\n      courseReference->{\n        _id,\n        title,\n        "fechasCapacitacion": fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        }\n      },\n      selectedTrainingDate\n    }\n  },\n  emailRecipients,\n  submitButtonText,\n  successMessage,\n  errorMessage\n,\n      submitButtonText,\n      successMessage,\n      errorMessage\n    }\n  }\n,\n        \n  _type == "imageGallery" => {\n    ...,\n    title,\n    description,\n    layout,\n    columns,\n    slidesPerRow,\n    "images": images[]{\n      ...,\n      "image": image{\n        ...,\n        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background,\n      },\n      caption\n    }\n  }\n,\n        \n  _type == "featuredBlogs" => {\n    ...,\n    title,\n    subtitle,\n    displayMode,\n    blogCount,\n    buttonText,\n    "showViewAllButton": showViewAllButton == "yes",\n    "blogs": select(\n      displayMode == "curated" => blogs[]-> {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      },\n      displayMode == "latest" => *[\n        _type == "blog" \n        && (seoHideFromLists != true)\n      ] | order(publishedAt desc, _createdAt desc)[0...3] {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      }\n    )\n  }\n,\n        _type == "tabs" => {\n          ...,\n          title,\n          description,\n          tabs[]{\n            _key,\n            label,\n            content[]{ \n              ...,\n              _type,\n              _key\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    \n  _type == "infoSection" => {\n    ...,\n    title,\n    headingLevel,\n    content[]{\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n,\n    \n  _type == "imageGallery" => {\n    ...,\n    title,\n    description,\n    layout,\n    columns,\n    slidesPerRow,\n    "images": images[]{\n      ...,\n      "image": image{\n        ...,\n        "alt": coalesce(alt, asset->altText, asset->originalFilename, "Gallery Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background,\n      },\n      caption\n    }\n  }\n,\n    \n  _type == "specificationsTable" => {\n    ...,\n    title,\n    description,\n    variant,\n    "specifications": specifications[]{\n      _key,\n      label,\n      "content": content[]{\n        ...,\n        \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n      }\n    }\n  }\n,\n    \n  _type == "genericTable" => {\n    ...,\n    title,\n    description,\n    columnCount,\n    columnHeaders,\n    rows[]{\n      _key,\n      cells[]{\n        _key,\n        content,\n        isLastColumn,\n        _type == "richCell" => {\n          content[]{\n            ...,\n            \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n          }\n        }\n      }\n    },\n    variant\n  }\n,\n    \n  _type == "featuredBlogs" => {\n    ...,\n    title,\n    subtitle,\n    displayMode,\n    blogCount,\n    buttonText,\n    "showViewAllButton": showViewAllButton == "yes",\n    "blogs": select(\n      displayMode == "curated" => blogs[]-> {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      },\n      displayMode == "latest" => *[\n        _type == "blog" \n        && (seoHideFromLists != true)\n      ] | order(publishedAt desc, _createdAt desc)[0...3] {\n        \n  _type,\n  _id,\n  title,\n  description,\n  "slug":slug.current,\n  richText,\n  orderRank,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  publishedAt,\n  \n  authors[0]->{\n    _id,\n    name,\n    position,\n    \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n  }\n\n\n      }\n    )\n  }\n,\n    \n  _type == "highlightedAspects" => {\n    title,\n    description,\n    columns,\n    aspects[]{\n      _key,\n      title,\n      variant,\n      icon,\n      image{\n        ...,\n        "alt": coalesce(asset->altText, asset->originalFilename, "Aspect Image"),\n        "blurData": asset->metadata.lqip,\n        "dominantColor": asset->metadata.palette.dominant.background\n      },\n      content[]{\n        ...,\n        _type == "button" => {\n          ...,\n          text,\n          variant,\n          icon,\n          \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n        },\n        _type == "block" => {\n          ...,\n          \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n        }\n      }\n    }\n  }\n,\n    \n  _type == "videoBlock" => {\n    ...,\n    _key,\n    _type,\n    title,\n    videoType,\n    "mp4File": coalesce(\n      mp4File.asset->url,\n      mp4File.asset->sources[0].url,\n      null\n    ),\n    youtubeUrl,\n    showControls,\n    autoplay,\n    loop,\n    allowFullscreen,\n    "posterImage": posterImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Video Poster"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    }\n  }\n,\n    \n  _type == "videoHero" => {\n    ...,\n    variant,\n    titleFont,\n    videoType,\n    "mp4File": coalesce(\n      mp4File.asset->url,\n      mp4File.asset->sources[0].url,\n      null\n    ),\n    youtubeUrl,\n    showControls,\n    autoplay,\n    loop,\n    "posterImage": posterImage{\n      ...,\n      "alt": coalesce(asset->altText, asset->originalFilename, "Video Hero Poster"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background,\n    },\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "textBlock" => {\n    ...,\n    \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n  }\n,\n    \n  _type == "sucursalesSelector" => {\n    ...,\n    title,\n    description,\n    showMap,\n    showAllRegions,\n    selectedRegions,\n    variant\n  }\n,\n    \n  _type == "cursosBlock" => {\n    ...,\n    title,\n    description,\n    displayMode,\n    "showAllDates": showAllDates == "yes",\n    "cursos": cursos[]-> {\n      _id,\n      _type,\n      title,\n      description,\n      "slug": slug.current,\n      \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n      "fechasCapacitacion": select(\n        ^.showAllDates == "yes" => fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        } | order(fecha asc),\n        fechasCapacitacion[fecha > now()]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        } | order(fecha asc)\n      )\n    }\n  }\n\n  }\n \n}': QueryMotorPentaOrPageBySlugResult;
    '\n  *[_type == "motoresPenta" && defined(slug.current)].slug.current\n': QueryMotoresPentaPathsResult;
    '*[\n  _type == "settings"\n][0]{\n  _id,\n  \n  cotizadorFormTitle,\n  cotizadorFormDescription,\n  "cotizadorForm": coalesce(cotizadorForm->{\n    _id,\n    _type,\n    title,\n    description,\n    "slug": slug.current,\n    \n  fields[]{\n    label,\n    name,\n    type,\n    required,\n    options,\n    placeholder,\n    type == "curso" => {\n      courseReference->{\n        _id,\n        title,\n        "fechasCapacitacion": fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        }\n      },\n      selectedTrainingDate\n    }\n  },\n  emailRecipients,\n  submitButtonText,\n  successMessage,\n  errorMessage\n\n  }, null)\n\n}': COTIZADOR_SETTINGS_QUERYResult;
    '*[\n  _type == "formularios" \n  && _id == $formId\n][0]{\n  _id,\n  title,\n  description,\n  \n  fields[]{\n    label,\n    name,\n    type,\n    required,\n    options,\n    placeholder,\n    type == "curso" => {\n      courseReference->{\n        _id,\n        title,\n        "fechasCapacitacion": fechasCapacitacion[]{\n          nombre,\n          profesor,\n          fecha,\n          hora\n        }\n      },\n      selectedTrainingDate\n    }\n  },\n  emailRecipients,\n  submitButtonText,\n  successMessage,\n  errorMessage\n\n}': COTIZADOR_FORM_BY_ID_QUERYResult;
    '{\n  "results": *[\n    _type in ["page", "blog", "camiones", "buses", "motoresPenta"]\n    && (\n      title match $searchTerm || \n      description match $searchTerm\n    )\n  ] | order(_createdAt desc) [0...20] {\n    _id,\n    _type,\n    title,\n    description,\n    "slug": slug.current,\n    "image": image{\n      "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background\n    },\n    "taxonomy": coalesce(taxonomias->{\n      prefLabel,\n      conceptId\n    }, null),\n    _createdAt\n  }\n}': SEARCH_QUERYResult;
    '\n  *[\n    _type == $productType && \n    taxonomias._ref == $taxonomyId\n  ]{\n    _id,\n    title,\n    "slug": slug.current,\n    description,\n    "image": image {\n        "asset": asset->,\n        "_type": "image"\n    },\n    "taxonomy": taxonomias->{\n      prefLabel,\n      conceptId\n    }\n  } | order(title asc)\n': PRODUCT_LISTING_QUERYResult;
    '\n  *[_type == "skosConcept" && \n    count(broader[_ref in *[\n      _type == "skosConcept" && \n      conceptId == $conceptId\n    ]._id]) > 0\n  ]{\n    prefLabel,\n    conceptId,\n    _id\n  } | order(prefLabel)\n': PRODUCT_TAXONOMIES_QUERYResult;
    '*[_type == "camiones" && slug.current == $slug][0]{\n  _id,\n  _type,\n  title,\n  subtitle,\n  description,\n  image,\n  \n  "pageBuilder": pageBuilder[]{\n    ...,\n    _type,\n    \n  _type == "cta" => {\n    ...,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n\n  },\n  _type == "hero" => {\n    ...,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n\n  },\n  _type == "mainHero" => {\n    ...,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n\n  },\n  _type == "videoHero" => {\n    ...,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n\n  },\n  _type == "imageLinkCards" => {\n    ...,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n\n  },\n  _type == "doubleHero" => {\n    ...,\n    "primaryButtons": primaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    "secondaryButtons": secondaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n\n  }\n,\n  taxonomias,\n  slug\n}': CAMION_BY_SLUG_QUERYResult;
    '*[_type == "buses" && slug.current == $slug][0]{\n  _id,\n  _type,\n  title,\n  subtitle,\n  description,\n  image,\n  \n  "pageBuilder": pageBuilder[]{\n    ...,\n    _type,\n    \n  _type == "cta" => {\n    ...,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n\n  },\n  _type == "hero" => {\n    ...,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n\n  },\n  _type == "mainHero" => {\n    ...,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n\n  },\n  _type == "videoHero" => {\n    ...,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n\n  },\n  _type == "imageLinkCards" => {\n    ...,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n\n  },\n  _type == "doubleHero" => {\n    ...,\n    "primaryButtons": primaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    "secondaryButtons": secondaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n\n  }\n,\n  taxonomias,\n  slug\n}': BUS_BY_SLUG_QUERYResult;
    '*[_type == "motoresPenta" && slug.current == $slug][0]{\n  _id,\n  _type,\n  title,\n  subtitle,\n  description,\n  image,\n  \n  "pageBuilder": pageBuilder[]{\n    ...,\n    _type,\n    \n  _type == "cta" => {\n    ...,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n\n  },\n  _type == "hero" => {\n    ...,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n\n  },\n  _type == "mainHero" => {\n    ...,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n\n  },\n  _type == "videoHero" => {\n    ...,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n\n  },\n  _type == "imageLinkCards" => {\n    ...,\n    \n  buttons[]{\n    text,\n    variant,\n    icon,\n    _key,\n    _type,\n    \n  "href": select(\n    defined(url.type) => select(\n      url.type == "internal" => url.internal->slug.current,\n      url.type == "external" => url.external,\n      url.type == "file" => url.file.asset->url,\n      "#"\n    ),\n    defined(url.customUrl.type) => select(\n      url.customUrl.type == "internal" => url.customUrl.internal->slug.current,\n      url.customUrl.type == "external" => url.customUrl.external,\n      url.customUrl.type == "file" => url.customUrl.file.asset->url,\n      "#"\n    ),\n    "#"\n  ),\n  "openInNewTab": coalesce(url.openInNewTab, url.customUrl.openInNewTab, false)\n\n  }\n\n  },\n  _type == "doubleHero" => {\n    ...,\n    "primaryButtons": primaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    "secondaryButtons": secondaryButtons[]{\n      text,\n      variant,\n      icon,\n      _key,\n      _type,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    }\n  }\n\n  }\n,\n  taxonomias,\n  slug\n}': MOTOR_PENTA_BY_SLUG_QUERYResult;
    '*[_type == "settings"][0]{\n  customerServicePhone,\n  roadEmergencyPhone,\n  roadEmergencyPhone2,\n  "contactPageUrl": select(\n    contactPageUrl.type == "internal" => contactPageUrl.internal->slug.current,\n    contactPageUrl.type == "external" => contactPageUrl.external,\n    null\n  )\n}': CONTACT_INFO_QUERYResult;
    '*[_type == "sucursales"]{\n  _id,\n  _type,\n  title,\n  region,\n  telefono,\n  email,\n  direccion,\n  latitud,\n  longitud,\n  "slug": slug.current,\n  "personas": personas[]{\n    nombre,\n    cargo,\n    telefono,\n    email\n  }\n} | order(region asc, title asc)': QuerySucursalesDataResult;
    '*[\n  _type == "sucursales" \n  && slug.current == $slug\n][0]{\n  _id,\n  _type,\n  title,\n  region,\n  telefono,\n  email,\n  direccion,\n  latitud,\n  longitud,\n  "slug": slug.current,\n  "personas": personas[]{\n    nombre,\n    cargo,\n    telefono,\n    email\n  }\n}': QuerySucursalBySlugResult;
    '*[\n  _type == "sucursales" \n  && region == $region\n]{\n  _id,\n  _type,\n  title,\n  region,\n  telefono,\n  email,\n  direccion,\n  latitud,\n  longitud,\n  "slug": slug.current,\n  "personas": personas[]{\n    nombre,\n    cargo,\n    telefono,\n    email\n  }\n} | order(title asc)': QuerySucursalesByRegionResult;
    '\n  *[_type == "sucursales" && defined(slug.current)].slug.current\n': QuerySucursalesPathsResult;
    '\n  *[_type == "sucursales" && defined(region)].region | order(region asc) | unique\n': QueryAllRegionesResult;
    '{\n  "results": *[\n    _type in ["page", "blog", "camiones", "buses", "motoresPenta", "sucursales", "cursos"]\n    && (\n      title match $searchTerm || \n      description match $searchTerm ||\n      region match $searchTerm\n    )\n  ] | order(_createdAt desc) [0...20] {\n    _id,\n    _type,\n    title,\n    description,\n    "slug": slug.current,\n    "image": image{\n      "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background\n    },\n    "taxonomy": coalesce(taxonomias->{\n      prefLabel,\n      conceptId\n    }, null),\n    _type == "sucursales" => {\n      region,\n      direccion\n    },\n    _type == "cursos" => {\n      "fechasProximas": *[_type == "cursos" && _id == ^._id][0].fechasCapacitacion[fecha > now()][0..1]\n    },\n    _createdAt\n  }\n}': SEARCH_QUERY_WITH_SUCURSALESResult;
    '*[_type == "cursos"]{\n  _id,\n  _type,\n  title,\n  description,\n  "slug": slug.current,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  "fechasCapacitacion": fechasCapacitacion[]{\n    nombre,\n    profesor,\n    fecha,\n    hora\n  }\n} | order(title asc)': QueryCursosDataResult;
    '*[\n  _type == "cursos" \n  && slug.current == $slug\n][0]{\n  _id,\n  _type,\n  title,\n  description,\n  "slug": slug.current,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  "fechasCapacitacion": fechasCapacitacion[]{\n    nombre,\n    profesor,\n    fecha,\n    hora\n  }\n}': QueryCursoBySlugResult;
    '\n  *[_type == "cursos" && defined(slug.current)].slug.current\n': QueryCursosPathsResult;
    '*[_type == "repuestos"]{\n  _id,\n  _type,\n  title,\n  "slug": slug.current,\n  content,\n  category,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n} | order(title asc)': QueryRepuestosDataResult;
    '*[\n  _type == "repuestos" \n  && slug.current == $slug\n][0]{\n  _id,\n  _type,\n  title,\n  "slug": slug.current,\n  category,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n,\n  \n  richText[]{\n    ...,\n    _type == "button" => {\n      ...,\n      text,\n      variant,\n      icon,\n      "openInNewTab": url.openInNewTab,\n      "href": select(\n        url.type == "internal" => url.internal->slug.current,\n        url.type == "external" => url.external,\n        url.href\n      )\n    },\n    _type == "block" => {\n      ...,\n      \n  markDefs[]{\n    ...,\n    \n  ...customLink{\n    openInNewTab,\n    "href": select(\n      type == "internal" => internal->slug.current,\n      type == "external" => external,\n      type == "file" => file.asset->url,\n      "#"\n    ),\n  }\n\n  }\n\n    }\n  }\n\n}': QueryRepuestoBySlugResult;
    '*[\n  _type == "repuestos" \n  && category == $category\n]{\n  _id,\n  _type,\n  title,\n  "slug": slug.current,\n  content,\n  category,\n  \n  image{\n    ...,\n    "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n    "blurData": asset->metadata.lqip,\n    "dominantColor": asset->metadata.palette.dominant.background,\n  }\n\n} | order(title asc)': QueryRepuestosByCategoryResult;
    '\n  *[_type == "repuestos" && defined(slug.current)].slug.current\n': QueryRepuestosPathsResult;
    '{\n  "results": *[\n    _type in ["page", "blog", "camiones", "buses", "motoresPenta", "sucursales", "cursos", "repuestos"]\n    && (\n      title match $searchTerm || \n      description match $searchTerm ||\n      region match $searchTerm ||\n      category match $searchTerm\n    )\n  ] | order(_createdAt desc) [0...20] {\n    _id,\n    _type,\n    title,\n    description,\n    "slug": slug.current,\n    "image": image{\n      "alt": coalesce(asset->altText, asset->originalFilename, "Image-Broken"),\n      "blurData": asset->metadata.lqip,\n      "dominantColor": asset->metadata.palette.dominant.background\n    },\n    "taxonomy": coalesce(taxonomias->{\n      prefLabel,\n      conceptId\n    }, null),\n    _type == "sucursales" => {\n      region,\n      direccion\n    },\n    _type == "cursos" => {\n      "fechasProximas": *[_type == "cursos" && _id == ^._id][0].fechasCapacitacion[fecha > now()][0..1]\n    },\n    _type == "repuestos" => {\n      category\n    },\n    _createdAt\n  }\n}': SEARCH_QUERY_WITH_REPUESTOSResult;
    '\n  *[_type == "repuestos" && defined(category)].category | order(category asc) | unique\n': QueryRepuestosCategoriesResult;
  }
}
