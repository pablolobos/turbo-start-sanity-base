import { TruckIcon } from "lucide-react";
import { defineField, defineType } from "sanity";

import { PathnameFieldComponent } from "../../components/slug-field-component";
import { GROUP, GROUPS } from "../../utils/constant";
import { ogFields } from "../../utils/og-fields";
import { seoFields } from "../../utils/seo-fields";
import { createSlug, isUnique } from "../../utils/slug";
import { richTextField } from "../common";
import { pageBuilderField } from "../common";
import { branchFilter } from 'sanity-plugin-taxonomy-manager'
import { ReferenceHierarchyInput } from 'sanity-plugin-taxonomy-manager'

export const camiones = defineType({
    name: "camiones",
    title: "Camiones",
    type: "document",
    icon: TruckIcon,
    description:
        "CatÃ¡logo de camiones Volvo. Cada entrada representa un modelo especÃ­fico con sus caracterÃ­sticas y detalles.",
    groups: GROUPS,
    fields: [
        defineField({
            name: "title",
            type: "string",
            title: "TÃ­tulo",
            description: "Nombre o modelo del camiÃ³n",
            group: GROUP.MAIN_CONTENT,
            validation: (Rule) => Rule.required().error("El tÃ­tulo es obligatorio"),
        }),
        defineField({
            name: 'taxonomias',
            title: 'Taxonomias',
            group: GROUP.MAIN_CONTENT,
            type: 'reference',
            to: { type: 'skosConcept' },
            options: {
                filter: branchFilter({ schemeId: '4bb257', branchId: '278c9c' }),
                disableNew: true,
            },
            components: { field: ReferenceHierarchyInput },
        }),
        defineField({
            name: "category",
            title: "CategorÃ­a",
            type: "string",
            description: "Selecciona la categorÃ­a del camiÃ³n",
            group: GROUP.MAIN_CONTENT,
            options: {
                list: [
                    { title: "Larga distancia", value: "larga-distancia" },
                    { title: "ConstrucciÃ³n y minerÃ­a", value: "construccion-y-mineria" },
                    { title: "Forestal", value: "forestal" },
                    { title: "DistribuciÃ³n Urbana y Regional", value: "distribucion-urbana-y-regional" },
                    { title: "Volvo Electric", value: "volvo-electric" },
                    { title: "Usados", value: "usados" }
                ],
                layout: "dropdown"
            },
            validation: (Rule) => Rule.required().error("La categorÃ­a es obligatoria"),
        }),
        defineField({
            name: "description",
            type: "text",
            title: "DescripciÃ³n",
            description:
                "Breve descripciÃ³n del camiÃ³n que aparecerÃ¡ en los resultados de bÃºsqueda y vistas previas",
            rows: 3,
            group: GROUP.MAIN_CONTENT,
            validation: (rule) => [
                rule
                    .min(140)
                    .warning(
                        "La descripciÃ³n debe tener al menos 140 caracteres para optimizar la visibilidad en resultados de bÃºsqueda",
                    ),
                rule
                    .max(160)
                    .warning(
                        "La descripciÃ³n no debe exceder los 160 caracteres ya que serÃ¡ truncada en los resultados de bÃºsqueda",
                    ),
            ],
        }),
        defineField({
            name: "slug",
            type: "slug",
            title: "URL",
            description:
                "La direcciÃ³n web para este camiÃ³n (por ejemplo, '/camiones/volvo-fh16' crearÃ¡ una pÃ¡gina en tudominio.com/camiones/volvo-fh16)",
            group: GROUP.MAIN_CONTENT,
            components: {
                field: PathnameFieldComponent,
            },
            options: {
                source: "title",
                slugify: createSlug,
                isUnique,
            },
            validation: (Rule) => [
                Rule.required().error("La URL es obligatoria"),
                Rule.custom((value, context) => {
                    if (!value?.current) return true;
                    if (!value.current.startsWith("/camiones/")) {
                        return 'La URL debe comenzar con "/camiones/"';
                    }
                    return true;
                }),
            ],
        }),
        defineField({
            name: "image",
            type: "image",
            title: "Imagen Principal",
            description:
                "Imagen principal del camiÃ³n que se usarÃ¡ en listados y redes sociales",
            group: GROUP.MAIN_CONTENT,
            options: {
                hotspot: true,
            },
            validation: (Rule) => Rule.required(),
        }),
        defineField({
            ...richTextField,
            description: "Contenido detallado sobre el camiÃ³n y sus caracterÃ­sticas",
            group: GROUP.MAIN_CONTENT,
        }),
        pageBuilderField,
        ...seoFields,
        ...ogFields,
    ],
    preview: {
        select: {
            title: "title",
            media: "image",
            slug: "slug.current",
            category: "category",
        },
        prepare: ({ title, media, slug, category }) => {
            return {
                title: title || "CamiÃ³n sin tÃ­tulo",
                subtitle: `ğŸš› ${category ? `${category} â€¢ ` : ""}${slug || "sin-url"}`,
                media,
            };
        },
    },
}); 